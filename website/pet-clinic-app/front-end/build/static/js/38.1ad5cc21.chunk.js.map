{"version":3,"sources":["components/pages/staffPanel/pettreatmenthistory/UpdateTreatment.js","components/pages/staffPanel/pettreatmenthistory/AddPetTreatment.js","components/shared/hooks/treatmenthistory-hook.js","components/pages/staffPanel/pettreatmenthistory/PetTreatmentHistory.js","components/shared/hooks/fetch-hook.js","components/utils/modal/modalMotion.js","components/utils/modal/Modal.js"],"names":["UpdatetTeatment","dispatch","state","className","onClick","type","data","value","caseId","onChange","e","currentTarget","field","cases","map","cAse","index","id","name","disabled","vaccineId","vaccines","vaccine","medDoses","length","medDose","Fragment","medId","medicines","medicine","dose","min","max","onKeyDown","preventDefault","missingInput","style","color","textAlign","width","margin","marginTop","isUpdatingTreatment","AddPetTreatment","isSavingTreatment","treatmentHistoryReducer","action","updateTreatmentModal","treatmentId","addTreatmentModal","trObj","dose_med","case_id","vaccine_id","presShowId","isGettingTreatments","treatments","getTreatmentsFailure","error","isGettingMVC","getMVCfailure","appId","petId","parseInt","isNaN","filter","every","med_dose","savingTreatmentResult","result","savingTreatmentFailure","updateTreatmentResult","updateTreatmentFailure","useTreatmentHistory","initialData","useReducer","date","PetTreatmentHistory","location","useLocation","auth","useContext","authContext","setPageIsLoading","pageLoadingContext","sendRequest","useFetch","useEffect","isMount","getTreatments","a","process","token","response","treatment","vaccine_name","doses","split","meds","med_names","medIds","med_ids","i","push","med","message","getMVC","saveTreatment","JSON","stringify","dateFormat","Date","updateTreatment","Modal","modalClass","header","body","refresh","UpdateTreatment","pet_name","first_name","last_name","case_name","onMouseEnter","onMouseLeave","doseMed","doctor_id","userId","console","log","useCallback","url","method","headers","fetch","json","parsedData","ok","Error","modalMotion","initial","y","final","exit","modalVariant","props","useState","show","setShow","navigate","useNavigate","AnimatePresence","motion","div","variants","animate","setTimeout","window","reload","redirectTo"],"mappings":"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","file":"static/js/38.1ad5cc21.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nconst UpdatetTeatment = ({ dispatch, state }) => {\r\n\r\n  return (\r\n    <div className=\"update-modal-background flex falign-center fjust-center\">\r\n      <div className=\"modal-container flex-col fgap-16p falign-center\">\r\n        <div className=\"x-close\"><button\r\n          onClick={() => dispatch({ type: 'updateModal', data: false })}>\r\n          <i className=\"fa-solid fa-xmark\"></i></button>\r\n        </div>\r\n        <div className=\"modal-title\">\r\n          Update Treatment History:\r\n        </div>\r\n        <form className=\"flex-col falign-center fjust-center\r\n                 gap-16p\">\r\n          {/* first input */}\r\n\r\n          {/* second input */}\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              case:\r\n            </label>\r\n            <select\r\n              value={state.caseId}\r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterValue', data: e.currentTarget.value, field: 'caseId' })\r\n              }}\r\n            >\r\n              <option value='0'>Select Case</option>\r\n              {state.cases && state.cases.map((cAse, index) => {\r\n                return (<option key={index} value={cAse.id}>{cAse.name}</option>)\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          {/* fourth input */}\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              vaccine:\r\n            </label>\r\n            <select\r\n              disabled={state.caseId !== 1}\r\n              value={state.vaccineId}\r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterValue', data: e.currentTarget.value, field: 'vaccineId' })\r\n              }}\r\n            >\r\n              <option value='0'>Select Vaccine</option>\r\n              {state.vaccines && state.vaccines.map((vaccine, index) => {\r\n                return (<option key={index} value={vaccine.id}>{vaccine.name}</option>)\r\n              })}\r\n            </select>\r\n          </div>\r\n          {/* fifth input */}\r\n          {\r\n            state.medDoses.length && state.medDoses.map((medDose, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n                    <label>\r\n                      Medicine:\r\n                    </label>\r\n                    <select\r\n                      disabled={state.caseId === 1 || !state.caseId}\r\n                      value={medDose.medId}\r\n                      onChange={(e) => {\r\n                        dispatch({ type: 'enterMed', data: e.currentTarget.value, index })\r\n                      }}\r\n                    >\r\n                      <option value='0'>Select Medicine</option>\r\n                      {state.medicines && state.medicines.map((medicine, index) => {\r\n                        return (<option key={index} value={medicine.id}>{medicine.name}</option>)\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n                    <label>\r\n                      Daily Dosage:\r\n                    </label>\r\n                    <input\r\n                      disabled={state.caseId === 1 || !state.caseId}\r\n\r\n                      value={state.medDoses[index].dose}\r\n                      onChange={(e) => {\r\n                        dispatch({ type: 'enterDose', data: e.currentTarget.value, index })\r\n                      }}\r\n\r\n                      type=\"number\" id=\"dosage\" name=\"dosage\" min=\"1\" max=\"10\"\r\n                      onKeyDown={(e) => {\r\n                        e.preventDefault()\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </React.Fragment>)\r\n            })\r\n          }\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              Add/remove medicine:\r\n            </label>\r\n            <button\r\n              disabled={state.caseId === 1 || !state.caseId}\r\n\r\n              onClick={() => {\r\n                dispatch({ type: 'removeMedicine' })\r\n              }}\r\n              type='button'>-</button>\r\n            <button\r\n              disabled={state.caseId === 1 || !state.caseId}\r\n\r\n              onClick={() => {\r\n                dispatch({ type: 'addMedicine' })\r\n              }}\r\n              type='button'>+</button>\r\n          </div>\r\n\r\n        </form>\r\n        <div className=\"add-treatment-button-container flex-row gap-24p fjust-center\">\r\n          {state.missingInput && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto', marginTop: '1rem' }}>Please Select all necessary fields </p>}\r\n          <button\r\n            disabled={state.isUpdatingTreatment}\r\n            onClick={() => {\r\n              dispatch({ type: 'startUpdating' })\r\n            }}\r\n            className=\"btn-rec-purple\">Update</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default UpdatetTeatment","\r\n\r\n\r\nimport React from 'react'\r\n\r\nconst AddPetTreatment = ({ dispatch, state }) => {\r\n  return (\r\n    <div className=\"add-modal-background flex falign-center fjust-center\">\r\n      <div className=\"modal-container flex-col fgap-16p falign-center\">\r\n        <div \r\n        className=\"x-close\"><button\r\n          onClick={() => {\r\n            if (state.isSavingTreatment)\r\n              return\r\n            dispatch({ type: 'addModal', data: false })}\r\n\r\n          }>\r\n          <i className=\"fa-solid fa-xmark\"></i></button>\r\n        </div>\r\n        <div className=\"modal-title\">\r\n          Add new treatment:\r\n        </div>\r\n        <form className=\"flex-col falign-center fjust-center\r\n                 gap-16p\">\r\n          {/* first input */}\r\n\r\n          {/* second input */}\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              case:\r\n            </label>\r\n            <select\r\n              value={state.caseId}\r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterValue', data: e.currentTarget.value, field: 'caseId' })\r\n              }}\r\n            >\r\n              <option value='0'>Select Case</option>\r\n              {state.cases && state.cases.map((cAse, index) => {\r\n                return (<option key={index} value={cAse.id}>{cAse.name}</option>)\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          {/* fourth input */}\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              vaccine:\r\n            </label>\r\n            <select\r\n              disabled={state.caseId !== 1}\r\n              value={state.vaccineId}\r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterValue', data: e.currentTarget.value, field: 'vaccineId' })\r\n              }}\r\n            >\r\n              <option value='0'>Select Vaccine</option>\r\n              {state.vaccines && state.vaccines.map((vaccine, index) => {\r\n                return (<option key={index} value={vaccine.id}>{vaccine.name}</option>)\r\n              })}\r\n            </select>\r\n          </div>\r\n          {/* fifth input */}\r\n          {\r\n            state.medDoses.length && state.medDoses.map((medDose, index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n                    <label>\r\n                      Medicine:\r\n                    </label>\r\n                    <select\r\n                      disabled={state.caseId === 1 || !state.caseId}\r\n                      value={medDose.medId}\r\n                      onChange={(e) => {\r\n                        dispatch({ type: 'enterMed', data: e.currentTarget.value, index })\r\n                      }}\r\n                    >\r\n                      <option value='0'>Select Medicine</option>\r\n                      {state.medicines && state.medicines.map((medicine, index) => {\r\n                        return (<option key={index} value={medicine.id}>{medicine.name}</option>)\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n                    <label>\r\n                      Daily Dosage:\r\n                    </label>\r\n                    <input\r\n                      disabled={state.caseId === 1 || !state.caseId}\r\n\r\n                      value={state.medDoses[index].dose}\r\n                      onChange={(e) => {\r\n                        dispatch({ type: 'enterDose', data: e.currentTarget.value, index })\r\n                      }}\r\n                      \r\n                      type=\"number\" id=\"dosage\" name=\"dosage\" min=\"1\" max=\"10\" \r\n                      onKeyDown={(e) => {\r\n                        e.preventDefault()\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </React.Fragment>)\r\n            })\r\n          }\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              Add/remove medicine:\r\n            </label>\r\n            <button\r\n              disabled={state.caseId === 1 || !state.caseId}\r\n\r\n              onClick={() => {\r\n                dispatch({ type: 'removeMedicine' })\r\n              }}\r\n              type='button'>-</button>\r\n            <button\r\n              disabled={state.caseId === 1 || !state.caseId}\r\n\r\n              onClick={() => {\r\n                dispatch({ type: 'addMedicine' })\r\n              }}\r\n              type='button'>+</button>\r\n          </div>\r\n\r\n        </form>\r\n        <div className=\"add-treatment-button-container flex-row gap-24p fjust-center\">\r\n          {state.missingInput && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto', marginTop: '1rem' }}>Please Select all necessary fields </p>}\r\n          <button \r\n          onClick={() => {\r\n            if (state.isSavingTreatment)\r\n              return\r\n            dispatch({ type: 'startTreatment' })\r\n          }}\r\n          className=\"btn-rec-purple\">Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPetTreatment","import { useReducer } from 'react'\r\n\r\nconst treatmentHistoryReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'updateModal': {\r\n      if (action.data === false) \r\n        return {\r\n          ...state,\r\n          updateTreatmentModal: action.data,\r\n          caseId: 0,\r\n          medDoses: [{\r\n            medId: 0,\r\n            dose: 1\r\n          }],\r\n          vaccineId: 0,\r\n          treatmentId: 0,\r\n          missingInput: false,\r\n        }\r\n      else\r\n        return {\r\n          ...state,\r\n          missingInput: false,\r\n          updateTreatmentModal: action.data,\r\n          addTreatmentModal: false,\r\n          medDoses: action.trObj.dose_med ? action.trObj.dose_med : [{ medId: 0, dose: 1 }],\r\n          caseId: action.trObj.case_id,\r\n          vaccineId: action.trObj.vaccine_id ? action.trObj.vaccine_id : 0,\r\n          treatmentId: action.treatmentId\r\n\r\n        }\r\n    }\r\n    case 'addModal': {\r\n     \r\n        return {\r\n          ...state,\r\n          addTreatmentModal: action.data,\r\n          updateTreatmentModal: false,\r\n          caseId: 0,\r\n          medDoses: [{\r\n            medId: 0,\r\n            dose: 1\r\n          }],\r\n          vaccineId: 0,\r\n          missingInput: false,\r\n        }\r\n      \r\n      }\r\n    \r\n    case 'showMiniModal':\r\n      return {\r\n        ...state,\r\n        presShowId: action.data\r\n      }\r\n    case 'hideMiniModal':\r\n      return {\r\n        ...state,\r\n        presShowId: null\r\n      }\r\n    case 'showMiniModalClick':\r\n      return {\r\n        ...state,\r\n        presShowId: state.presShowId ? null : action.data\r\n      }\r\n    case 'getTreatmentsSuccess':\r\n      return {\r\n        ...state,\r\n        isGettingTreatments: false,\r\n        treatments: action.data\r\n      }\r\n    case 'getTreatmentsFailure':\r\n      return {\r\n        ...state,\r\n        isGettingTreatments: false,\r\n        getTreatmentsFailure: action.error\r\n      }\r\n    case 'getMVCsuccess':\r\n      return {\r\n        ...state,\r\n        isGettingMVC: false,\r\n        vaccines: action.data.vaccines,\r\n        medicines: action.data.medicines,\r\n        cases: action.data.cases\r\n      }\r\n    case 'getMVCfailure':\r\n      return {\r\n        ...state,\r\n        isGettingMVC: false,\r\n        getMVCfailure: action.error\r\n      }\r\n    case 'getReset':\r\n      return {\r\n        isGettingMVC: false,\r\n        isGettingTreatments: false,\r\n      }\r\n\r\n    case 'prepareAddTreatment':\r\n      return {\r\n        ...state,\r\n        appId: action.data.appId,\r\n        petId: action.data.petId\r\n\r\n      }\r\n    case 'enterValue':\r\n      if (action.field === 'caseId')\r\n        return {\r\n          ...state,\r\n          vaccineId: 0,\r\n          [action.field]: parseInt(action.data)\r\n  \r\n        }\r\n      return {\r\n        ...state,\r\n        [action.field]: parseInt(action.data)\r\n      }\r\n    case 'enterMed': {\r\n      return {\r\n        ...state,\r\n        medDoses: state.medDoses.map((medDose, index) => {\r\n          return { ...medDose, medId: (index === action.index) ? parseInt(action.data) : medDose.medId }\r\n        })\r\n      }\r\n    }\r\n    case 'enterDose': {\r\n      if (isNaN(action.data))\r\n        return state\r\n      return {\r\n        ...state,\r\n        medDoses: state.medDoses.map((medDose, index) => {\r\n          return { ...medDose, dose: (index === action.index) ? parseInt(action.data) : medDose.dose }\r\n        })\r\n      }\r\n    }\r\n    case 'addMedicine':\r\n      return {\r\n        ...state,\r\n        medDoses: [...state.medDoses, ...[{ medId: 0, dose: 1 }]]\r\n      }\r\n    case 'removeMedicine': {\r\n      if (state.medDoses.length === 1)\r\n        return state\r\n      return {\r\n        ...state,\r\n        medDoses: state.medDoses.filter((medDose, index) => {\r\n          return (index !== state.medDoses.length - 1)\r\n        })\r\n      }\r\n    }\r\n    case 'startTreatment': {\r\n      if (!state.caseId)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n      if (state.caseId === 1 && !state.vaccineId)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n      if(state.caseId !== 1) {\r\n        const isFilled = (med_dose) => {\r\n          return med_dose.medId !== 0\r\n        } \r\n        if (!state.medDoses.every(isFilled))   \r\n          return {\r\n            ...state,\r\n            missingInput: true\r\n          }    \r\n      }\r\n      return {\r\n        ...state,\r\n        missingInput: false,\r\n        isSavingTreatment: true\r\n      }\r\n        \r\n    }\r\n    case 'startUpdating': {\r\n      if (!state.caseId)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n      if (state.caseId === 1 && !state.vaccineId)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n      if(state.caseId !== 1) {\r\n        const isFilled = (med_dose) => {\r\n          return med_dose.medId !== 0\r\n        } \r\n        if (!state.medDoses.every(isFilled))   \r\n          return {\r\n            ...state,\r\n            missingInput: true\r\n          }    \r\n      }\r\n      return {\r\n        ...state,\r\n        missingInput: false,\r\n        isUpdatingTreatment: true\r\n      }\r\n        \r\n    }\r\n    case 'saveTreatmentSuccess': \r\n      return {\r\n        ...state,\r\n        isSavingTreatment: false,\r\n        savingTreatmentResult: action.data.result,\r\n        savingTreatmentFailure: ''\r\n      }\r\n    case 'updateTreatmentSuccess': \r\n      return {\r\n        ...state,\r\n        isUpdatingTreatment: false,\r\n        updateTreatmentResult: action.data.result,\r\n        updateTreatmentFailure: ''\r\n      }\r\n    case 'saveTreatmentFailure': \r\n      return {\r\n        ...state,\r\n        isSavingTreatment: false,\r\n        savingTreatmentFailure: action.error\r\n      }\r\n    case 'updateTreatmentFailure': \r\n      return {\r\n        ...state,\r\n        isUpdatingTreatment: false,\r\n        updateTreatmentFailure: action.error\r\n      }\r\n    case 'errorModalExit':\r\n      return {\r\n        ...state,\r\n        getTreatmentsFailure: '',\r\n        getMVCfailure: '',\r\n        savingTreatmentFailure: '',\r\n        updateTreatmentFailure: ''\r\n      }\r\n    default:\r\n      break\r\n  }\r\n}\r\nconst useTreatmentHistory = (initialData) => {\r\n  const [state, dispatch] = useReducer(treatmentHistoryReducer, initialData)\r\n  return [state, dispatch]\r\n}\r\nexport default useTreatmentHistory","\r\nimport { useEffect, useContext } from 'react'\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport UpdateTreatment from './UpdateTreatment';\r\nimport AddPetTreatment from './AddPetTreatment';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { authContext } from '../../../shared/context/auth-context';\r\nimport { pageLoadingContext } from '../../../shared/context/loading-context';\r\nimport useFetch from '../../../shared/hooks/fetch-hook';\r\nimport useTreatmentHistory from '../../../shared/hooks/treatmenthistory-hook';\r\nimport Modal from '../../../utils/modal/Modal'\r\nimport dateFormat from 'dateformat';\r\n\r\nconst initialData = {\r\n  updateTreatmentModal: false,\r\n  addTreatmentModal: false,\r\n\r\n  isGettingTreatments: true,\r\n  treatments: null,\r\n  getTreatmentsFailure: '',\r\n\r\n  presShowId: null,\r\n\r\n  isGettingMVC: true,\r\n  getMVCfailure: '',\r\n  vaccines: null,\r\n  medicines: null,\r\n  cases: null,\r\n\r\n  date: null,\r\n  petId: null,\r\n  caseId: 0,\r\n  medDoses: [{\r\n    medId: 0,\r\n    dose: 1\r\n  }],\r\n  appId: null,\r\n  vaccineId: 0,\r\n  treatmentId: 0,\r\n\r\n  missingInput: false,\r\n  isSavingTreatment: false,\r\n  savingTreatmentResult: '',\r\n  savingTreatmentFailure: '',\r\n\r\n  isUpdatingTreatment: false,\r\n  updateTreatmentResult: '',\r\n  updateTreatmentFailure: ''\r\n\r\n\r\n\r\n}\r\nconst PetTreatmentHistory = () => {\r\n  const location = useLocation()\r\n  const auth = useContext(authContext)\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n  const sendRequest = useFetch()\r\n  const [state, dispatch] = useTreatmentHistory(initialData)\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getTreatments = async (appId) => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}vet/treatments/${appId}`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (isMount && response) {\r\n          const treatments = response.map((treatment) => {\r\n            const dose_med = []\r\n            if (!treatment.vaccine_name) {\r\n              let doses = treatment.doses.split(',')\r\n              let meds = treatment.med_names.split(',')\r\n              let medIds = treatment.med_ids.split(',')\r\n              for (let i = 0; i < doses.length; i++)\r\n                dose_med.push({ med: meds[i], medId: medIds[i], dose: doses[i] })\r\n              return {\r\n                ...treatment,\r\n                dose_med\r\n              }\r\n            } else\r\n              return treatment\r\n          })\r\n          dispatch({ type: 'getTreatmentsSuccess', data: treatments })\r\n          dispatch({ type: 'prepareAddTreatment', data: { petId: location.state.petId, appId: location.state.appId } })\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'getTreatmentsFailure', error: e.message })\r\n      }\r\n    }\r\n    if (location.state) {\r\n      getTreatments(location.state.appId)\r\n    } else\r\n      dispatch({ type: 'getReset' })\r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, location.state, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getMVC = async () => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}vet/casemedvac`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (isMount && response) {\r\n          dispatch({ type: 'getMVCsuccess', data: response })\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'getMVCfailure', error: e.message })\r\n      }\r\n    }\r\n    if (location.state) {\r\n      getMVC()\r\n    } else {\r\n      dispatch({ type: 'getReset' })\r\n    }\r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, location.state, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const saveTreatment = async () => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}vet/treatments`, 'POST', JSON.stringify({\r\n          date: dateFormat(new Date(), \"UTC:yyyy-mm-dd HH:MM:ss\"),\r\n          petId: state.petId,\r\n          caseId: state.caseId,\r\n          medDoses: state.medDoses,\r\n          appId: state.appId,\r\n          vaccineId: state.vaccineId\r\n        }), {\r\n          'Authorization': `Bearer ${auth.token}`,\r\n          'Content-Type': 'application/json'\r\n        })\r\n        if (isMount && response) {\r\n          dispatch({ type: 'saveTreatmentSuccess', data: response })\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'saveTreatmentFailure', error: e.message })\r\n      }\r\n    }\r\n    \r\n    if (state.isSavingTreatment)\r\n      saveTreatment()\r\n  \r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, state.appId, state.caseId, state.isSavingTreatment, state.medDoses, state.petId, state.vaccineId, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const updateTreatment = async () => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}vet/treatments`, 'PATCH', JSON.stringify({\r\n          treatmentId: state.treatmentId,\r\n          petId: state.petId,\r\n          caseId: state.caseId,\r\n          medDoses: state.medDoses,\r\n          appId: state.appId,\r\n          vaccineId: state.vaccineId\r\n        }), {\r\n          'Authorization': `Bearer ${auth.token}`,\r\n          'Content-Type': 'application/json'\r\n        })\r\n        if (isMount && response) {\r\n          dispatch({ type: 'updateTreatmentSuccess', data: response })\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'updateTreatmentFailure', error: e.message })\r\n      }\r\n    }\r\n    \r\n    if (state.isUpdatingTreatment)\r\n      updateTreatment()\r\n  \r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, state.appId, state.caseId, state.isUpdatingTreatment, state.treatmentId, state.medDoses, state.petId, state.vaccineId, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    setPageIsLoading(state.isGettingTreatments || state.isGettingMVC || state.isSavingTreatment || state.isUpdatingTreatment)\r\n  }, [setPageIsLoading, state.isGettingTreatments, state.isGettingMVC, state.isSavingTreatment, state.isUpdatingTreatment])\r\n\r\n\r\n  return (\r\n    <>\r\n      {(state.savingTreatmentResult || state.updateTreatmentResult) && <Modal\r\n        modalClass='success'\r\n        header='Success!!'\r\n        body={state.savingTreatmentResult || state.updateTreatmentResult}\r\n        dispatch={dispatch}\r\n        refresh={true}\r\n      />}\r\n      {(state.getTreatmentsFailure || state.getMVCfailure || state.savingTreatmentFailure || state.updateTreatmentFailure) &&\r\n        <Modal\r\n          modalClass='error'\r\n          header='Oops!!'\r\n          body={state.getTreatmentsFailure || state.getMVCfailure || state.savingTreatmentFailure || state.updateTreatmentFailure}\r\n          dispatch={dispatch}\r\n        />}\r\n      <h4>Pet Treatment</h4>\r\n      {location.state ? <div className=\"flex-col falign-center fjust-center\">\r\n        <div className=\"search-bar-container flex-row fjust-center falign-center gap-16p\">\r\n          {\r\n            <button className=\"btn-sm\"\r\n              onClick={() => {\r\n                dispatch({ type: \"addModal\", data: true })\r\n              }}>\r\n              Add treatment\r\n            </button>\r\n          }\r\n        </div>\r\n\r\n        {\r\n          state.updateTreatmentModal &&\r\n          <UpdateTreatment dispatch={dispatch} state={state} />\r\n\r\n        }\r\n\r\n        {\r\n          state.addTreatmentModal &&\r\n          <AddPetTreatment dispatch={dispatch} state={state} />\r\n        }\r\n\r\n\r\n        <Table className=\"my-table\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>\r\n                Date Modified\r\n              </Th>\r\n              <Th>\r\n                Pet name\r\n              </Th>\r\n              <Th>\r\n                Vet\r\n              </Th>\r\n              <Th>\r\n                Case\r\n              </Th>\r\n              <Th>\r\n                Vaccine\r\n              </Th>\r\n              <Th>\r\n                Prescription\r\n              </Th>\r\n              <Th>\r\n                Edit\r\n              </Th>\r\n\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {state.treatments && state.treatments.map((treatment, index) => {\r\n              return (\r\n                <Tr key={index}>\r\n                  <Td>\r\n                    {dateFormat(treatment.date)}\r\n                  </Td>\r\n                  <Td>\r\n                    {treatment.pet_name}\r\n                  </Td>\r\n                  <Td>\r\n                    {`${treatment.first_name ? treatment.first_name : '-'} ${treatment.last_name ? treatment.last_name : '-'}`}\r\n                  </Td>\r\n                  <Td>\r\n                    {treatment.case_name}\r\n                  </Td>\r\n                  <Td>\r\n                    {treatment.vaccine_name ? treatment.vaccine_name : '--'}\r\n                  </Td>\r\n\r\n                  <Td className=\"prescription-td\">\r\n                    {\r\n                      !treatment.vaccine_name ?\r\n                        <button className=\"btn-sm show-prescription\"\r\n                          onMouseEnter={() => {\r\n                            dispatch({ type: 'showMiniModal', data: treatment.id })\r\n                          }}\r\n                          onMouseLeave={() => {\r\n                            dispatch({ type: 'hideMiniModal' })\r\n                          }}\r\n                          onClick={() => {\r\n                            dispatch({ type: 'showMiniModalClick', data: treatment.id })\r\n                          }}\r\n                        >\r\n                          Show\r\n                          {state.presShowId === treatment.id && <div className=\"mini-modal flex-column gap-8p\">\r\n                            {\r\n                              treatment.dose_med.map((doseMed, index) => {\r\n                                return (\r\n                                  <p key={index}>\r\n                                    {`Med: ${doseMed.med}, Dose: ${doseMed.dose} a day`}\r\n                                  </p>\r\n                                )\r\n                              })\r\n                            }\r\n                          </div>}\r\n                        </button>\r\n                        :\r\n                        \"--\"\r\n                    }\r\n\r\n                  </Td>\r\n                  <Td>\r\n                    <button \r\n                    disabled={treatment.doctor_id !== auth.userId || !treatment.doctor_id}\r\n                    className=\"btn-sm\"\r\n                      onClick={() => {\r\n                        console.log(treatment)\r\n                        dispatch({ type: \"updateModal\", data: true, trObj: treatment, treatmentId: treatment.id })\r\n                      }}>\r\n                      Edit\r\n                    </button>\r\n\r\n                  </Td>\r\n\r\n                </Tr>\r\n              )\r\n            })}\r\n          </Tbody>\r\n\r\n\r\n        </Table>\r\n\r\n\r\n\r\n\r\n      </div> :\r\n        <p>No active appointment is selected at the moment you can select an active appointment from 'Active Appointments' tab to start the treatment</p>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PetTreatmentHistory","\r\n\r\n// this custom hook contains the logic of sending a request to the server and getting databack, we wrap it with a useCallback so that it won't create the function every time the component using the hooks rerenders\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = 'GET',\r\n    body = null,\r\n    headers = {},\r\n\r\n\r\n  ) => {\r\n    try {\r\n      // 'Content-Type': 'application/json'\r\n      const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      const parsedData = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(parsedData.error)\r\n      }\r\n      return parsedData\r\n      \r\n    } catch (e) {\r\n      throw e\r\n    }\r\n    \r\n    \r\n  \r\n  \r\n  }, []) \r\n  return sendRequest\r\n}\r\nexport default useFetch","const modalMotion = {\r\n  initial: {\r\n    y: '-100vh',\r\n  },\r\n  final: {\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    y: '-100vh'\r\n  }\r\n}\r\nexport default modalMotion","import { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useState } from \"react\"\r\nimport modalMotion from \"./modalMotion\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst modalVariant = modalMotion\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [show, setShow] = useState(true)\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div className={`modal modal_${props.modalClass}`}>\r\n        <AnimatePresence>\r\n          {show && <motion.div \r\n          variants={modalVariant}\r\n          initial='initial'\r\n          animate='final'\r\n          exit='exit'\r\n\r\n          className={`modal-container modal-container__${props.modalClass} flex-col gap-16p falign-center`}>\r\n\r\n            <header className={`modal-header modal-header__${props.modalClass}`}>\r\n              {props.header}\r\n            </header>\r\n            <div className={`flex-col gap-8p modal-body modal-body__${props.modalClass}`}>\r\n              {props.body}\r\n            </div>\r\n            <footer className={`modal-footer modal-footer__${props.modalClass}`}>\r\n            {(props.modalClass === 'check' || props.modalClass === 'edit') && \r\n                <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  setTimeout(() => {props.dispatch({ type: 'finalConfirm' })}, 300)\r\n                  \r\n                }}\r\n                className='btn-rec modal-button modal-button__confirm'>Confirm </button>\r\n              }\r\n              <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  if (props.refresh)\r\n                    return  setTimeout(() => {window.location.reload()}, 300)\r\n                  if (props.redirectTo)\r\n                    return setTimeout(() => {navigate(props.redirectTo)}, 300)\r\n                    \r\n                  setTimeout(() => {props.dispatch({ type: `${props.modalClass}ModalExit` })}, 300)\r\n                  \r\n                }}\r\n                className={`btn-rec modal-button modal-button__${props.modalClass}`}>{props.modalClass === 'success' ? 'OK' : props.modalClass === 'check' ? 'Cancel' :props.modalClass === 'edit' ? 'Cancel' : 'Exit'}</button>\r\n\r\n              \r\n              \r\n            </footer>\r\n\r\n          </motion.div>}\r\n        </AnimatePresence>\r\n\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n  // modalClass, header, body, modalButtonClass, modalType\r\n}\r\n\r\nexport default Modal"],"sourceRoot":""}