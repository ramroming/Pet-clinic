{"version":3,"sources":["components/shared/context/auth-context.js","components/shared/hooks/redirector-hook.js","components/shared/hooks/auth-hook.js","components/utils/loadingpage/LoadingPage.js","components/utils/ScrollToTop.js","components/shared/hooks/routes-hook.js","App.js","index.js","components/shared/context/loading-context.js"],"names":["authContext","createContext","isLoggedIn","userId","token","role","login","logout","useReDirector","navigate","useNavigate","useCallback","locationState","redirectTo","logoutTimer","LoadingPage","pageIsLoading","useContext","pageLoadingContext","className","ScrollToTop","props","location","useLocation","useEffect","window","scrollTo","children","useAuth","useState","setToken","setUserId","userRole","setUserRole","tokenExpirationDate","setTokenExpirationDate","authedUser","setAuthedUser","redirector","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","a","removeItem","storedData","parse","getItem","remainingTime","setTimeout","pathname","state","clearTimeout","Signup","React","lazy","Login","Home","RegisterPet","Appointment","Adoption","AdoptionAds","AdoptionAd","PostAd","PostPreview","Stafflist","About","SideNav","Account","MyAdoptionPosts","MyAdoptionRequests","PersonalInfo","PetInfo","StaffPanelSideNav","AppointmentManagement","AdoptionManagement","AdoptionPostsManagement","PetTreatmentHistory","PetTrainingHistory","RegisterClient","PutForAdoption","RegisterPetRec","ManageUsers","ManagePets","ManageProfits","ActiveAppointments","Nav","Footer","useRoutes","stmemType","path","element","to","index","exact","App","setPageIsLoading","routes","Provider","value","fallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28765e23.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const authContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  role: null,\r\n  login: () => {},\r\n  logout: () => {}\r\n})","import { useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst useReDirector = () => {\r\n  const navigate = useNavigate()\r\n  // reads the redirectTo property out of the locationstate and make redirecting this function will be called whenever a login operation occurs\r\n  const redirector = useCallback((locationState) => {\r\n      if (locationState)\r\n        return navigate(`${locationState.redirectTo}`)\r\n  }, [navigate])\r\n  return redirector\r\n\r\n}\r\nexport default useReDirector","import { useEffect, useState, useCallback } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport useReDirector from './redirector-hook'\r\n\r\n// a pointer to our timer\r\nlet logoutTimer\r\n\r\nconst useAuth = () => {\r\n  // creating the states that will be sent via the context\r\n  const [token, setToken] = useState(null)\r\n  const [userId, setUserId] = useState(null)\r\n  const [userRole, setUserRole] = useState(null)\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState()\r\n\r\n  // using this state to tell the routes that the user is logged in\r\n  const [authedUser, setAuthedUser] = useState(null)\r\n  // using this state to tell the routes that the user is logged in\r\n\r\n  const location = useLocation()\r\n  const redirector = useReDirector()\r\n\r\n  const login = useCallback((uid, token, role, expirationDate) => {\r\n    setToken(token)\r\n    setUserId(uid)\r\n    setAuthedUser(true)\r\n    setUserRole(role)\r\n    // create an expiration date for the token when loginin, if the user refresh the page or re-enter the browser the useEffect will work and will call the login so if the token is still valid override the date in the storage with itself so nothing will change\r\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 6 )\r\n    setTokenExpirationDate(tokenExpirationDate)\r\n    localStorage.setItem('userData', JSON.stringify({ uid, token, role, expiration: tokenExpirationDate.toISOString() }))\r\n\r\n\r\n\r\n\r\n  }, [])\r\n\r\n  const logout = useCallback(async (isUserLogout = false) => {\r\n\r\n    setToken(null)\r\n    setUserId(null)\r\n    setTokenExpirationDate(null)\r\n    setAuthedUser(false)\r\n    setUserRole(null)\r\n\r\n    localStorage.removeItem('userData')\r\n\r\n  }, [])\r\n\r\n  //Auto Login : to check if the user is logged in when refreshing the page this is done by checking the local storage to find user's data\r\n  useEffect(() => {\r\n\r\n    const storedData = JSON.parse(localStorage.getItem('userData'))\r\n    // in order to login the storage must have a valid token, the token is valid if the expration date is later than the current date\r\n    if (storedData && storedData.token) {\r\n      if (new Date(storedData.expiration) > new Date()) {\r\n        login(storedData.uid, storedData.token, storedData.role)\r\n      } else {\r\n\r\n        setAuthedUser(false)\r\n        localStorage.removeItem('userData')\r\n      }\r\n    } else {\r\n      setAuthedUser(false)\r\n    }\r\n  }, [login])\r\n\r\n  // setting the timer for auto logout: \r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime()\r\n      logoutTimer = setTimeout(logout, remainingTime)\r\n\r\n      if (location.pathname === '/login')\r\n      //  here is when the login operation is completed and we can navigate to the page that the user came from\r\n        redirector(location.state)\r\n     \r\n\r\n    } else {\r\n\r\n      // if the user logs out manually we need to make sure that the current timeout will be cleared otherwise we are going to log the user out again\r\n      clearTimeout(logoutTimer)\r\n      // redirector({ redirectTo: '/' })\r\n\r\n    }\r\n  }, [token, logout, tokenExpirationDate, location.state, location.pathname, redirector])\r\n\r\n\r\n  return { token, login, logout, userId, authedUser, userRole }\r\n}\r\n\r\nexport default useAuth","import { pageLoadingContext } from '../../../components/shared/context/loading-context'\r\nimport { useContext } from 'react'\r\nconst LoadingPage = () => {\r\n  const pageIsLoading = useContext(pageLoadingContext).pageIsLoading\r\n  return (\r\n    <>\r\n      {pageIsLoading === true &&\r\n        <div className=\"loading-page\">\r\n\r\n          <div className=\"lds-ripple-page\"><div></div><div></div></div>\r\n        </div>\r\n      }\r\n    </>\r\n\r\n  )\r\n}\r\nexport default LoadingPage","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\n// this is a wrapper component that will scroll to top every time we navigate to a new compononet\r\nconst ScrollToTop = (props) => {\r\n\r\n  // location object will change whenever the url changes\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0,0)\r\n  }, [location])\r\n\r\n  return (<>{props.children}</>)\r\n}\r\n\r\nexport default ScrollToTop","import { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\r\nimport  React from 'react'\r\n\r\n// import Signup from \"./../../pages/signup/Signup\";\r\n// import Login from \"./../../pages/login/Login\";\r\n// import Home from \"./../../pages/home/Home\";\r\n// import RegisterPet from \"./../../pages/registerpet/RegisterPet\";\r\n// import Appointment from \"./../../pages/appointment/Appointment\";\r\n// import Adoption from \"./../../pages/adoption/Adoption\";\r\n// import AdoptionAds from \"./../../pages/adoptionAds/AdoptionAds\";\r\n// import AdoptionAd from \"./../../pages/adoptionAd/AdoptionAd\";\r\n// // import Myprofile from \"./../..//pages/myprofile/Myprofile\";\r\n// import PostAd from \"./../../pages/postAd/PostAd\";\r\n// import PostPreview from \"./../../pages/postpreview/PostPreview\";\r\n// import Stafflist from \"./../../pages/stafflist/Stafflist\";\r\n// import About from \"./../../pages/about/About\";\r\n// import SideNav from \"../../layout/profile_side_nav/SideNav\";\r\n// import Account from \"../../pages/profile/account/Account\";\r\n// import MyAdoptionPosts from \"../../pages/profile/myadoptionposts/MyAdoptionPosts\";\r\n// import MyAdoptionRequests from \"../../pages/profile/myadoptionrequests/MyAdoptionRequests\";\r\n// import PersonalInfo from \"../../pages/profile/personalinfo/PersonalInfo\";\r\n// import PetInfo from \"../../pages/profile/petinfo/PetInfo\";\r\n// import StaffPanelSideNav from \"../../layout/staffpanel_side_nav/StaffPanelSideNav\";\r\n// import AppointmentManagement from '../../pages/staffPanel/appointmentmanagement/AppointmentManagement';\r\n// import AdoptionManagement from '../../pages/staffPanel/adoptionmanagement/AdoptionManagement';\r\n// import AdoptionPostsManagement from '../../pages/staffPanel/adoptionpostsmanagement/AdoptionPostsManagement';\r\n// import PetTreatmentHistory from '../../pages/staffPanel/pettreatmenthistory/PetTreatmentHistory';\r\n// import PetTrainingHistory from '../../pages/staffPanel/pettraininghistory/PetTrainingHistory';\r\n// import RegisterClient from '../../pages/staffPanel/registration/RegisterClient'\r\n// import PutForAdoption from \"../../pages/staffPanel/putforadoption/PutForAdoption\";\r\n// import RegisterPetRec from '../../pages/staffPanel/registration/RegisterPetRec'\r\n// import ManageUsers from '../../pages/staffPanel/manageusers/ManageUsers'\r\n// import ManagePets from '../../pages/staffPanel/managepets/ManagePets'\r\n// import ManageProfits from '../../pages/staffPanel/manageProfits/ManageProfits'\r\n// import ActiveAppointments from \"../../pages/staffPanel/activeappointments/ActiveAppointments\";\r\n// import Nav from \"../../layout/nav/Nav\";\r\n// import Footer from \"../../layout/footer/Footer\";\r\n\r\n\r\nconst Signup = React.lazy(() => import('./../..//pages/signup/Signup'))\r\nconst Login = React.lazy(() => import('./../../pages/login/Login'))\r\nconst Home = React.lazy(() => import('./../../pages/home/Home'))\r\nconst RegisterPet = React.lazy(() => import('./../../pages/registerpet/RegisterPet'))\r\nconst Appointment = React.lazy(() => import('./../../pages/appointment/Appointment'))\r\nconst Adoption = React.lazy(() => import('./../../pages/adoption/Adoption'))\r\nconst AdoptionAds = React.lazy(() => import('./../../pages/adoptionAds/AdoptionAds'))\r\nconst AdoptionAd = React.lazy(() => import('./../../pages/adoptionAd/AdoptionAd'))\r\nconst PostAd = React.lazy(() => import('./../../pages/postAd/PostAd'))\r\nconst PostPreview = React.lazy(() => import('./../../pages/postpreview/PostPreview'))\r\nconst Stafflist = React.lazy(() => import('./../../pages/stafflist/Stafflist'))\r\nconst About = React.lazy(() => import('./../../pages/about/About'))\r\nconst SideNav = React.lazy(() => import('../../layout/profile_side_nav/SideNav'))\r\nconst Account = React.lazy(() => import('../../pages/profile/account/Account'))\r\nconst MyAdoptionPosts = React.lazy(() => import('../../pages/profile/myadoptionposts/MyAdoptionPosts'))\r\nconst MyAdoptionRequests = React.lazy(() => import('../../pages/profile/myadoptionrequests/MyAdoptionRequests'))\r\nconst PersonalInfo = React.lazy(() => import('../../pages/profile/personalinfo/PersonalInfo'))\r\nconst PetInfo = React.lazy(() => import('../../pages/profile/petinfo/PetInfo'))\r\nconst StaffPanelSideNav = React.lazy(() => import('../../layout/staffpanel_side_nav/StaffPanelSideNav'))\r\nconst AppointmentManagement = React.lazy(() => import('../../pages/staffPanel/appointmentmanagement/AppointmentManagement'))\r\nconst AdoptionManagement = React.lazy(() => import('../../pages/staffPanel/adoptionmanagement/AdoptionManagement'))\r\nconst AdoptionPostsManagement = React.lazy(() => import('../../pages/staffPanel/adoptionpostsmanagement/AdoptionPostsManagement'))\r\nconst PetTreatmentHistory = React.lazy(() => import('../../pages/staffPanel/pettreatmenthistory/PetTreatmentHistory'))\r\nconst PetTrainingHistory = React.lazy(() => import('../../pages/staffPanel/pettraininghistory/PetTrainingHistory'))\r\nconst RegisterClient = React.lazy(() => import('../../pages/staffPanel/registration/RegisterClient'))\r\nconst PutForAdoption = React.lazy(() => import('../../pages/staffPanel/putforadoption/PutForAdoption'))\r\nconst RegisterPetRec = React.lazy(() => import('../../pages/staffPanel/registration/RegisterPetRec'))\r\nconst ManageUsers = React.lazy(() => import('../../pages/staffPanel/manageusers/ManageUsers'))\r\nconst ManagePets = React.lazy(() => import('../../pages/staffPanel/managepets/ManagePets'))\r\nconst ManageProfits = React.lazy(() => import('../../pages/staffPanel/manageProfits/ManageProfits'))\r\nconst ActiveAppointments = React.lazy(() => import('../../pages/staffPanel/activeappointments/ActiveAppointments'))\r\nconst Nav = React.lazy(() => import('../../layout/nav/Nav'))\r\nconst Footer = React.lazy(() => import('../../layout/footer/Footer'))\r\n\r\n\r\n\r\n\r\n\r\n// A hook that contains the routing logic and it uses the authed user state to determine whether the user is allowed to navigate to private Routes\r\nconst useRoutes = (authedUser, stmemType) => {\r\n\r\n  const location = useLocation()\r\n  if (authedUser !== null) {\r\n    return (\r\n      <>\r\n        {/* // public routes */}\r\n        <Nav />\r\n        <Routes>\r\n          {stmemType === null\r\n            ?\r\n            <>\r\n              <Route path='home'\r\n                element={<Home />}></Route>\r\n              <Route path='about'\r\n                element={<About />}> </Route>\r\n              <Route path='login'\r\n                element={authedUser ? <Navigate to='/' /> : <Login />}></Route>\r\n              <Route path='signup' state={{ redirectTo: '/' }}\r\n                element={authedUser ? <Navigate to='/' /> : <Signup />}></Route>\r\n\r\n              <Route path='stafflist'\r\n                element={<Stafflist />} > </Route>\r\n\r\n\r\n              <Route path='appointment'\r\n                element={authedUser ? <Appointment /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n              <Route path='registerpet'\r\n                element={authedUser ? <RegisterPet /> : <Navigate to='/login' state={{ redirectTo: 'registerpet' }} />}></Route>\r\n\r\n\r\n              <Route path='adoption'\r\n                element={authedUser ? <Adoption /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n\r\n              <Route path='adoptionads'\r\n                element={authedUser ? <AdoptionAds /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n\r\n              <Route path='adoptionad/:id'\r\n                element={authedUser ? <AdoptionAd /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n              <Route path='postad'\r\n                element={authedUser ? <PostAd /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}> </Route>\r\n\r\n              <Route path='postpreview/:id'\r\n                element={authedUser ? <PostPreview /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}> </Route>\r\n\r\n              {/* My profile related paths */}\r\n              <Route path='myprofile' element={<SideNav />}>\r\n                <Route index\r\n                  element={<Navigate to='/' />}></Route>\r\n                <Route path='mypersonalinfo'\r\n                  element={authedUser ? <PersonalInfo /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                <Route path='account'\r\n                  element={authedUser ? <Account /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                <Route path='myadoptionposts'\r\n                  element={authedUser ? <MyAdoptionPosts /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                <Route path='myadoptionrequests'\r\n                  element={authedUser ? <MyAdoptionRequests /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                <Route path='petinfo'\r\n                  element={authedUser ? <PetInfo /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                <Route path='*'\r\n                  element={<Navigate to='/' />}> </Route>\r\n              </Route>\r\n\r\n\r\n              {/* staff panel routing */}\r\n\r\n\r\n\r\n              <Route exact path='/' element={<Home />}></Route>\r\n              {/* no path matched */}\r\n              <Route path='*'\r\n                element={<Navigate to='/' />}> </Route>\r\n            </>\r\n            :\r\n            <>\r\n              {(stmemType === 'receptionist' || stmemType === 'admin') &&\r\n\r\n                <>\r\n                  <Route path='postpreview/:id'\r\n                    element={authedUser ? <PostPreview /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}> </Route>\r\n                  <Route path='adoptionad/:id'\r\n                    element={authedUser ? <AdoptionAd /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                </>\r\n              }\r\n\r\n\r\n              <Route path='staffpanel'\r\n                element={<StaffPanelSideNav />}>\r\n                <Route index\r\n                  element={<Navigate to='/' />}></Route>\r\n                <Route path='mypersonalinfo'\r\n                  element={authedUser ? <PersonalInfo /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                <Route path='account'\r\n                  element={authedUser ? <Account /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                {(stmemType === 'receptionist' || stmemType === 'admin') &&\r\n                  <>\r\n                    <Route path='manageappointments'\r\n                      element={authedUser ? <AppointmentManagement /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n\r\n                    <Route path='registerclient'\r\n                      element={authedUser ? <RegisterClient /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                    <Route path='registerpet'\r\n                      element={authedUser ? <RegisterPetRec /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n\r\n                    <Route path='managepets'\r\n                      element={authedUser ? <ManagePets /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                    <Route path='putforadoption'\r\n                      element={authedUser ? <PutForAdoption /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n\r\n                    <Route path='adoptionrequests'\r\n                      element={authedUser ? <AdoptionManagement /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                    <Route path='adoptionposts'\r\n                      element={authedUser ? <AdoptionPostsManagement /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                  </>\r\n\r\n                }\r\n                {(stmemType === 'vet' || stmemType === 'admin') &&\r\n                  <>\r\n                    <Route path='pettreatmenthistory'\r\n                      element={authedUser ? <PetTreatmentHistory /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                    <Route path='activeappointments'\r\n                      element={authedUser ? <ActiveAppointments /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                  </>\r\n                }\r\n                {(stmemType === 'trainer' || stmemType === 'admin') &&\r\n\r\n                  <>\r\n                    <Route path='pettraininghistory'\r\n                      element={authedUser ? <PetTrainingHistory /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                    <Route path='activeappointments'\r\n                      element={authedUser ? <ActiveAppointments /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                  </>\r\n                }\r\n                {(stmemType === 'groomer' || stmemType === 'admin') &&\r\n                  <Route path='activeappointments'\r\n                  element={authedUser ? <ActiveAppointments /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n                }\r\n                {stmemType === 'admin' &&\r\n                  <>\r\n\r\n                    <Route path='manageusers'\r\n                      element={authedUser ? <ManageUsers /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n\r\n                    <Route path='manageprofits'\r\n                      element={authedUser ? <ManageProfits /> : <Navigate to='/login' state={{ redirectTo: location.pathname }} />}></Route>\r\n\r\n                  </>\r\n\r\n\r\n                }\r\n                <Route path='*'\r\n                  element={<Navigate to='/' />}> </Route>\r\n\r\n              </Route>\r\n              <Route path='*'\r\n                element={<Navigate to='staffpanel/mypersonalinfo' />}> </Route>\r\n\r\n            </>\r\n\r\n          }\r\n\r\n        </Routes>\r\n        <Footer />\r\n      </>\r\n    )\r\n\r\n\r\n\r\n  }\r\n\r\n  return (<></>)\r\n}\r\nexport default useRoutes","import { authContext } from \"./components/shared/context/auth-context\";\r\nimport { pageLoadingContext } from \"./components/shared/context/loading-context\";\r\nimport LoadingPage from './components/utils/loadingpage/LoadingPage';\r\nimport ScrollToTop from \"./components/utils/ScrollToTop\";\r\nimport useAuth from \"./components/shared/hooks/auth-hook\";\r\nimport useRoutes from './components/shared/hooks/routes-hook';\r\nimport { useState, Suspense } from 'react';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const { token, login, logout, userId, authedUser, userRole } = useAuth(window)\r\n  const [pageIsLoading, setPageIsLoading] = useState(false)\r\n\r\n\r\n  const routes = useRoutes(authedUser, userRole)\r\n  return (\r\n    <>\r\n      {/* wrapping all the components with our authcontext so that we can pass the data to the interested components when ever isloggedin changes all the components will be able to receive the change */}\r\n      {/* here we use the doulbe exclamation mark to cast the token string to a boolean value  */}\r\n      <pageLoadingContext.Provider value={{ pageIsLoading, setPageIsLoading }}>\r\n        <authContext.Provider value={{ isLoggedIn: !!token, userId, token, login, logout, userRole }}>\r\n          <LoadingPage />\r\n          <ScrollToTop>\r\n            <Suspense fallback={<div className=\"loading-page\">\r\n\r\n              <div className=\"lds-ripple-page\"><div></div><div></div></div>\r\n            </div>}>\r\n              {routes}\r\n            </Suspense>\r\n          </ScrollToTop>\r\n        </authContext.Provider>\r\n      </pageLoadingContext.Provider>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport '../src/static/css/main.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","import { createContext } from 'react'\r\nexport const pageLoadingContext = createContext({\r\n  pageIsLoading: false,\r\n  setPageIsLoading: () => {}\r\n})"],"sourceRoot":""}