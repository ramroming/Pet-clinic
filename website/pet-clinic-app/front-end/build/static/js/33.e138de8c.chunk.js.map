{"version":3,"sources":["components/pages/staffPanel/manageusers/EditUser.js","components/shared/hooks/manageusers-hook.js","components/pages/staffPanel/manageusers/ManageUsers.js","components/shared/hooks/fetch-hook.js","components/utils/modal/modalMotion.js","components/utils/modal/Modal.js","components/pages/profile/myadoptionposts/DeletePostModal.js"],"names":["EditUser","setOpenEditModal","state","dispatch","to","className","src","alt","style","marginTop","fontWeight","username","currentRole","value","newRole","onChange","e","type","currentTarget","name","id","disabled","onClick","manageUsersReducer","action","isGettingUsers","users","data","gettingUsersFailure","error","userToChange","data2","data3","isUpdatingRole","updateRoleResult","updateRoleFailure","deleteUserFailure","userToDelete","isDeletingUser","deleteUserResult","useManageUsers","initialData","useReducer","ManageUsers","useState","openModal","setOpenModal","openEditModal","auth","useContext","authContext","setPageIsLoading","pageLoadingContext","sendRequest","useFetch","useEffect","isMount","getUsers","a","process","token","message","updateRole","JSON","stringify","response","result","deleteUser","Modal","modalClass","header","body","refresh","DeletePostModal","closeModal","map","user","index","first_name","last_name","email","stmem_type","window","scrollTo","personal_id","useCallback","url","method","headers","fetch","json","parsedData","ok","Error","modalMotion","initial","y","final","exit","modalVariant","props","show","setShow","navigate","useNavigate","AnimatePresence","motion","div","variants","animate","setTimeout","location","reload","redirectTo"],"mappings":"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","file":"static/js/33.e138de8c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst EditUser = ({ setOpenEditModal, state, dispatch }) => {\r\n  return (\r\n\r\n\r\n    <>\r\n      <Link\r\n        to='/'\r\n        className='logo-link'>\r\n        <img src=\"/media/imgs/favicon.png\" alt=\"\" className=\"logo\" />\r\n      </Link>\r\n      <div className=\"input-wrapper flex-row fjust-between\">\r\n        <div className=\"flex-col gap-8p falign-center\" style={{ marginTop: '1rem'}}>\r\n          <label className=\"\">Select new role for <span style={{ fontWeight: 'bold' }}>({state.username})</span>\r\n          </label>\r\n          <label className=\"\">Current role <span style={{ fontWeight: 'bold' }}>({state.currentRole})</span>\r\n          </label>\r\n        </div>\r\n        <select\r\n          value={state.newRole}\r\n          onChange={(e) => dispatch({ type: 'selectRole', value: e.currentTarget.value })}\r\n          name=\"newRole\"\r\n          id=\"Role\">\r\n          <option value=\"unselected\">Select Role</option>\r\n          <option value=\"\">Client</option>\r\n          <option value=\"admin\">Admin</option>\r\n          <option value=\"receptionist\">Receptionist</option>\r\n          <option value=\"vet\">Vet</option>\r\n          <option value=\"groomer\">Groomer</option>\r\n          <option value=\"trainer\">Trainer</option>\r\n        </select>\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\"button-wrapper flex-row gap-8p fjust-center\">\r\n\r\n        <button \r\n        disabled={state.newRole === 'unselected' }\r\n        onClick={() => {\r\n          dispatch({ type: 'updateRole' })\r\n        }}\r\n        type=\"submit\" className={state.newRole === 'unselected' ? \"btn-r btn-r-dark disabled\" : \"btn-r btn-r-dark\"}>\r\n          Update user role\r\n        </button>\r\n        <button className=\"btn-r btn-r-dark\"\r\n          onClick={() => {\r\n            setOpenEditModal(false)\r\n          }}>\r\n          Cancel\r\n        </button>\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default EditUser","import { useReducer } from 'react'\r\n\r\nconst manageUsersReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'getUsersSuccess':\r\n      return {\r\n        ...state,\r\n        isGettingUsers: false,\r\n        users: action.data\r\n      }\r\n    case 'getUsersFailure':\r\n      return {\r\n        ...state,\r\n        isGettingUsers: false,\r\n        gettingUsersFailure: action.error\r\n      }\r\n    case 'selectUserToChange':\r\n      return {\r\n        ...state,\r\n        userToChange: action.data,\r\n        username: action.data2,\r\n        currentRole: action.data3,\r\n        newRole: 'unselected'\r\n      }\r\n    case 'selectRole': \r\n      return {\r\n        ...state,\r\n        newRole: action.value\r\n      }\r\n    case 'updateRole':\r\n      return {\r\n        ...state,\r\n        isUpdatingRole: true\r\n      }\r\n    case 'updateRoleSuccess':\r\n      return {\r\n        ...state,\r\n        isUpdatingRole: false,\r\n        updateRoleResult: action.data\r\n      }\r\n    case 'updateRoleFailure':\r\n      return {\r\n        ...state,\r\n        isUpdatingRole: false,\r\n        updateRoleFailure: action.error\r\n      }\r\n    case 'errorModalExit':\r\n      return {\r\n        ...state,\r\n        updateRoleFailure: '',\r\n        gettingUsersFailure: '',\r\n        deleteUserFailure: ''\r\n      }\r\n\r\n    case 'selectUserToDelete':\r\n      return {\r\n        ...state,\r\n        userToDelete: action.data,\r\n      }\r\n    case 'startDeleting':\r\n      return {\r\n        ...state,\r\n        isDeletingUser: true,\r\n      }\r\n    case 'deleteUserSuccess':\r\n      return {\r\n        ...state,\r\n        isDeletingUser: false,\r\n        deleteUserResult: action.data\r\n      }\r\n    case 'deleteUserFailure':\r\n      return {\r\n        ...state,\r\n        isDeletingUser: false,\r\n        deleteUserFailure: action.error\r\n      }\r\n    case 'clearUserToDelete':\r\n      return {\r\n        ...state,\r\n        userToDelete: null\r\n      }\r\n    case 'clearUserToChange':\r\n      return {\r\n        ...state,\r\n        userToChange: null\r\n      }\r\n    default:\r\n      break\r\n  }\r\n}\r\nconst useManageUsers = (initialData) => {\r\n  const [state, dispatch] = useReducer(manageUsersReducer, initialData)\r\n  return [state, dispatch]\r\n}\r\nexport default useManageUsers","\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport { useState, useContext, useEffect } from 'react'\r\nimport DeletePostModal from \"../../profile/myadoptionposts/DeletePostModal\"\r\n\r\nimport EditUser from './EditUser'\r\nimport useManageUsers from '../../../shared/hooks/manageusers-hook';\r\nimport { authContext } from '../../../shared/context/auth-context'\r\nimport { pageLoadingContext } from '../../../shared/context/loading-context'\r\nimport useFetch from '../../../shared/hooks/fetch-hook'\r\nimport Modal from '../../../utils/modal/Modal';\r\n\r\nconst initialData = {\r\n\r\n  isGettingUsers: true,\r\n  users: null,\r\n  gettingUsersFailure: '',\r\n\r\n  userToChange: null,\r\n  username: '',\r\n  currentRole: '',\r\n  newRole: 'unselected',\r\n  isUpdatingRole: false,\r\n  updateRoleResult: '',\r\n  updateRoleFailure: '',\r\n\r\n  userToDelete: null,\r\n  isDeletingUser: false,\r\n  deleteUserResult: '',\r\n  deleteUserFailure: '',\r\n\r\n}\r\n\r\nconst ManageUsers = () => {\r\n\r\n  //state for handling the delete modal\r\n  const [openModal, setOpenModal] = useState(false)\r\n\r\n  //state for handling edit role and data modal\r\n  const [openEditModal, setOpenEditModal] = useState(false)\r\n\r\n  const [state, dispatch] = useManageUsers(initialData)\r\n  const auth = useContext(authContext)\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n  const sendRequest = useFetch()\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getUsers = async () => {\r\n      try {\r\n        const users = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}admin/users`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (users && isMount)\r\n          dispatch({ type: 'getUsersSuccess', data: users })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'getUsersFailure', error: e.message })\r\n      }\r\n    }\r\n    getUsers()\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const updateRole = async () => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}admin/users/${state.userToChange}`, 'PATCH', JSON.stringify({\r\n          newRole: state.newRole\r\n        }), {\r\n          'Authorization': `Bearer ${auth.token}`,\r\n          'Content-Type': 'application/json'\r\n        })\r\n        if (response && isMount)\r\n          dispatch({ type: 'updateRoleSuccess', data: response.result })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'updateRoleFailure', error: e.message })\r\n      }\r\n    }\r\n    if (state.isUpdatingRole){\r\n      updateRole()\r\n    }\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, setPageIsLoading, state.isUpdatingRole, state.newRole, state.userToChange])\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const deleteUser = async () => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}admin/users/${state.userToDelete}`, 'DELETE', null, {\r\n          'Authorization': `Bearer ${auth.token}`,\r\n        })\r\n        if (response && isMount)\r\n          dispatch({ type: 'deleteUserSuccess', data: response.result })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'deleteUserFailure', error: e.message })\r\n      }\r\n    }\r\n    if (state.isDeletingUser)\r\n     deleteUser()\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, setPageIsLoading, state.isDeletingUser, state.userToDelete])\r\n\r\n  useEffect(() => {\r\n    setPageIsLoading(state.isGettingUsers || state.isUpdatingRole || state.isDeletingUser)\r\n  }, [setPageIsLoading, state.isGettingUsers, state.isUpdatingRole, state.isDeletingUser])\r\n\r\n  useEffect(() => {\r\n    if (!openModal && !state.isDeletingUser)\r\n      dispatch({ type: 'clearUserToDelete' })\r\n    if (!openEditModal && !state.isDeletingUser)\r\n      dispatch({ type: 'clearUserToChange' })\r\n  }, [openModal, openEditModal, dispatch, state.isDeletingUser])\r\n\r\n  return (\r\n\r\n    <>\r\n      {(state.gettingUsersFailure || state.updateRoleFailure || state.deleteUserFailure) &&\r\n        <Modal\r\n          modalClass='error'\r\n          header='Oops!!'\r\n          body={state.gettingUsersFailure || state.updateRoleFailure || state.deleteUserFailure }\r\n          dispatch={dispatch}\r\n        />}\r\n      {(state.updateRoleResult || state.deleteUserResult) && \r\n        <Modal\r\n          modalClass='success'\r\n          header='Success!!'\r\n          body={state.updateRoleResult || state.deleteUserResult}\r\n          dispatch={dispatch}\r\n          refresh={true}\r\n        />}\r\n\r\n      <h4>Manage Users</h4>\r\n\r\n      <div>\r\n        <div className=\"flex-col falign-center fjust-center \">\r\n          {openModal && <DeletePostModal closeModal={setOpenModal} dispatch={dispatch} />}\r\n        </div>\r\n\r\n        <div className=\"flex-col falign-center fjust-center \">\r\n          {openEditModal && <EditUser setOpenEditModal={setOpenEditModal} state={state} dispatch={dispatch} />}\r\n        </div>\r\n\r\n        <Table className=\"my-table\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>\r\n                ID\r\n              </Th>\r\n              <Th>\r\n                Username\r\n              </Th>\r\n              <Th>\r\n                first name\r\n              </Th>\r\n              <Th>\r\n                Last name\r\n              </Th>\r\n              <Th>\r\n                email\r\n              </Th>\r\n              <Th>\r\n                Role\r\n              </Th>\r\n              <Th>\r\n                Change Role\r\n              </Th>\r\n              <Th>\r\n                Delete\r\n              </Th>\r\n\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n\r\n            {/* first user */}\r\n\r\n            {\r\n              state.users && state.users.map((user, index) => {\r\n                return (\r\n                  <Tr key={index}>\r\n                    <Td>\r\n                      {user.id}\r\n                    </Td>\r\n                    <Td>\r\n                      {user.username}\r\n                    </Td>\r\n                    <Td>\r\n                      {user.first_name}\r\n                    </Td>\r\n                    <Td>\r\n                      {user.last_name}\r\n                    </Td>\r\n                    <Td>\r\n                      {user.email}\r\n                    </Td>\r\n                    <Td>\r\n                      {user.stmem_type ? user.stmem_type : 'client'}\r\n                    </Td>\r\n                    <Td>\r\n\r\n\r\n                      <button className=\"my-great-button margin-bottom\"\r\n                        onClick={() => {\r\n                          window.scrollTo(0, 0)\r\n                          setOpenEditModal(true)\r\n                          setOpenModal(false)\r\n                          dispatch({ type: 'selectUserToChange', data: user.id, data2: user.username, data3: user.stmem_type ? user.stmem_type : 'client' })\r\n                        }}><i className={state.userToChange === user.id ? \"fa-regular fa-pen-to-square active\" : \"fa-regular fa-pen-to-square\"}></i></button>\r\n\r\n\r\n                    </Td>\r\n                    <Td>\r\n                      <button className=\"my-great-button margin-bottom\"\r\n                        onClick={() => { \r\n                          window.scrollTo(0, 0)\r\n                          setOpenModal(true)\r\n                          setOpenEditModal(false)\r\n                          dispatch({ type: 'selectUserToDelete', data: user.personal_id })\r\n                         }}\r\n                      ><i className={state.userToDelete === user.personal_id ?\r\n                        \"fa-regular fa-trash-can active\" : \"fa-regular fa-trash-can\" }></i></button>\r\n                    </Td>\r\n\r\n                  </Tr>\r\n                )\r\n              })\r\n            }\r\n          </Tbody>\r\n\r\n\r\n\r\n        </Table>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageUsers","\r\n\r\n// this custom hook contains the logic of sending a request to the server and getting databack, we wrap it with a useCallback so that it won't create the function every time the component using the hooks rerenders\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = 'GET',\r\n    body = null,\r\n    headers = {},\r\n\r\n\r\n  ) => {\r\n    try {\r\n      // 'Content-Type': 'application/json'\r\n      const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      const parsedData = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(parsedData.error)\r\n      }\r\n      return parsedData\r\n      \r\n    } catch (e) {\r\n      throw e\r\n    }\r\n    \r\n    \r\n  \r\n  \r\n  }, []) \r\n  return sendRequest\r\n}\r\nexport default useFetch","const modalMotion = {\r\n  initial: {\r\n    y: '-100vh',\r\n  },\r\n  final: {\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    y: '-100vh'\r\n  }\r\n}\r\nexport default modalMotion","import { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useState } from \"react\"\r\nimport modalMotion from \"./modalMotion\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst modalVariant = modalMotion\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [show, setShow] = useState(true)\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div className={`modal modal_${props.modalClass}`}>\r\n        <AnimatePresence>\r\n          {show && <motion.div \r\n          variants={modalVariant}\r\n          initial='initial'\r\n          animate='final'\r\n          exit='exit'\r\n\r\n          className={`modal-container modal-container__${props.modalClass} flex-col gap-16p falign-center`}>\r\n\r\n            <header className={`modal-header modal-header__${props.modalClass}`}>\r\n              {props.header}\r\n            </header>\r\n            <div className={`flex-col gap-8p modal-body modal-body__${props.modalClass}`}>\r\n              {props.body}\r\n            </div>\r\n            <footer className={`modal-footer modal-footer__${props.modalClass}`}>\r\n            {(props.modalClass === 'check' || props.modalClass === 'edit') && \r\n                <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  setTimeout(() => {props.dispatch({ type: 'finalConfirm' })}, 300)\r\n                  \r\n                }}\r\n                className='btn-rec modal-button modal-button__confirm'>Confirm </button>\r\n              }\r\n              <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  if (props.refresh)\r\n                    return  setTimeout(() => {window.location.reload()}, 300)\r\n                  if (props.redirectTo)\r\n                    return setTimeout(() => {navigate(props.redirectTo)}, 300)\r\n                    \r\n                  setTimeout(() => {props.dispatch({ type: `${props.modalClass}ModalExit` })}, 300)\r\n                  \r\n                }}\r\n                className={`btn-rec modal-button modal-button__${props.modalClass}`}>{props.modalClass === 'success' ? 'OK' : props.modalClass === 'check' ? 'Cancel' :props.modalClass === 'edit' ? 'Cancel' : 'Exit'}</button>\r\n\r\n              \r\n              \r\n            </footer>\r\n\r\n          </motion.div>}\r\n        </AnimatePresence>\r\n\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n  // modalClass, header, body, modalButtonClass, modalType\r\n}\r\n\r\nexport default Modal","\r\nconst DeletePostModal = ({ closeModal, dispatch }) => {\r\n    return (\r\n        <div className=\"modal-background flex falign-center fjust-center\">\r\n            <div className=\"modal-container flex-col fgap-16p falign-center fjust-center\">\r\n                <div className=\"x-close\"><button\r\n                onClick={() => closeModal(false)}>\r\n                <i className=\"fa-solid fa-xmark\"></i></button></div>\r\n                <div className=\"modal-title\">\r\n                    Are you sure you want to delete?\r\n                </div>\r\n                <div className=\"flex-row edit-modal-buttons-container gap-24p fjust-center\">\r\n                    <button \r\n                    onClick={() => {\r\n                      closeModal(false)\r\n                      dispatch({ type: 'startDeleting' })\r\n                    }}\r\n                    className=\"btn-rec-purple\">Yes</button>\r\n                    <button onClick={() => closeModal(false)}\r\n                        className=\"btn-rec-purple\">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeletePostModal"],"sourceRoot":""}