{"version":3,"sources":["components/pages/staffPanel/managepets/EditPet.js","components/shared/hooks/managepets-hook.js","components/pages/staffPanel/managepets/ManagePets.js","components/shared/hooks/fetch-hook.js","components/utils/modal/modalMotion.js","components/utils/modal/Modal.js","components/utils/formErrorMsg/InputError.js","components/pages/profile/myadoptionposts/DeletePostModal.js","components/utils/up_photo_info/PhotoInfo.js","components/pages/adoptionAds/adoptionMotion.js"],"names":["itemMotion","adoptionMotion","today","Date","maxDate","dateFormat","minDate","setMonth","getMonth","EditPet","setOpenEditModal","state","dispatch","AnimatePresence","motion","form","variants","initial","animate","exit","className","htmlFor","type","name","id","value","onChange","e","currentTarget","field","style","width","checked","gender","birth_date","min","max","files","length","url","URL","createObjectURL","accept","photo","errorMsg","InputError","left","class","msg","PhotoInfo","fileURL","fileName","fileSize","Math","round","size","pets","alt","src","petIndex","Blob","Uint8Array","data","breeds","defaultValue","selectedPet","breed_name","map","breed","index","colors","isLoadingColors","selectedColors","color","includes","onClick","event","target","innerHTML","selectColor","colorid","missingInput","textAlign","margin","managePetsReducer","action","isFetchingPets","fetchPetsFailure","error","responseError","isLoadingPets","getPetsResult","isLoadingBreeds","isUpdating","pet_type","type_name","showUpdateMenu","indexOf","filter","formData","FormData","append","join","dataToUpdate","updateResult","petToDelete","deleteId","isDeletingPet","deletePetResult","deletePetFailure","result","useManagePets","initialData","useReducer","openModal","openEditModal","ManagePets","useState","setOpenModal","auth","useContext","authContext","sendRequest","useFetch","setPageIsLoading","pageLoadingContext","useEffect","isMount","fetchPets","a","process","token","message","getBreeds","parsedData","getColors","updateData","deletePet","Modal","modalClass","header","body","refresh","DeletePostModal","closeModal","pet","window","scrollTo","useCallback","method","headers","fetch","response","json","ok","Error","modalMotion","y","final","modalVariant","props","show","setShow","navigate","useNavigate","div","setTimeout","location","reload","redirectTo","opacity","transition","duration"],"mappings":"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","file":"static/js/22.254bffb3.chunk.js","sourcesContent":["import { AnimatePresence, motion } from \"framer-motion\"\r\nimport { adoptionMotion } from \"../../adoptionAds/adoptionMotion\"\r\nimport PhotoInfo from \"../../../utils/up_photo_info/PhotoInfo\"\r\nimport InputError from \"../../../utils/formErrorMsg/InputError\"\r\nimport dateFormat from \"dateformat\"\r\n\r\n\r\nconst itemMotion = adoptionMotion\r\n\r\n// this data will be used in the form's date input\r\nconst today = new Date()\r\nconst maxDate = dateFormat(today, 'isoDate')\r\n\r\nconst minDate = dateFormat(today.setMonth(today.getMonth() - 30 * 12), 'isoDate')\r\n\r\n\r\nconst EditPet = ({ setOpenEditModal, state, dispatch }) => {\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n  const selectColor = (event) => {\r\n    dispatch({ type: 'selectColor', color: event.target.innerHTML })\r\n  }\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {\r\n        <motion.form\r\n          variants={itemMotion}\r\n          initial='initial'\r\n          animate='final'\r\n          exit='exit'\r\n          className=\"profile-data edit-side-form flex-col falign-center gap-24p\">\r\n\r\n          <div className=\"inputs-wrapper flex-col  falign-center gap-16p\">\r\n            <div className=\"input-wrapper\">\r\n              <label className=\"half-label\" htmlFor=\"name\">Pet Name:*\r\n              </label>\r\n              <input\r\n                type=\"text\" name=\"name\" id=\"name\"\r\n                value={state.name.value}\r\n                onChange={(e) => { dispatch({ type: 'enterValue', value: e.currentTarget.value, field: 'name' }) }}\r\n              />\r\n            </div>\r\n\r\n            <div style={{ width: 'fit-content' }} className=\"gender-input-wrapper flex-row gap-8p\">\r\n              <label className=\"\" htmlFor=\"gender\">Pet Gender:\r\n              </label>\r\n              <input type=\"radio\" name=\"gender\" id=\"male\" value=\"male\"\r\n                onChange={(e) => { dispatch({ type: 'enterValue', value: e.currentTarget.value, field: 'gender' }) }}\r\n                checked={state.gender.value === 'male'} />\r\n\r\n              <label className='' htmlFor=\"male\">Male</label>\r\n\r\n              <input\r\n                type=\"radio\" name=\"gender\" id=\"female\" value=\"female\"\r\n                onChange={(e) => { dispatch({ type: 'enterValue', value: e.currentTarget.value, field: 'gender' }) }}\r\n                checked={state.gender.value === 'female'} />\r\n              <label className='' htmlFor=\"female\">Female</label>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"input-wrapper  \">\r\n              <label className=\"half-label\" htmlFor=\"birth_date\">Birth Date:*\r\n              </label>\r\n              <input\r\n                onChange={(e) => { dispatch({ type: 'enterValue', value: e.currentTarget.value, field: 'birth_date' }) }}\r\n                value={dateFormat(state.birth_date.value, 'isoDate')}\r\n                min={minDate}\r\n                max={maxDate}\r\n                type=\"date\" name=\"birth_date\" id=\"birth_date\" />\r\n            </div>\r\n\r\n            <div className=\"input-wrapper upload-pet\">\r\n\r\n              <label className=\"half-label\">Photo:\r\n\r\n              </label>\r\n              <label htmlFor=\"photo\" className=\"btn-r btn-r-outlined-blue \">\r\n                Press to upload&nbsp;\r\n                <i className=\"fas fa-upload\"></i>\r\n              </label>\r\n              <input\r\n                onChange={(e) => {\r\n                  if (e.currentTarget.files.length !== 0)\r\n                    return dispatch({ type: 'uploadPhoto', field: 'photo', value: e.currentTarget.files[0], url: URL.createObjectURL(e.currentTarget.files[0]) })\r\n                  return\r\n                }}\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                id=\"photo\"\r\n                accept=\".png, .jpg, .jpeg\" />\r\n\r\n\r\n              {\r\n                state.photo.errorMsg &&\r\n\r\n                <InputError style={{ left: '40%' }} class='error-msg' msg={state.photo.errorMsg} />\r\n\r\n              }\r\n            </div>\r\n            {state.photo.url &&\r\n              <PhotoInfo\r\n                fileURL={state.photo.url}\r\n                fileName={state.photo.value.name}\r\n                fileSize={Math.round(state.photo.value.size / 1000)} />\r\n            }\r\n            { !state.photo.url && state.pets.length  &&\r\n              <div className=\"photo-info-wrapper flex-row gap-32p falign-center\">\r\n                <img alt='miniphoto' className=\"mini-pet-photo\" src={state.pets[state.petIndex].photo ? URL.createObjectURL(new Blob([new Uint8Array(state.pets[state.petIndex].photo.data)])) : '/media/imgs/cat.png'} />\r\n              </div>\r\n              \r\n            }\r\n\r\n            <div className=\"input-wrapper \">\r\n              <label className=\"half-label\" htmlFor=\"breed_name\">Select Breed:*\r\n              </label>\r\n              {state.breeds.length !== 0 &&\r\n                <select\r\n                  onChange={(e) => dispatch({ type: 'enterValue', field: 'breed_name', value: e.currentTarget.value })}\r\n                  name=\"breed_name\"\r\n                  id=\"breed_name\"\r\n                  defaultValue={state.selectedPet.breed_name}>\r\n                  <option value=\"\">Select a Breed</option>\r\n                  {state.breeds && state.breeds.map((breed, index) => {\r\n                    return <option key={index} value={breed.name}>{breed.name}</option>\r\n                  })}\r\n                </select>}\r\n\r\n            </div>\r\n            <div className=\"input-wrapper flex-row\">\r\n              <label className=\"half-label\" htmlFor=\"breed_name\">Select Colors max 3:*\r\n              </label>\r\n              {state.colors && state.colors.length !== 0 && !state.isLoadingColors && state.selectedColors &&\r\n                state.colors.map((color, index) => {\r\n                  return (\r\n                    <div\r\n                      className={state.selectedColors.length !== 0 && state.selectedColors.includes(color.name) ? \"color-tag color-selected\" : \"color-tag\"}\r\n                      key={index}\r\n                    >\r\n                      <p\r\n                        onClick={(event) => {\r\n                          selectColor(event)\r\n                        }}\r\n                        colorid={index}\r\n                      >{color.name}</p>\r\n                    </div>\r\n                  )\r\n                })\r\n\r\n              }\r\n\r\n            </div>\r\n            {state.missingInput && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>Please Fill mandatory fields *</p>}\r\n            <button\r\n              onClick={() => dispatch({ type: 'validate' })}\r\n              type=\"button\" className=\"btn-r btn-r-blue\">Update Pet's Info</button>\r\n          </div>\r\n\r\n        </motion.form>\r\n\r\n      }\r\n    </AnimatePresence>\r\n\r\n  )\r\n}\r\n\r\nexport default EditPet","import { useReducer } from \"react\"\r\nimport dateFormat from \"dateformat\"\r\n\r\nconst managePetsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'successFetchPets':\r\n      return {\r\n        ...state,\r\n        isFetchingPets: false,\r\n        fetchPetsFailure: '',\r\n        pets: action.data\r\n      }\r\n\r\n    case 'failureFetchPets':\r\n      return {\r\n        ...state,\r\n        isFetchingPets: false,\r\n        fetchPetsFailure: action.error,\r\n      }\r\n    case 'errorModalExit':\r\n      return {\r\n        ...state,\r\n        fetchPetsFailure: '',\r\n        responseError: ''\r\n      }\r\n\r\n    case 'enterValue': {\r\n      return {\r\n        ...state,\r\n        [action.field]: {\r\n          ...state[action.field],\r\n          value: action.value\r\n        }\r\n      }\r\n    }\r\n    case 'uploadPhoto': {\r\n      // if the image is greater than 10Mb\r\n      if (action.value.size > 10000000)\r\n        return {\r\n          ...state,\r\n          [action.field]: {\r\n            value: '',\r\n            url: '',\r\n            errorMsg: 'Image too big!'\r\n          }\r\n        }\r\n      return {\r\n        ...state,\r\n        [action.field]: {\r\n          value: action.value,\r\n          url: action.url,\r\n          errorMsg: ''\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n    case 'successGetPetData': {\r\n      return {\r\n        ...state,\r\n        isLoadingPets: false,\r\n        getPetsResult: action.data,\r\n      }\r\n    }\r\n    case 'selectPet': {\r\n      return {\r\n        ...state,\r\n        petIndex: action.index,\r\n        isLoadingBreeds: true,\r\n        isUpdating: false,\r\n        missingInput: false,\r\n        breeds: [],\r\n        selectedPet: action.data,\r\n        pet_type: action.data.type_name,\r\n        selectedColors: [],\r\n        name: {\r\n          value: action.data.name,\r\n          errorMsg: ''\r\n        },\r\n        gender: {\r\n          value: action.data.gender,\r\n          errorMsg: ''\r\n        },\r\n        birth_date: {\r\n          value: dateFormat(action.data.birth_date, 'UTC:yyyy-mm-dd'),\r\n          errorMsg: ''\r\n        },\r\n        photo: {\r\n          url: '',\r\n          value: '',\r\n          errorMsg: ''\r\n        },\r\n        breed_name: {\r\n          value: action.data.breed_name,\r\n          errorMsg: ''\r\n        },\r\n        showUpdateMenu: true\r\n      }\r\n    }\r\n\r\n\r\n\r\n    case 'getBreedsSuccess': {\r\n      return {\r\n        ...state,\r\n        responseError: '',\r\n        isLoadingBreeds: false,\r\n        breeds: action.data\r\n      }\r\n    }\r\n    case 'getColors': {\r\n      return {\r\n        ...state,\r\n        isLoadingColors: true\r\n      }\r\n    }\r\n    case 'getColorsSuccess': {\r\n      return {\r\n        ...state,\r\n        responseError: '',\r\n        isLoadingColors: false,\r\n        colors: action.data\r\n      }\r\n    }\r\n    case 'selectColor': {\r\n      var index = state.selectedColors.indexOf(action.color);\r\n\r\n      if (index !== -1) {\r\n        return {\r\n          ...state,\r\n          selectedColors: state.selectedColors.filter((color) => {\r\n            return color !== action.color\r\n          })\r\n        }\r\n      }\r\n      if (state.selectedColors.length === 3)\r\n        return state\r\n      return {\r\n        ...state,\r\n        selectedColors: [...state.selectedColors, action.color]\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // validating when the registerpet is pressed\r\n    case 'validate': {\r\n\r\n      if (state.isUpdating)\r\n        return state\r\n\r\n      if (!state.name.value || !state.breed_name.value || state.selectedColors.length === 0)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n      // incase of errors in the form\r\n      if (state.photo.errorMsg)\r\n        return {\r\n          ...state,\r\n          missingInput: false\r\n        }\r\n      // incase of successfull validation, here we create FormData() object because we are not sending json, we are sending multipart/form-data \r\n      var formData = new FormData()\r\n      formData.append('name', state.name.value)\r\n      formData.append('gender', state.gender.value)\r\n      formData.append('birth_date', state.birth_date.value)\r\n      formData.append('pet_type', state.pet_type)\r\n      formData.append('breed_name', state.breed_name.value)\r\n      formData.append('photo', state.photo.value)\r\n      formData.append('colors', state.selectedColors.join(':'))\r\n\r\n      return {\r\n        ...state,\r\n        dataToUpdate: formData,\r\n        isUpdating: true,\r\n        missingInput: false\r\n      }\r\n    }\r\n    case 'successUpdate': {\r\n      return {\r\n        ...state,\r\n        isUpdating: false,\r\n        updateResult: action.data\r\n      }\r\n    }\r\n\r\n    case 'failure': {\r\n      return {\r\n        ...state,\r\n        isLoadingPets: false,\r\n        isLoadingBreeds: false,\r\n        isLoadingColors: false,\r\n        isUpdating: false,\r\n        responseError: action.error\r\n      }\r\n    }\r\n\r\n    case 'selectToDelete': \r\n      return {\r\n        ...state,\r\n        petToDelete: action.deleteId\r\n      }\r\n    case 'startDeleting': \r\n      return {\r\n        ...state,\r\n        isDeletingPet: true,\r\n        deletePetResult: '',\r\n        deletePetFailure: ''\r\n      }\r\n    case 'deletePetSuccess':\r\n      return {\r\n        ...state,\r\n        isDeletingPet: false,\r\n        deletePetResult: action.data.result,\r\n        deletePetFailure: ''\r\n      }\r\n    case 'deletePetFailure':\r\n      return {\r\n        ...state,\r\n        isDeletingPet: false,\r\n        deletePetFailure: action.error\r\n      }\r\n    default:\r\n      break\r\n  }\r\n}\r\nconst useManagePets = (initialData) => {\r\n  const [state, dispatch] = useReducer(managePetsReducer, initialData)\r\n  return [state, dispatch]\r\n}\r\nexport default useManagePets","\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport { useContext, useState, useEffect } from 'react'\r\nimport DeletePostModal from \"../../profile/myadoptionposts/DeletePostModal\"\r\n\r\nimport EditPet from './EditPet'\r\nimport useManagePets from '../../../shared/hooks/managepets-hook';\r\nimport { authContext } from '../../../shared/context/auth-context';\r\nimport useFetch from '../../../shared/hooks/fetch-hook';\r\nimport { pageLoadingContext } from '../../../shared/context/loading-context';\r\nimport Modal from '../../../utils/modal/Modal';\r\nimport dateFormat from \"dateformat\"\r\n\r\n\r\n// this data will be used in the form's date input\r\nconst today = new Date()\r\nconst maxDate = dateFormat(today, 'isoDate')\r\n\r\n\r\nconst initialData = {\r\n  openModal: false,\r\n  openEditModal: false,\r\n\r\n  isFetchingPets: true,\r\n  fetchPetsFailure: '',\r\n  pets: [],\r\n\r\n  responseError: '',\r\n  missingInput: false,\r\n  isUpdating: false,\r\n  isLoadingBreeds: false,\r\n  dataToUpdate: null,\r\n  updateResult: '',\r\n  showUpdateMenu: false,\r\n  selectedPet: null,\r\n  pet_type: 'cat',\r\n  breeds: [],\r\n  selectedColors: [],\r\n  isLoadingColors: false,\r\n  colors: [],\r\n  petIndex: null,\r\n\r\n  name: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  gender: {\r\n    value: 'male',\r\n    errorMsg: ''\r\n  },\r\n  birth_date: {\r\n    value: maxDate,\r\n    errorMsg: ''\r\n  },\r\n  photo: {\r\n    value: '',\r\n    url: '',\r\n    errorMsg: ''\r\n  },\r\n  breed_name: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  petToDelete: null,\r\n  isDeletingPet: false,\r\n  deletePetResult: '',\r\n  deletePetFailure: ''\r\n}\r\nconst ManagePets = () => {\r\n\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const [openEditModal, setOpenEditModal] = useState(false)\r\n  const [state, dispatch] = useManagePets(initialData)\r\n  const auth = useContext(authContext)\r\n  const sendRequest = useFetch()\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const fetchPets = async () => {\r\n      try {\r\n        const pets = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}receptionist/shelterpets`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (pets && isMount)\r\n          dispatch({ type: 'successFetchPets', data: pets })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failureFetchPets', error: e.message })\r\n      }\r\n    }\r\n    fetchPets()\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    setPageIsLoading(state.isFetchingPets)\r\n  }, [state.isFetchingPets, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getBreeds = async () => {\r\n      try {\r\n\r\n        const parsedData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}pets/breeds?pet_type=${state.pet_type}`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (parsedData && isMount) {\r\n          dispatch({ type: 'getBreedsSuccess', data: parsedData })\r\n\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failure', data: e.message })\r\n      }\r\n    }\r\n\r\n    if (state.isLoadingBreeds)\r\n      getBreeds()\r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [sendRequest, auth.token, dispatch, setPageIsLoading, state.pet_type, state.isLoadingBreeds])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    if (isMount)\r\n      dispatch({ type: 'getColors' })\r\n\r\n    const getColors = async () => {\r\n      try {\r\n\r\n        const parsedData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}pets/colors`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (parsedData && isMount)\r\n          dispatch({ type: 'getColorsSuccess', data: parsedData })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failure', data: e.message })\r\n      }\r\n    }\r\n\r\n\r\n    getColors()\r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [sendRequest, auth.token, dispatch, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const updateData = async () => {\r\n      try {\r\n        const updateResult = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}receptionist/shelterpets/${state.selectedPet && state.selectedPet.id}`, 'PATCH', state.dataToUpdate, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (isMount && updateResult)\r\n          dispatch({ type: 'successUpdate', data: updateResult.result })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failure', error: e.message })\r\n      }\r\n    }\r\n    if (state.isUpdating)\r\n      updateData()\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, setPageIsLoading, state.dataToUpdate, state.isUpdating, state.selectedPet])\r\n\r\n  useEffect(() => {\r\n    setPageIsLoading(state.isLoadingBreeds || state.isLoadingColors || state.isUpdating || state.isDeletingPet)\r\n  }, [state.isLoadingBreeds, state.isLoadingColors, state.isUpdating, setPageIsLoading, state.isDeletingPet])\r\n\r\n  useEffect(() => {\r\n    if (!openModal && !state.isDeletingPet)\r\n     dispatch({ type: 'selectToDelete', deleteId: null })\r\n\r\n  }, [openModal, state.isDeletingPet, dispatch])\r\n\r\n  useEffect(() => {\r\n\r\n    let isMount = true\r\n    const deletePet = async () => {\r\n      try {\r\n        const result = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}receptionist/shelterpets/${state.petToDelete && state.petToDelete}`, 'DELETE', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (isMount && result)\r\n          dispatch({ type: 'deletePetSuccess', data: result })\r\n      } catch(e) {\r\n        if (isMount)\r\n          dispatch({ type: 'deletePetFailure', error: e.message })\r\n      }\r\n    }\r\n    if (state.isDeletingPet)\r\n      deletePet()\r\n    return () => {\r\n      isMount = false\r\n      setPageIsLoading(false)\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, setPageIsLoading, state.isDeletingPet, state.petToDelete])\r\n\r\n  return (\r\n    <>\r\n      {(state.fetchPetsFailure || state.responseError || state.deletePetFailure) &&\r\n        <Modal\r\n          modalClass='error'\r\n          header='Oops!!'\r\n          body={state.fetchPetsFailure || state.responseError || state.deletePetFailure}\r\n          dispatch={dispatch}\r\n        />}\r\n      {(state.updateResult || state.deletePetResult) &&\r\n        <Modal\r\n          modalClass='success'\r\n          header='Success!!'\r\n          body={state.updateResult || state.deletePetResult}\r\n          dispatch={dispatch}\r\n          refresh={true}\r\n        />}\r\n      <h4>Manage Pets</h4>\r\n      <div>\r\n        <div className=\"flex-col falign-center fjust-center \">\r\n          {openModal && <DeletePostModal closeModal={setOpenModal} dispatch={dispatch} />}\r\n        </div>\r\n\r\n        <div className=\"flex-col falign-center fjust-center \">\r\n          {openEditModal && <EditPet setOpenEditModal={setOpenEditModal} state={state} dispatch={dispatch} />}\r\n        </div>\r\n\r\n        <Table className=\"my-table\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>\r\n                ID\r\n              </Th>\r\n              <Th>\r\n                Name\r\n              </Th>\r\n\r\n              <Th>\r\n                Type\r\n              </Th>\r\n              <Th>\r\n                Gender\r\n              </Th>\r\n              <Th>\r\n                Breed\r\n              </Th>\r\n\r\n              <Th>\r\n                Edit\r\n              </Th>\r\n              <Th>\r\n                Delete\r\n              </Th>\r\n\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n\r\n            {/* first user */}\r\n\r\n            {state.pets.map((pet, index) => {\r\n              return (\r\n                <Tr key={index}>\r\n                  <Td>\r\n                    {pet.id}\r\n                  </Td>\r\n                  <Td>\r\n                    {pet.name}\r\n                  </Td>\r\n\r\n                  <Td>\r\n                    {pet.type_name}\r\n                  </Td>\r\n                  <Td>\r\n                    {pet.gender}\r\n                  </Td>\r\n                  <Td>\r\n                    {pet.breed_name}\r\n                  </Td>\r\n\r\n                  <Td>\r\n\r\n\r\n                    <button className=\"my-great-button margin-bottom\"\r\n                      onClick={() => {\r\n                        window.scrollTo(0, 0)\r\n                        dispatch({ type: 'selectPet', data: state.pets[index], index })\r\n                        setOpenEditModal(true)\r\n                        setOpenModal(false)\r\n                      }}><i className=\"fa-regular fa-pen-to-square\"></i></button>\r\n\r\n\r\n                  </Td>\r\n                  <Td>\r\n                    <button className=\"my-great-button margin-bottom \"\r\n                      onClick={() => { \r\n                        window.scrollTo(0, 0)\r\n                        dispatch({ type: 'selectToDelete', deleteId: pet.id })\r\n                        setOpenModal(true)\r\n                        setOpenEditModal(false)\r\n                       }}\r\n                    ><i \r\n                    className={(state.petToDelete && state.petToDelete === pet.id) ? \"fa-regular fa-trash-can active\" : \"fa-regular fa-trash-can\"}></i></button>\r\n                  </Td>\r\n\r\n                </Tr>\r\n              )\r\n            })}\r\n\r\n\r\n            {/* second user  */}\r\n\r\n\r\n\r\n\r\n          </Tbody>\r\n\r\n\r\n\r\n        </Table>\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default ManagePets","\r\n\r\n// this custom hook contains the logic of sending a request to the server and getting databack, we wrap it with a useCallback so that it won't create the function every time the component using the hooks rerenders\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = 'GET',\r\n    body = null,\r\n    headers = {},\r\n\r\n\r\n  ) => {\r\n    try {\r\n      // 'Content-Type': 'application/json'\r\n      const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      const parsedData = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(parsedData.error)\r\n      }\r\n      return parsedData\r\n      \r\n    } catch (e) {\r\n      throw e\r\n    }\r\n    \r\n    \r\n  \r\n  \r\n  }, []) \r\n  return sendRequest\r\n}\r\nexport default useFetch","const modalMotion = {\r\n  initial: {\r\n    y: '-100vh',\r\n  },\r\n  final: {\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    y: '-100vh'\r\n  }\r\n}\r\nexport default modalMotion","import { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useState } from \"react\"\r\nimport modalMotion from \"./modalMotion\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst modalVariant = modalMotion\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [show, setShow] = useState(true)\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div className={`modal modal_${props.modalClass}`}>\r\n        <AnimatePresence>\r\n          {show && <motion.div \r\n          variants={modalVariant}\r\n          initial='initial'\r\n          animate='final'\r\n          exit='exit'\r\n\r\n          className={`modal-container modal-container__${props.modalClass} flex-col gap-16p falign-center`}>\r\n\r\n            <header className={`modal-header modal-header__${props.modalClass}`}>\r\n              {props.header}\r\n            </header>\r\n            <div className={`flex-col gap-8p modal-body modal-body__${props.modalClass}`}>\r\n              {props.body}\r\n            </div>\r\n            <footer className={`modal-footer modal-footer__${props.modalClass}`}>\r\n            {(props.modalClass === 'check' || props.modalClass === 'edit') && \r\n                <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  setTimeout(() => {props.dispatch({ type: 'finalConfirm' })}, 300)\r\n                  \r\n                }}\r\n                className='btn-rec modal-button modal-button__confirm'>Confirm </button>\r\n              }\r\n              <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  if (props.refresh)\r\n                    return  setTimeout(() => {window.location.reload()}, 300)\r\n                  if (props.redirectTo)\r\n                    return setTimeout(() => {navigate(props.redirectTo)}, 300)\r\n                    \r\n                  setTimeout(() => {props.dispatch({ type: `${props.modalClass}ModalExit` })}, 300)\r\n                  \r\n                }}\r\n                className={`btn-rec modal-button modal-button__${props.modalClass}`}>{props.modalClass === 'success' ? 'OK' : props.modalClass === 'check' ? 'Cancel' :props.modalClass === 'edit' ? 'Cancel' : 'Exit'}</button>\r\n\r\n              \r\n              \r\n            </footer>\r\n\r\n          </motion.div>}\r\n        </AnimatePresence>\r\n\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n  // modalClass, header, body, modalButtonClass, modalType\r\n}\r\n\r\nexport default Modal","const InputError = (props) => {\r\n  return (\r\n    <span style={props.style} className={props.class}>{props.msg}</span>\r\n  )\r\n}\r\n\r\nexport default InputError","\r\nconst DeletePostModal = ({ closeModal, dispatch }) => {\r\n    return (\r\n        <div className=\"modal-background flex falign-center fjust-center\">\r\n            <div className=\"modal-container flex-col fgap-16p falign-center fjust-center\">\r\n                <div className=\"x-close\"><button\r\n                onClick={() => closeModal(false)}>\r\n                <i className=\"fa-solid fa-xmark\"></i></button></div>\r\n                <div className=\"modal-title\">\r\n                    Are you sure you want to delete?\r\n                </div>\r\n                <div className=\"flex-row edit-modal-buttons-container gap-24p fjust-center\">\r\n                    <button \r\n                    onClick={() => {\r\n                      closeModal(false)\r\n                      dispatch({ type: 'startDeleting' })\r\n                    }}\r\n                    className=\"btn-rec-purple\">Yes</button>\r\n                    <button onClick={() => closeModal(false)}\r\n                        className=\"btn-rec-purple\">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeletePostModal","\r\nconst PhotoInfo = (props) => {\r\n  return (\r\n    <div className=\"photo-info-wrapper flex-row gap-32p falign-center\">\r\n      <img src={props.fileURL} alt='mini-upload-icon' />\r\n      <div className=\"flex-col gap-8p\">\r\n        <p>{props.fileName}</p><span>{props.fileSize}Kbytes</span>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default PhotoInfo","const adoptionMotion = {\r\n  initial: {\r\n    opacity: 0\r\n  },\r\n  final: {\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 1\r\n    }\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 0.5\r\n    }\r\n  },\r\n}\r\n\r\nexport { adoptionMotion }"],"sourceRoot":""}