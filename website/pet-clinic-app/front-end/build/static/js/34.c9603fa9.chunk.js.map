{"version":3,"sources":["components/pages/signup/Signup.js","components/shared/hooks/fetch-hook.js","components/utils/formErrorMsg/InputError.js","components/shared/hooks/signup-form-hook.js"],"names":["initialState","first_name","value","errorMsg","last_name","username","phone_number","address","email","password","re_password","dataToSend","isLoading","missingInput","responseError","responseData","Signup","useSignupForm","state","dispatch","sendRequest","useFetch","auth","useContext","authContext","setPageIsLoading","pageLoadingContext","submitForm","event","a","preventDefault","type","useEffect","isMount","fetchUser","Object","keys","length","process","JSON","stringify","parsedData","data","error","message","token","login","userData","id","stmem_type","className","action","method","onSubmit","e","href","src","alt","htmlFor","name","onChange","field","currentTarget","class","msg","placeholder","onBlur","cols","rows","style","color","textAlign","width","margin","disabled","to","useCallback","url","body","headers","fetch","response","json","ok","Error","InputError","props","formReducer","isPhone","validator","isMobilePhone","isEmail","isStrongPassword","isMatch","useReducer"],"mappings":"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","file":"static/js/34.c9603fa9.chunk.js","sourcesContent":["import { useEffect, useContext } from \"react\"\r\nimport InputError from \"../../utils/formErrorMsg/InputError\"\r\nimport useFetch from \"../../shared/hooks/fetch-hook\"\r\nimport useSignupForm from \"../../shared/hooks/signup-form-hook\"\r\nimport { authContext } from \"../../shared/context/auth-context\"\r\nimport { pageLoadingContext } from \"../../shared/context/loading-context\"\r\nimport { Link } from 'react-router-dom'\r\n// import {\r\n//   useWhatChanged,\r\n//   setUseWhatChange,\r\n// } from '@simbathesailor/use-what-changed';\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n  first_name: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  last_name: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  username: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  phone_number: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  address: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  email: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  password: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  re_password: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  dataToSend: {},\r\n  isLoading: false,\r\n  missingInput: false,\r\n  responseError: '',\r\n  responseData: {}\r\n\r\n}\r\n\r\nconst Signup = () => {\r\n\r\n  // using the form-hook\r\n  const [state, dispatch] = useSignupForm(initialState)\r\n\r\n  // using the fetch hook\r\n  const sendRequest = useFetch()\r\n  \r\n\r\n\r\n  const auth = useContext(authContext)\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n\r\n\r\n  const submitForm = async (event) => {\r\n    event.preventDefault()\r\n    dispatch({ type: 'validate' })\r\n  }\r\n\r\n  // useWhatChanged([state.dataToSend, state.isLoading, sendRequest, auth, dispatch, state.responseData,state.responseError]);\r\n  // if we have async operation inside use effect we have to wrap the operation with an async function inside the useeffect and then we should call the same function again inside the useEffect without using await\r\n  useEffect(() => {\r\n\r\n    let isMount = true\r\n    // wrapper function to enable us to use async functions inside useEffect\r\n    const fetchUser = async () => {\r\n      \r\n        if (Object.keys(state.responseData).length === 0 && state.responseError === '') {\r\n\r\n          try {\r\n            const parsedData = await sendRequest(\r\n              `${process.env.REACT_APP_BACKEND_URL}users`,\r\n              'POST', JSON.stringify(state.dataToSend),\r\n              {\r\n                'Content-Type': 'application/json'\r\n              })\r\n            if (parsedData && isMount)\r\n              dispatch({ type: 'success', data: parsedData})\r\n          } catch (e) {\r\n            dispatch({ type: 'failure', error: e.message})\r\n          }\r\n        }\r\n    }\r\n\r\n    // isLoading changes from false to true if the validation process  passed successfully \r\n    if (state.isLoading ) {\r\n      fetchUser()\r\n    }\r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n\r\n    }\r\n  }, [state.dataToSend, state.isLoading, sendRequest, dispatch, state.responseData,state.responseError,setPageIsLoading ])\r\n\r\n  \r\n  useEffect(() => {\r\n    setPageIsLoading(state.isLoading)\r\n  }, [state.isLoading, setPageIsLoading])\r\n\r\n  // after data been fetched if we have a token inside the data that means the login was successfull so we login\r\n  useEffect(() => {\r\n    if (state.responseData.token)\r\n      auth.login(state.responseData.userData.id, state.responseData.token, state.responseData.userData.stmem_type)\r\n    \r\n  }, [state.responseData, auth])\r\n\r\n  return (\r\n    <div className=\"background-blue\">\r\n      <div className=\"main-container flex-row\">\r\n        <form className=\"form-container flex-col gap-16p falign-center\" action=\"/\" method=\"POST\"\r\n          onSubmit={(e) => submitForm(e)}>\r\n          <a className=\"logo-link\" href=\"/#\">\r\n            <img src=\"/media/imgs/favicon.png\" alt=\"\" className=\"logo\" />\r\n          </a>\r\n\r\n          <div className=\"input-wrapper flex-row fjust-between\">\r\n            <label className=\"half-label\" htmlFor=\"first_name\">First Name:*\r\n            </label>\r\n            <input type=\"text\" name=\"first_name\" id=\"first_name\" onChange={(e) => { dispatch({ type: 'enterValue', field: 'first_name', value: e.currentTarget.value }) }} />\r\n          </div>\r\n\r\n          <div className=\"input-wrapper flex-row fjust-between\">\r\n            <label className=\"half-label\" htmlFor=\"last_name\">Last Name:*\r\n            </label>\r\n            <input type=\"text\" name=\"last_name\" id=\"last_name\" onChange={(e) => { dispatch({ type: 'enterValue', field: 'last_name', value: e.currentTarget.value }) }} />\r\n          </div>\r\n\r\n          <div className=\"input-wrapper flex-row fjust-between\">\r\n            <label className=\"half-label\" htmlFor=\"username\">Username:*\r\n            </label>\r\n            <input type=\"text\" name=\"username\" id=\"username\" onChange={(e) => { dispatch({ type: 'enterValue', field: 'username', value: e.currentTarget.value }) }} />\r\n            {state.username.errorMsg && <InputError class='error-msg' msg={state.username.errorMsg} />}\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"input-wrapper flex-row fjust-between\">\r\n            <label className=\"half-label\" htmlFor=\"phone_number\">Phone Number:\r\n            </label>\r\n            <input type=\"text\" name=\"phone_number\" id=\"phone_number\" placeholder=\"eg. 506 022 23 80\"\r\n              onChange={(e) => { dispatch({ type: 'enterValue', field: 'phone_number', value: e.currentTarget.value }) }}\r\n              onBlur={() => { dispatch({ type: 'blurPhone' }) }} />\r\n\r\n            {state.phone_number.errorMsg && <InputError class='error-msg' msg={state.phone_number.errorMsg} />}\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"input-wrapper flex-row fjust-between\">\r\n            <label className=\"half-label\" htmlFor=\"address\">Address:*\r\n            </label>\r\n            <textarea name=\"address\" id=\"address\" cols=\"30\" rows=\"4\" onChange={(e) => { dispatch({ type: 'enterValue', field: 'address', value: e.currentTarget.value }) }}></textarea>\r\n          </div>\r\n\r\n          <div className=\"input-wrapper flex-row fjust-between\">\r\n            <label className=\"half-label\" htmlFor=\"email\">Email:*\r\n            </label>\r\n            <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"example@gmail.com\"\r\n              onChange={(e) => { dispatch({ type: 'enterValue', field: 'email', value: e.currentTarget.value }) }}\r\n              onBlur={() => { dispatch({ type: 'blurEmail' }) }}\r\n            />\r\n            {state.email.errorMsg && <InputError class='error-msg' msg={state.email.errorMsg} />}\r\n\r\n          </div>\r\n\r\n          <div className=\"input-wrapper flex-row fjust-between\">\r\n            <label className=\"half-label\" htmlFor=\"password\">Password:*\r\n            </label>\r\n            <input type=\"password\" name=\"password\" id=\"password\"\r\n              onChange={(e) => { dispatch({ type: 'enterValue', field: 'password', value: e.currentTarget.value }) }}\r\n              onBlur={() => { dispatch({ type: 'blurPassword' }) }}\r\n            />\r\n            {state.password.errorMsg && <InputError class='error-msg' msg={state.password.errorMsg} />}\r\n          </div>\r\n\r\n          <div className=\"input-wrapper flex-row fjust-between\">\r\n            <label className=\"half-label\" htmlFor=\"rePassword\">Re-password:*\r\n            </label>\r\n            <input type=\"password\" name=\"rePassword\" id=\"rePassword\"\r\n              onChange={(e) => { dispatch({ type: 'enterValue', field: 're_password', value: e.currentTarget.value }) }}\r\n              onBlur={() => { dispatch({ type: 'blurRePassword' }) }}\r\n            />\r\n            {state.re_password.errorMsg && <InputError class='error-msg' msg={state.re_password.errorMsg} />}\r\n          </div>\r\n\r\n          {state.missingInput && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>Please Fill mandatory fields *</p>}\r\n          {state.responseError && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>{state.responseError}</p>}\r\n\r\n          <div className=\"button-wrapper flex-row gap-8p fjust-center\">\r\n\r\n\r\n            <button type=\"submit\" className={state.isLoading ? \"btn-r btn-r-dark disabled\" : \"btn-r btn-r-dark\"} disabled={state.isLoading}>\r\n              Sign up\r\n            </button>\r\n\r\n            <Link\r\n            to='/login'\r\n            className='btn-r btn-r-purple'\r\n            >Already a member?</Link>\r\n\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"split-screen-signup\">\r\n          <img src=\"/media/imgs/sleeping-cat.jpg\" alt=\"\" />\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\nexport default Signup;\r\n","\r\n\r\n// this custom hook contains the logic of sending a request to the server and getting databack, we wrap it with a useCallback so that it won't create the function every time the component using the hooks rerenders\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = 'GET',\r\n    body = null,\r\n    headers = {},\r\n\r\n\r\n  ) => {\r\n    try {\r\n      // 'Content-Type': 'application/json'\r\n      const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      const parsedData = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(parsedData.error)\r\n      }\r\n      return parsedData\r\n      \r\n    } catch (e) {\r\n      throw e\r\n    }\r\n    \r\n    \r\n  \r\n  \r\n  }, []) \r\n  return sendRequest\r\n}\r\nexport default useFetch","const InputError = (props) => {\r\n  return (\r\n    <span style={props.style} className={props.class}>{props.msg}</span>\r\n  )\r\n}\r\n\r\nexport default InputError","import { useReducer } from 'react'\r\nimport validator from 'validator'\r\n\r\n// This custom hook is currently adjusted to validate user inputs when signing up using userReducer\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    // ***************** Forms input validations *************************\r\n    case 'enterValue': {\r\n      return {\r\n        ...state,\r\n        [action.field]: {\r\n          ...state[action.field],\r\n          value: action.value\r\n        }\r\n      }\r\n    }\r\n    \r\n    // when focus on phone input is out\r\n    case 'blurPhone': {\r\n      const isPhone = validator.isMobilePhone(state.phone_number.value)\r\n      if (!state.phone_number.value || isPhone) {\r\n        return {\r\n          ...state,\r\n          phone_number: {\r\n            ...state.phone_number,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      }\r\n      if (!isPhone) {\r\n        return {\r\n          ...state,\r\n          phone_number: {\r\n            ...state.phone_number,\r\n            errorMsg: 'Invalid Phone number'\r\n          }\r\n        }\r\n      }\r\n      break;\r\n\r\n\r\n    }\r\n    // when focus on email input is out\r\n    case 'blurEmail': {\r\n      const isEmail = validator.isEmail(state.email.value)\r\n      if (!state.email.value || isEmail) {\r\n        return {\r\n          ...state,\r\n          email: {\r\n            ...state.email,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      }\r\n      if (!isEmail) {\r\n        return {\r\n          ...state,\r\n          email: {\r\n            ...state.email,\r\n            errorMsg: 'Invalid Email Address'\r\n          }\r\n\r\n        }\r\n      }\r\n      break;\r\n\r\n    }\r\n    case 'blurPassword': {\r\n\r\n      // empty password field\r\n      if (!state.password.value)\r\n        return {\r\n          ...state,\r\n          password: {\r\n            ...state.password,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      const isStrong = validator.isStrongPassword(state.password.value)\r\n\r\n      // strong password\r\n      if (isStrong) {\r\n\r\n        // strong but empty re_password\r\n        if (!state.re_password.value)\r\n          return {\r\n            ...state,\r\n            password: {\r\n              ...state.password,\r\n              errorMsg: ''\r\n            },\r\n            re_password: {\r\n              ...state.re_password,\r\n              errorMsg: ''\r\n            }\r\n          }\r\n\r\n        // strong but dosen't match repassword\r\n        if (state.password.value !== state.re_password.value)\r\n          return {\r\n            ...state,\r\n            password: {\r\n              ...state.password,\r\n              errorMsg: ''\r\n            },\r\n            re_password: {\r\n              ...state.re_password,\r\n              errorMsg: 'password not matched!!'\r\n            }\r\n          }\r\n\r\n        // strong and match\r\n        return {\r\n          ...state,\r\n          password: {\r\n            ...state.password,\r\n            errorMsg: ''\r\n          },\r\n          re_password: {\r\n            ...state.re_password,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      }\r\n\r\n      // weak and empty repassword\r\n      if (!state.re_password.value)\r\n        return {\r\n          ...state,\r\n          password: {\r\n            ...state.password,\r\n            errorMsg: 'minlength:8, must include uppercase, numbers and special chars'\r\n          },\r\n          re_password: {\r\n            ...state.re_password,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      // weak and no match\r\n      if (state.password.value !== state.re_password.value)\r\n        return {\r\n          ...state,\r\n          password: {\r\n            ...state.password,\r\n            errorMsg: 'minlength:8, must include uppercase, numbers and special chars'\r\n          },\r\n          re_password: {\r\n            ...state.re_password,\r\n            errorMsg: 'password not matched!!'\r\n          }\r\n        }\r\n      // weak and match\r\n      return {\r\n        ...state,\r\n        password: {\r\n          ...state.password,\r\n          errorMsg: 'minlength:8, must include uppercase, numbers and special chars'\r\n        },\r\n        re_password: {\r\n          ...state.re_password,\r\n          errorMsg: ''\r\n        }\r\n      }\r\n    }\r\n    case 'blurRePassword': {\r\n      const isMatch = state.password.value === state.re_password.value\r\n      if (!state.re_password.value)\r\n        return {\r\n          ...state,\r\n          re_password: {\r\n            ...state.re_password,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n\r\n      if (!isMatch)\r\n        return {\r\n          ...state,\r\n          re_password: {\r\n            ...state.re_password,\r\n            errorMsg: 'password not matched!!'\r\n          }\r\n\r\n        }\r\n      return {\r\n        ...state,\r\n        re_password: {\r\n          ...state.re_password,\r\n          errorMsg: ''\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    // validating when the signup is pressed\r\n    case 'validate': {\r\n\r\n      if (state.isLoading)\r\n        return state\r\n\r\n      // incase of missing mandatory inputs\r\n      if (!state.first_name.value || !state.last_name.value || !state.username.value || !state.email.value || !state.address.value || !state.password.value || !state.re_password.value || !state.phone_number.value)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n\r\n      // incase of errors in the form\r\n      if (state.username.errorMsg || state.email.errorMsg || state.password.errorMsg || state.re_password.errorMsg || state.phone_number.errorMsg)\r\n        return state\r\n\r\n\r\n      // incase of successfull validation\r\n      return {\r\n        ...state,\r\n        dataToSend: {\r\n          first_name: state.first_name.value,\r\n          last_name: state.last_name.value,\r\n          username: state.username.value,\r\n          phone_number: state.phone_number.value,\r\n          address: state.address.value,\r\n          email: state.email.value,\r\n          password: state.password.value\r\n        },\r\n        isLoading: true,\r\n        missingInput: false\r\n      }\r\n\r\n    }\r\n\r\n    \r\n  \r\n    // *************** state management when using fetch *******************\r\n    \r\n    \r\n    // when fetching data is succeded \r\n    case 'success': {\r\n      return {\r\n        ...state,\r\n        responseError: '',\r\n        isLoading: false,\r\n        responseData: action.data\r\n      }\r\n    }\r\n\r\n    // when fetching data is failed\r\n    case 'failure': {\r\n      return {\r\n        ...state,\r\n        responseError: action.error,\r\n        isLoading: false\r\n      }\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nconst useSignupForm = (initialState) => {\r\n  const [state, dispatch] = useReducer(formReducer, initialState)\r\n  return [state, dispatch]\r\n}\r\nexport default useSignupForm"],"sourceRoot":""}