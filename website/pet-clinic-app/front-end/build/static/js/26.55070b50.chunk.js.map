{"version":3,"sources":["components/shared/hooks/myaccount-hook.js","components/pages/profile/account/Account.js","components/shared/hooks/fetch-hook.js","components/utils/modal/modalMotion.js","components/utils/modal/Modal.js","components/utils/formErrorMsg/InputError.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js","../node_modules/framer-motion/dist/es/utils/use-force-update.js"],"names":["myAccountReducer","state","action","type","value","length","field","errorMsg","getMyDataResult","data","username","email","isLoadingMyData","responseError","isEmail","validator","new_password","isStrongPassword","changePassword","isUpdating","missingInput","old_password","formData","dataToUpdate","updateResult","error","useMyAccount","initialData","useReducer","Account","dispatch","sendRequest","useFetch","auth","useContext","authContext","setPageIsLoading","pageLoadingContext","useEffect","isMount","getMyData","a","process","token","myData","message","updateData","JSON","stringify","result","Modal","modalClass","header","body","refresh","className","htmlFor","onChange","e","currentTarget","name","id","onBlur","InputError","style","left","class","msg","onClick","color","textAlign","width","margin","useCallback","url","method","headers","fetch","response","json","parsedData","ok","Error","modalMotion","initial","y","final","exit","modalVariant","props","useState","show","setShow","navigate","useNavigate","AnimatePresence","motion","div","variants","animate","setTimeout","window","location","reload","redirectTo","presenceId","getPresenceId","PresenceChild","_a","children","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","allComplete","forEach","isComplete","register","delete","undefined","_","key","React","size","PresenceContext","Provider","Map","getChildKey","child","_b","exitBeforeEnter","_c","forceRender","unloadingRef","useRef","__read","forcedRenderCount","setForcedRenderCount","useUnmountEffect","current","useForceUpdate","layoutContext","SharedLayoutContext","isSharedLayout","forceUpdate","isInitialRender","filteredChildren","filtered","Children","isValidElement","push","onlyElements","presentChildren","allChildren","exiting","Set","updateChildLookup","map","childrenToRender","__spreadArray","presentKeys","targetKeys","numPresent","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement"],"mappings":"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","file":"static/js/26.55070b50.chunk.js","sourcesContent":["import { useReducer } from 'react'\r\nimport validator from 'validator'\r\nconst myAccountReducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'enterValue': {\r\n      if (action.value.length > 400)\r\n        return {\r\n          ...state,\r\n          [action.field]: {\r\n            ...state[action.field],\r\n            errorMsg: 'Max Characters length is 400 !!',\r\n          }\r\n        }\r\n      return {\r\n        ...state,\r\n        [action.field]: {\r\n          errorMsg: '',\r\n          value: action.value\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    case 'successGetMyData': {\r\n      return {\r\n        ...state,\r\n        getMyDataResult: action.data,\r\n        username: {\r\n          ...state.username,\r\n          value: action.data.username,\r\n        },\r\n        email: {\r\n          ...state.email,\r\n          value: action.data.email,\r\n        },\r\n        isLoadingMyData: false,\r\n        responseError: ''\r\n      }\r\n    }\r\n    case 'blurEmail': {\r\n      const isEmail = validator.isEmail(state.email.value)\r\n      if (!state.email.value || isEmail) {\r\n        return {\r\n          ...state,\r\n          email: {\r\n            ...state.email,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      }\r\n      if (!isEmail) {\r\n        return {\r\n          ...state,\r\n          email: {\r\n            ...state.email,\r\n            errorMsg: 'Invalid Email Address'\r\n          }\r\n\r\n        }\r\n      }\r\n      break;\r\n\r\n    }\r\n    case 'blurPassword': {\r\n\r\n      // empty password field\r\n      if (!state.new_password.value)\r\n        return {\r\n          ...state,\r\n          new_password: {\r\n            ...state.new_password,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      const isStrong = validator.isStrongPassword(state.new_password.value)\r\n\r\n      // strong password\r\n      if (isStrong) {\r\n\r\n        // strong and match\r\n        return {\r\n          ...state,\r\n          new_password: {\r\n            ...state.new_password,\r\n            errorMsg: ''\r\n          },\r\n\r\n        }\r\n      }\r\n\r\n     // weak and match\r\n      return {\r\n        ...state,\r\n        new_password: {\r\n          ...state.new_password,\r\n          errorMsg: 'minlength:8, must include uppercase, numbers and special chars'\r\n        },\r\n      }\r\n    }\r\n\r\n    case 'changePassword': {\r\n      return {\r\n        ...state,\r\n        new_password: {\r\n          ...state.new_password,\r\n          value: '',\r\n          errorMsg: ''\r\n        },\r\n        changePassword: state.changePassword === 'yes' ? 'no' : 'yes'\r\n\r\n      }\r\n    }\r\n    case 'validate': {\r\n\r\n      if (state.isUpdating)\r\n        return state\r\n\r\n      if (!state.username.value || !state.email.value)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n\r\n      if (state.changePassword === 'yes')\r\n        if (!state.new_password.value || !state.old_password.value)\r\n          return {\r\n            ...state,\r\n            missingInput: true\r\n          }\r\n      // incase of errors in the form\r\n      if (state.email.errorMsg || state.new_password.errorMsg)\r\n        return {\r\n          ...state,\r\n          missingInput: false\r\n        }\r\n      const formData = {\r\n        username: state.username.value,\r\n        email: state.email.value,\r\n        changePassword: state.changePassword,\r\n        old_password: state.old_password.value,\r\n        new_password: state.new_password.value,\r\n      }\r\n\r\n      \r\n      return {\r\n        ...state,\r\n        dataToUpdate: formData,\r\n        isUpdating: true,\r\n        missingInput: false,\r\n        responseError: ''\r\n      }\r\n    }\r\n    case 'successUpdate': {\r\n      return {\r\n        ...state,\r\n        isUpdating: false,\r\n        updateResult: action.data\r\n      }\r\n    }\r\n\r\n    case 'failure': {\r\n      return {\r\n        ...state,\r\n        isLoadingMyData: false,\r\n        isUpdating: false,\r\n        responseError: action.error\r\n      }\r\n    }\r\n    case 'errorModalExit': {\r\n      return {\r\n        ...state,\r\n        responseError: ''\r\n      }\r\n    }\r\n    default: break\r\n  }\r\n}\r\nconst useMyAccount = (initialData) => {\r\n  const [state, dispatch] = useReducer(myAccountReducer, initialData)\r\n  return [state, dispatch]\r\n}\r\nexport default useMyAccount","import {  useContext, useEffect } from \"react\"\r\nimport { authContext } from \"../../../shared/context/auth-context\"\r\nimport { pageLoadingContext } from \"../../../shared/context/loading-context\"\r\nimport useFetch from \"../../../shared/hooks/fetch-hook\"\r\nimport useMyAccount from \"../../../shared/hooks/myaccount-hook\"\r\nimport InputError from \"../../../utils/formErrorMsg/InputError\"\r\nimport Modal from \"../../../utils/modal/Modal\"\r\nconst initialData = {\r\n  isLoadingMyData: true,\r\n  getMyDataResult: null,\r\n  responseError: '',\r\n  username: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  email: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  changePassword: 'no',\r\n\r\n  old_password: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  new_password: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  missingInput: false,\r\n  isUpdating: false,\r\n  dataToUpdate: null,\r\n  updateResult: '',\r\n\r\n}\r\nconst Account = () => {\r\n  const [state, dispatch] = useMyAccount(initialData)\r\n  const sendRequest = useFetch()\r\n  const auth = useContext(authContext)\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n\r\n   useEffect(() => {\r\n    let isMount = true\r\n    const getMyData = async () => {\r\n      try {\r\n        const myData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}users/me`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (isMount && myData)\r\n          dispatch({ type: 'successGetMyData', data: myData })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failure', error: e.message })\r\n      }\r\n    }\r\n    getMyData()\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const updateData = async () => {\r\n      try {\r\n        const updateResult = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}users/me/account`, 'PATCH', JSON.stringify(state.dataToUpdate), {\r\n\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (isMount && updateResult)\r\n          dispatch({ type: 'successUpdate', data: updateResult.result })\r\n      } catch (e) {\r\n        if(isMount)\r\n          dispatch({ type: 'failure', error: e.message })\r\n      }\r\n    }\r\n    if (state.isUpdating)\r\n      updateData()\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  } ,[auth.token, dispatch, sendRequest, setPageIsLoading, state.dataToUpdate, state.isUpdating])\r\n  useEffect(() => {\r\n    setPageIsLoading(state.isLoadingMyData || state.isUpdating)\r\n  }, [state.isLoadingMyData, state.isUpdating, setPageIsLoading])\r\n\r\n  const togglePass = () => {\r\n    dispatch({ type: 'changePassword' })\r\n  }\r\n  return (\r\n    \r\n    <>\r\n    {state.updateResult &&\r\n        <Modal\r\n          modalClass='success'\r\n          header='Success!!'\r\n          body={state.updateResult}\r\n          dispatch={dispatch}\r\n          refresh={true}\r\n        />}\r\n      <h4>Account Management</h4>\r\n      <form className=\"profile-data account-data flex-col gap-24p\">\r\n\r\n      <div className=\"inputs-wrapper flex-col gap-16p\">\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"user_name\">User Name:* </label>\r\n          <input \r\n          value={state.username.value}\r\n          onChange={(e) => {\r\n            dispatch({ type: 'enterValue', field: 'username', value: e.currentTarget.value })\r\n          }}\r\n          type=\"text\" name=\"username\" id=\"user_name\"  />\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"e_mail\">Email:* </label>\r\n          <input \r\n          value={state.email.value}\r\n          onChange={(e) => {\r\n            dispatch({ type: 'enterValue', field: 'email', value: e.currentTarget.value })\r\n          }}\r\n          onBlur={() => { dispatch({ type: 'blurEmail' }) }}\r\n          type=\"text\" name=\"lastName\" id=\"e_mail\"  />\r\n          {state.email.errorMsg && <InputError style={{ left: '80%' }} class='error-msg' msg={state.email.errorMsg} />}\r\n        </div>\r\n        <button\r\n          onClick={togglePass}\r\n          type=\"button\" className=\"btn-r btn-r-dark change-pass\">Change Password</button>\r\n        {\r\n          state.changePassword === 'yes' &&\r\n          <>\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"old_pass\">Old Password:* </label>\r\n              <input \r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterValue', field: 'old_password', value: e.currentTarget.value })\r\n              }}\r\n              type=\"password\" name=\"old_pass\" id=\"old_pass\"  />\r\n              \r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <label htmlFor=\"new_pass\">New Password:* </label>\r\n              <input \r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterValue', field: 'new_password', value: e.currentTarget.value })\r\n              }}\r\n              onBlur={() => { dispatch({ type: 'blurPassword' }) }}\r\n              type=\"password\" name=\"new_pass\" id=\"new_pass\"  />\r\n              {state.new_password.errorMsg && <InputError style={{ left: '80%' }} class='error-msg' msg={state.new_password.errorMsg} />}\r\n            </div>\r\n          </>\r\n\r\n        }\r\n        {state.missingInput && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>Please Fill mandatory fields *</p>}\r\n          {state.responseError && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>{state.responseError}</p>}\r\n        <button \r\n        onClick={() => {\r\n          dispatch({ type: 'validate' })\r\n        }}\r\n        type=\"button\" className=\"btn-r btn-r-blue\">Update Account Info</button>\r\n      </div>\r\n\r\n    </form>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Account","\r\n\r\n// this custom hook contains the logic of sending a request to the server and getting databack, we wrap it with a useCallback so that it won't create the function every time the component using the hooks rerenders\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = 'GET',\r\n    body = null,\r\n    headers = {},\r\n\r\n\r\n  ) => {\r\n    try {\r\n      // 'Content-Type': 'application/json'\r\n      const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      const parsedData = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(parsedData.error)\r\n      }\r\n      return parsedData\r\n      \r\n    } catch (e) {\r\n      throw e\r\n    }\r\n    \r\n    \r\n  \r\n  \r\n  }, []) \r\n  return sendRequest\r\n}\r\nexport default useFetch","const modalMotion = {\r\n  initial: {\r\n    y: '-100vh',\r\n  },\r\n  final: {\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    y: '-100vh'\r\n  }\r\n}\r\nexport default modalMotion","import { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useState } from \"react\"\r\nimport modalMotion from \"./modalMotion\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst modalVariant = modalMotion\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [show, setShow] = useState(true)\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div className={`modal modal_${props.modalClass}`}>\r\n        <AnimatePresence>\r\n          {show && <motion.div \r\n          variants={modalVariant}\r\n          initial='initial'\r\n          animate='final'\r\n          exit='exit'\r\n\r\n          className={`modal-container modal-container__${props.modalClass} flex-col gap-16p falign-center`}>\r\n\r\n            <header className={`modal-header modal-header__${props.modalClass}`}>\r\n              {props.header}\r\n            </header>\r\n            <div className={`flex-col gap-8p modal-body modal-body__${props.modalClass}`}>\r\n              {props.body}\r\n            </div>\r\n            <footer className={`modal-footer modal-footer__${props.modalClass}`}>\r\n            {(props.modalClass === 'check' || props.modalClass === 'edit') && \r\n                <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  setTimeout(() => {props.dispatch({ type: 'finalConfirm' })}, 300)\r\n                  \r\n                }}\r\n                className='btn-rec modal-button modal-button__confirm'>Confirm </button>\r\n              }\r\n              <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  if (props.refresh)\r\n                    return  setTimeout(() => {window.location.reload()}, 300)\r\n                  if (props.redirectTo)\r\n                    return setTimeout(() => {navigate(props.redirectTo)}, 300)\r\n                    \r\n                  setTimeout(() => {props.dispatch({ type: `${props.modalClass}ModalExit` })}, 300)\r\n                  \r\n                }}\r\n                className={`btn-rec modal-button modal-button__${props.modalClass}`}>{props.modalClass === 'success' ? 'OK' : props.modalClass === 'check' ? 'Cancel' :props.modalClass === 'edit' ? 'Cancel' : 'Exit'}</button>\r\n\r\n              \r\n              \r\n            </footer>\r\n\r\n          </motion.div>}\r\n        </AnimatePresence>\r\n\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n  // modalClass, header, body, modalButtonClass, modalType\r\n}\r\n\r\nexport default Modal","const InputError = (props) => {\r\n  return (\r\n    <span style={props.style} className={props.class}>{props.msg}</span>\r\n  )\r\n}\r\n\r\nexport default InputError","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            presenceChildren.set(childId, true);\n            var allComplete = true;\n            presenceChildren.forEach(function (isComplete) {\n                if (!isComplete)\n                    allComplete = false;\n            });\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __spreadArray, __read } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.js';\nimport { PresenceChild } from './PresenceChild.js';\nimport { SharedLayoutContext, isSharedLayout } from '../../context/SharedLayoutContext.js';\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var forceRender = useForceUpdate();\n    var layoutContext = useContext(SharedLayoutContext);\n    if (isSharedLayout(layoutContext)) {\n        forceRender = layoutContext.forceUpdate;\n    }\n    var isInitialRender = useRef(true);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map())\n        .current;\n    // A living record of all currently exiting components.\n    var exiting = useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React.createElement(React.Fragment, null, filteredChildren.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = __spreadArray([], __read(filteredChildren));\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport { useCallback, useRef, useState } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.js';\n\nfunction useForceUpdate() {\n    var unloadingRef = useRef(false);\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (unloadingRef.current = true); });\n    return useCallback(function () {\n        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n}\n\nexport { useForceUpdate };\n"],"sourceRoot":""}