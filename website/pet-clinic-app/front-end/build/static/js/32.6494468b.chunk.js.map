{"version":3,"sources":["components/pages/staffPanel/appointmentmanagement/EditAppointmentStatus.js","components/shared/hooks/appointmentmanagement-hook.js","components/pages/staffPanel/appointmentmanagement/AppointmentManagement.js","components/shared/hooks/fetch-hook.js","components/utils/modal/modalMotion.js","components/utils/modal/Modal.js","components/pages/profile/myadoptionposts/DeletePostModal.js"],"names":["EditAppointmentStatus","dispatch","className","onClick","type","appointmentManagementReducer","state","action","field","value","isFetchingAppointments","appointments","data","arrayToSend","fees","fetchAppointmentFailure","error","confirmFailure","deleteFailure","amount","createAppointmentTab","isGettingAppointmentTypes","appointmentTypes","gettingAppointmentTypesFailure","pets","gettingPetsFailure","isGettingPets","stmems","gettingStmemsFailure","isGettingStmems","hours","gettingHoursFailure","isGettingHours","user_name","appointment_type","pet_id","stmem_id","date","openConfirmModal","selectedAppointment","id","openDeleteModal","selectedAppointmentDelete","isConfirming","isDeleting","confirmResult","deleteResult","isCreatingAppointment","isCreatingAppointmentFailure","creatingAppointmentResult","hour","missingInput","useAppointmentManagement","initialData","useReducer","today","Date","minDate","dateFormat","AppointmentManagement","sendRequest","useFetch","auth","useContext","authContext","setPageIsLoading","pageLoadingContext","useEffect","isMount","fetchAppointments","a","process","token","message","confirmAppointment","result","deleteAppointment","getAppointmentTypes","getPets","getStmems","getHours","times","availableTimes","createAppointment","JSON","stringify","response","window","location","reload","submitForm","event","preventDefault","Modal","modalClass","header","body","refresh","DeletePostModal","closeModal","e","currentTarget","innerText","toLowerCase","map","appointment","index","style","status","color","stmem_first_name","stmem_last_name","pet_name","owner_first_name","owner_last_name","confirmed","appid","scrollTo","getAttribute","appdid","method","onSubmit","href","src","alt","htmlFor","name","onBlur","onChange","textAlign","width","margin","disabled","pet","appointmentType","stmem","first_name","last_name","min","parseInt","isLoading","useCallback","url","headers","fetch","json","parsedData","ok","Error","modalMotion","initial","y","final","exit","modalVariant","props","useState","show","setShow","navigate","useNavigate","AnimatePresence","motion","div","variants","animate","setTimeout","redirectTo"],"mappings":"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","file":"static/js/32.6494468b.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\nconst EditAppointmentStatus = ({ dispatch }) => {\r\n    return (\r\n        <div className=\"edit-modal modal-background flex falign-center fjust-center\">\r\n            <div className=\"modal-container flex-col  falign-center fjust-center\">\r\n                <div className=\"x-close\"><button\r\n                    onClick={() => dispatch({ type: 'closeConfirmModal' })}>\r\n                    <i className=\"fa-solid fa-xmark\"></i></button></div>\r\n                <div className=\"modal-title flex-col gap-16p\">\r\n                    Update Appointment Status:\r\n                    <p>Confirm the appointment if the client has already paid the appointment fees</p>\r\n                </div>\r\n                <div className=\"flex-row gap-16p fjust-between\">\r\n                    <button \r\n                    onClick={() => {\r\n                      dispatch({ type: 'startConfirming' })\r\n                    }}\r\n                    className=\"btn-rec-purple\">Confirm</button>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditAppointmentStatus","import { useReducer } from 'react'\r\nconst appointmentManagementReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'enterValue': {\r\n      if (action.field === 'appointment_type' && !action.value)\r\n        return {\r\n          ...state,\r\n          [action.field]: action.value,\r\n          stmem_id: ''\r\n        }\r\n      if (action.field === 'user_name' && !action.value)\r\n        return {\r\n          ...state,\r\n          [action.field]: action.value,\r\n          pet_id: ''\r\n        }\r\n      if (action.field === 'stmem_id')\r\n        return {\r\n          ...state,\r\n          [action.field]: action.value,\r\n          date: '',\r\n          hours: []\r\n        }\r\n      return {\r\n        ...state,\r\n        [action.field]: action.value\r\n      }\r\n    }\r\n    \r\n    case 'successFetchAppointment':\r\n      return {\r\n        ...state,\r\n        isFetchingAppointments: false,\r\n        appointments: action.data.arrayToSend,\r\n        fees: action.data.fees\r\n      }\r\n    case 'failure':\r\n      return {\r\n        ...state,\r\n        isFetchingAppointments: false,\r\n        fetchAppointmentFailure: action.error\r\n      }\r\n    case 'errorModalExit': \r\n      return {\r\n        ...state,\r\n        fetchAppointmentFailure: '',\r\n        confirmFailure: '',\r\n        deleteFailure: '',\r\n\r\n      }\r\n    case 'changeTab': \r\n      return {\r\n        ...state,\r\n        amount: action.data,\r\n        createAppointmentTab: false,\r\n        isFetchingAppointments: true\r\n      }\r\n    case 'createAppointmentEnter': \r\n      return {\r\n        ...state,\r\n        amount: '',\r\n        createAppointmentTab: true,\r\n        isGettingAppointmentTypes: true,\r\n        appointmentTypes: [],\r\n        gettingAppointmentTypesFailure: '',\r\n        pets: [],\r\n        gettingPetsFailure: '',\r\n        isGettingPets: false,\r\n        stmems: [],\r\n        gettingStmemsFailure: '',\r\n        isGettingStmems: false,\r\n\r\n        hours: [],\r\n        gettingHoursFailure: '',\r\n        isGettingHours: false,\r\n        user_name: '',\r\n        appointment_type: '',\r\n        pet_id: '',\r\n        stmem_id: '',\r\n        date: ''\r\n      }\r\n    case 'selectConfirmAppointment': \r\n      return {\r\n        ...state,\r\n        openConfirmModal: true,\r\n        selectedAppointment: action.id\r\n      }\r\n    case 'selectDeleteAppointment':\r\n      return {\r\n        ...state,\r\n        openDeleteModal: true,\r\n        selectedAppointmentDelete: action.id\r\n      }\r\n    case 'closeDeleteModal':\r\n      return {\r\n        ...state,\r\n        openDeleteModal: false,\r\n      }\r\n    case 'closeConfirmModal':\r\n      return {\r\n        ...state,\r\n        openConfirmModal: false,\r\n      }\r\n    case 'startConfirming':\r\n      return {\r\n        ...state,\r\n        openConfirmModal: false,\r\n        isConfirming: true,\r\n        confirmFailure: ''\r\n      }\r\n    case 'startDeleting':\r\n      return {\r\n        ...state,\r\n        isDeleting: true,\r\n        deleteFailure: ''\r\n      }\r\n    case 'startGettingPets':\r\n      return {\r\n        ...state,\r\n        pets: [],\r\n        isGettingPets: true,\r\n        gettingPetsFailure: ''\r\n      }\r\n    case 'startGettingStmems':\r\n      return {\r\n        ...state,\r\n        stmems: [],\r\n        stmem_id: '',\r\n        isGettingStmems: true,\r\n        gettingStmemsFailure: ''\r\n      }\r\n    case 'startGettingHours':\r\n      return {\r\n        ...state,\r\n        isGettingHours: true,\r\n        gettingHoursFailure: ''\r\n      }\r\n    case 'successConfirm':\r\n      return {\r\n        ...state,\r\n        // isConfirming: false,\r\n        confirmFailure: '',\r\n        confirmResult: action.data\r\n      }\r\n    case 'successDelete':\r\n      return {\r\n        ...state,\r\n        // isDeleting: false,\r\n        deleteFailure: '',\r\n        deleteResult: action.data\r\n      }\r\n    case 'successGetAppointmentTypes': \r\n      return {\r\n        ...state,\r\n        isGettingAppointmentTypes: false,\r\n        gettingAppointmentTypesFailure: '',\r\n        appointmentTypes: action.data\r\n      }\r\n    case 'successGetPets': \r\n      return {\r\n        ...state,\r\n        isGettingPets: false,\r\n        gettingPetsFailure: '',\r\n        pets: action.data\r\n      }\r\n    case 'successGetStmems':\r\n      return {\r\n        ...state,\r\n        isGettingStmems: false,\r\n        gettingStmemsFailure: '',\r\n        stmems: action.data\r\n      }\r\n    case 'successGetHours':\r\n      return {\r\n        ...state,\r\n        isGettingHours: false,\r\n        gettingHoursFailure: '',\r\n        hours: action.data\r\n\r\n      }\r\n    case 'successCreateAppointment':\r\n      return {\r\n        ...state,\r\n        isCreatingAppointment: false,\r\n        isCreatingAppointmentFailure: '',\r\n        creatingAppointmentResult: action.data\r\n      }\r\n    case 'confirmFailure': \r\n      return {\r\n        ...state,\r\n        isConfirming: false,\r\n        confirmFailure: action.error\r\n      }\r\n    case 'failureDelete':\r\n      return {\r\n        ...state,\r\n        isDeleting: false,\r\n        deleteFailure: action.error\r\n      }\r\n    case 'failureGetPets':\r\n      return {\r\n        ...state,\r\n        isGettingPets: false,\r\n        gettingPetsFailure: action.error\r\n      }\r\n    case 'failureGetStmems':\r\n      return {\r\n        ...state,\r\n        isGettingStmems: false,\r\n        gettingStmemsFailure: action.error\r\n      }\r\n    case 'failureGetHours':\r\n      return {\r\n        ...state,\r\n        isGettingHours: false,\r\n        gettingHoursFailure: action.error\r\n      }\r\n    case 'failureCreateAppointment':\r\n      return {\r\n        ...state,\r\n        isCreatingAppointment: false,\r\n        isCreatingAppointmentFailure: action.error\r\n      }\r\n    case 'validate': {\r\n      if (!state.user_name || !state.pet_id || !state.stmem_id || !state.date || !state.hour || !state.appointment_type)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n      return {\r\n        ...state,\r\n        missingInput: false,\r\n        isCreatingAppointment: true\r\n      }\r\n    }\r\n    default:\r\n      break\r\n  }\r\n}\r\nconst useAppointmentManagement = (initialData) => {\r\n  const [state, dispatch] = useReducer(appointmentManagementReducer, initialData)\r\n  return [state, dispatch]\r\n}\r\nexport default useAppointmentManagement","import { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport { useContext, useEffect } from 'react'\r\nimport DeletePostModal from \"../../profile/myadoptionposts/DeletePostModal\"\r\nimport EditAppointmentStatus from \"./EditAppointmentStatus\"\r\nimport useAppointmentManagement from '../../../shared/hooks/appointmentmanagement-hook';\r\nimport useFetch from '../../../shared/hooks/fetch-hook';\r\nimport { pageLoadingContext } from '../../../shared/context/loading-context';\r\nimport { authContext } from '../../../shared/context/auth-context';\r\nimport Modal from '../../../utils/modal/Modal';\r\nimport dateFormat from 'dateformat';\r\n\r\n\r\nconst today = new Date()\r\nconst minDate = dateFormat(today, 'isoDate')\r\n\r\nconst initialData = {\r\n  isFetchingAppointments: true,\r\n  appointments: null,\r\n  fees: [],\r\n  fetchAppointmentFailure: '',\r\n  amount: 'today',\r\n\r\n  isConfirming: false,\r\n  confirmResult: '',\r\n  confirmFailure: '',\r\n  selectedAppointment: null,\r\n  openConfirmModal: false,\r\n\r\n  isDeleting: false,\r\n  deleteResult: '',\r\n  deleteFailure: '',\r\n  selectedAppointmentDelete: null,\r\n  openDeleteModal: false,\r\n\r\n  createAppointmentTab: false,\r\n\r\n  isGettingAppointmentTypes: false,\r\n  appointmentTypes: [],\r\n  gettingAppointmentTypesFailure: '',\r\n\r\n  pets: [],\r\n  gettingPetsFailure: '',\r\n  isGettingPets: false,\r\n\r\n  stmems: [],\r\n  gettingStmemsFailure: '',\r\n  isGettingStmems: false,\r\n\r\n  hours: [],\r\n  gettingHoursFailure: '',\r\n  isGettingHours: false,\r\n\r\n  // appointment data\r\n  user_name: '',\r\n  appointment_type: '',\r\n  pet_id: '',\r\n  stmem_id: '',\r\n  date: '',\r\n  hour: '',\r\n  missingInput: false,\r\n\r\n  isCreatingAppointment: false,\r\n  creatingAppointmentResult: '',\r\n  isCreatingAppointmentFailure: '',\r\n\r\n\r\n}\r\n\r\nconst AppointmentManagement = () => {\r\n\r\n  const [state, dispatch] = useAppointmentManagement(initialData)\r\n  const sendRequest = useFetch()\r\n  const auth = useContext(authContext)\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const fetchAppointments = async () => {\r\n      try {\r\n        const appointments = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}receptionist/appointments?amount=${state.amount}`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (appointments && isMount)\r\n          dispatch({ type: 'successFetchAppointment', data: appointments })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failure', error: e.message })\r\n      }\r\n    }\r\n    fetchAppointments()\r\n\r\n    return () => {\r\n      isMount = false\r\n      setPageIsLoading(false)\r\n    }\r\n  }, [auth.token, dispatch, state.amount, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const confirmAppointment = async () => {\r\n      try {\r\n        const data = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}receptionist/appointments/${state.selectedAppointment}`, 'PATCH', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (data && isMount)\r\n          dispatch({ type: 'successConfirm', data: data.result })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'confirmFailure', error: e.message })\r\n      }\r\n    }\r\n    if (state.isConfirming)\r\n      confirmAppointment()\r\n\r\n    return () => {\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, state.isConfirming, state.selectedAppointment])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const deleteAppointment = async () => {\r\n      try {\r\n        const data = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}receptionist/appointments/${state.selectedAppointmentDelete}`, 'DELETE', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (data && isMount)\r\n          dispatch({ type: 'successDelete', data: data.result })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failureDelete', error: e.message })\r\n      }\r\n    }\r\n    if (state.isDeleting)\r\n      deleteAppointment()\r\n\r\n\r\n    return () => {\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, state.isDeleting, state.selectedAppointmentDelete])\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getAppointmentTypes = async () => {\r\n      try {\r\n        const appointmentTypes = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}appointment/appointmenttypes`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (appointmentTypes && isMount)\r\n          dispatch({ type: 'successGetAppointmentTypes', data: appointmentTypes })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failureGetAppointmentTypes', error: e.message })\r\n      }\r\n    }\r\n    if (state.isGettingAppointmentTypes)\r\n      getAppointmentTypes()\r\n\r\n\r\n    return () => {\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, state.isGettingAppointmentTypes])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getPets = async () => {\r\n      try {\r\n        const pets = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}receptionist/pets?username=${state.user_name}`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (pets && isMount)\r\n          dispatch({ type: 'successGetPets', data: pets })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failureGetPets', error: e.message })\r\n      }\r\n    }\r\n    if (state.isGettingPets)\r\n      getPets()\r\n\r\n\r\n    return () => {\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, state.isGettingPets, state.user_name])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getStmems = async () => {\r\n      try {\r\n        const stmems = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}appointment/staffmems?appointment_type=${state.appointment_type}`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (stmems && isMount)\r\n          dispatch({ type: 'successGetStmems', data: stmems })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failureGetStmems', error: e.message })\r\n      }\r\n    }\r\n    if (state.isGettingStmems) {\r\n      getStmems()\r\n    }\r\n\r\n\r\n    return () => {\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, state.isGettingStmems, state.appointment_type])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getHours = async () => {\r\n      try {\r\n        const times = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}appointment/appointmentstimes?stmem_id=${state.stmem_id}&date=${state.date}`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (times && isMount)\r\n          dispatch({ type: 'successGetHours', data: times.availableTimes })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failureGetHours', error: e.message })\r\n      }\r\n    }\r\n    if (state.isGettingHours) {\r\n      getHours()\r\n    }\r\n\r\n\r\n    return () => {\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, state.isGettingHours, state.stmem_id, state.date])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const createAppointment = async () => {\r\n      try {\r\n        const result = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}receptionist/appointments`, 'POST', JSON.stringify({\r\n          appointment_type: state.appointment_type,\r\n          stmem_id: state.stmem_id,\r\n          pet_id: state.pet_id,\r\n          user_name: state.user_name,\r\n          date: state.date,\r\n          hour: state.hour\r\n        }), {\r\n          'Authorization': `Bearer ${auth.token}`,\r\n          'Content-Type': 'application/json'\r\n\r\n        })\r\n        if (result && isMount)\r\n          dispatch({ type: 'successCreateAppointment', data: result.response })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failureCreateAppointment', error: e.message })\r\n      }\r\n    }\r\n    if (state.isCreatingAppointment) {\r\n      createAppointment()\r\n    }\r\n\r\n\r\n    return () => {\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, state.isCreatingAppointment, state.stmem_id, state.date, state.appointment_type, state.hour, state.pet_id, state.user_name])\r\n\r\n\r\n  useEffect(() => {\r\n    setPageIsLoading(state.isFetchingAppointments || state.isGettingAppointmentTypes || state.isConfirming || state.isDeleting || state.isCreatingAppointment)\r\n  }, [setPageIsLoading, state.isFetchingAppointments, state.isGettingAppointmentTypes, state.isCreatingAppointment, state.isConfirming, state.isDeleting])\r\n\r\n  useEffect(() => {\r\n    if (state.confirmResult || state.deleteResult)\r\n      window.location.reload()\r\n  }, [state.confirmResult, state.deleteResult])\r\n\r\n  const closeModal = () => {\r\n    dispatch({ type: 'closeDeleteModal' })\r\n  }\r\n  const submitForm = async (event) => {\r\n    event.preventDefault()\r\n    dispatch({ type: 'validate' })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {(state.fetchAppointmentFailure || state.confirmFailure || state.deleteFailure || state.gettingAppointmentTypesFailure) &&\r\n        <Modal\r\n          modalClass='error'\r\n          header='Oops!!'\r\n          body={state.fetchAppointmentFailure || state.confirmFailure || state.deleteFailure || state.gettingAppointmentTypesFailure}\r\n          dispatch={dispatch}\r\n\r\n        />}\r\n        {state.creatingAppointmentResult &&\r\n        <Modal\r\n          modalClass='success'\r\n          header='Success!!'\r\n          body={state.creatingAppointmentResult}\r\n          dispatch={dispatch}\r\n          refresh={true}\r\n        />}\r\n      <h4>Appointment Management</h4>\r\n      <div>\r\n        <div className=\"flex-col falign-center fjust-center \">\r\n          {state.openDeleteModal && <DeletePostModal closeModal={closeModal} dispatch={dispatch} />}\r\n        </div>\r\n\r\n        <div className=\"flex-col falign-center fjust-center \">\r\n          {state.openConfirmModal && <EditAppointmentStatus dispatch={dispatch} />}\r\n        </div>\r\n        <button\r\n          onClick={(e) => {\r\n            if (state.amount === 'today')\r\n              return\r\n            dispatch({ type: 'changeTab', data: e.currentTarget.innerText.toLowerCase() })\r\n          }}\r\n          className={state.amount === 'today' ? 'query-button selected' : 'query-button'}>Today</button>\r\n        <button\r\n          onClick={(e) => {\r\n            if (state.amount === 'all')\r\n              return\r\n            dispatch({ type: 'changeTab', data: e.currentTarget.innerText.toLowerCase() })\r\n          }}\r\n          className={state.amount === 'all' ? 'query-button selected' : 'query-button'}>All</button>\r\n        <button\r\n          onClick={() => {\r\n            if (state.createAppointmentTab === true)\r\n              return\r\n            dispatch({ type: 'createAppointmentEnter' })\r\n          }}\r\n          className={state.createAppointmentTab === true ? 'query-button selected' : 'query-button'}>New Appointment +</button>\r\n        {state.amount ?\r\n          <Table className=\"my-table with-query\">\r\n            <Thead>\r\n              <Tr>\r\n                <Th>\r\n                  ID\r\n                </Th>\r\n                <Th>\r\n                  Date and Time\r\n                </Th>\r\n                <Th>\r\n                  StMem\r\n                </Th>\r\n                <Th>\r\n                  Ap-Type\r\n                </Th>\r\n                <Th>\r\n                  Pet Name\r\n                </Th>\r\n                <Th>\r\n                  Owner Name\r\n                </Th>\r\n                <Th>\r\n                  Status\r\n                </Th>\r\n                <Th>\r\n                  Delete\r\n                </Th>\r\n\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {state.appointments && state.appointments.map((appointment, index) => {\r\n                return (\r\n                  <Tr key={index}>\r\n                    <Td>\r\n                      {appointment.id}\r\n                    </Td>\r\n                    <Td style={appointment.status === 0 ? { color: 'darkred' } : { color: 'darkgreen' }}>\r\n                      {dateFormat(appointment.date, 'default')}\r\n                    </Td>\r\n                    <Td>\r\n                      {`${appointment.stmem_first_name} ${appointment.stmem_last_name}`}\r\n                    </Td>\r\n                    <Td>\r\n                      {appointment.appointment_type}\r\n                    </Td>\r\n                    <Td>\r\n                      {appointment.pet_name}\r\n                    </Td>\r\n                    <Td>\r\n                      {`${appointment.owner_first_name} ${appointment.owner_last_name}`}\r\n                    </Td>\r\n                    {appointment.confirmed\r\n                      ?\r\n                      <Td style={{ color: 'green' }}>Confirmed</Td>\r\n                      :\r\n                      <Td>\r\n                        {state.amount === 'all' || appointment.status === 0\r\n                          ?\r\n                          <p style={{ color: 'darkmagenta' }}>Unconfirmed</p>\r\n                          :\r\n                          <button\r\n                            appid={appointment.id}\r\n                            className=\"my-great-button margin-bottom\"\r\n                            onClick={(e) => {\r\n                              window.scrollTo(0, 0)\r\n                              if (state.isConfirming)\r\n                                return\r\n                              dispatch({ type: 'selectConfirmAppointment', id: e.currentTarget.getAttribute('appid') })\r\n                            }}>Click to confirm <i className=\"fa-regular fa-pen-to-square\"></i></button>\r\n                        }\r\n\r\n                      </Td>\r\n                    }\r\n                    <Td>\r\n                      {appointment.confirmed === 0 && appointment.status === 1 ?\r\n                        <button\r\n                          appdid={appointment.id}\r\n                          className=\"my-great-button margin-bottom\"\r\n                          onClick={(e) => { dispatch({ type: 'selectDeleteAppointment', id: e.currentTarget.getAttribute('appdid') }) }}\r\n                        ><i className=\"fa-regular fa-trash-can\"></i></button>\r\n                        :\r\n                        '-/-'\r\n                      }\r\n                    </Td>\r\n\r\n\r\n\r\n                  </Tr>\r\n                )\r\n              })}\r\n\r\n\r\n\r\n\r\n\r\n            </Tbody>\r\n\r\n\r\n\r\n          </Table>\r\n          :\r\n          <div className=\"rec-make-appointment\">\r\n            <form className=\"form-container flex-col gap-16p falign-center\" action=\"/\" method=\"POST\"\r\n              onSubmit={(e) => submitForm(e)}>\r\n              <a className=\"logo-link\" href=\"/#\">\r\n                <img src=\"/media/imgs/favicon.png\" alt=\"\" className=\"logo\" />\r\n              </a>\r\n\r\n              <div className=\"input-wrapper flex-row fjust-between\">\r\n                <label className=\"half-label\" htmlFor=\"user_name\">username:*\r\n                </label>\r\n                <input type=\"text\" name=\"user_name\" id=\"user_name\"\r\n                  onBlur={() => {\r\n                    if (!state.user_name)\r\n                      return\r\n                    dispatch({ type: 'startGettingPets' })\r\n                  }}\r\n                  onChange={(e) => { dispatch({ type: 'enterValue', field: 'user_name', value: e.currentTarget.value }) }} />\r\n              </div>\r\n              {state.gettingPetsFailure && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>{state.gettingPetsFailure}</p>}\r\n              <div className=\"input-wrapper flex-row\">\r\n                <label className=\"half-label\" htmlFor=\"pet\">pet selection:*\r\n                </label>\r\n                <select\r\n\r\n                  disabled={state.gettingPetsFailure || state.isGettingPets || !state.user_name}\r\n                  onChange={(e) => dispatch({ type: 'enterValue', field: 'pet_id', value: e.currentTarget.value })}\r\n                  name=\"pet_id\"\r\n                  id=\"pet_id\">\r\n                  <option value=\"\">Select pet</option>\r\n                  {state.pets && state.pets.map((pet, index) => {\r\n                    return <option key={index} value={pet.id}>{pet.name}</option>\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div className=\"input-wrapper flex-row\">\r\n                <label className=\"half-label\" htmlFor=\"appointment_type\">appointment type:*\r\n                </label>\r\n                <select\r\n                  disabled={state.isGettingPets}\r\n\r\n                  onChange={(e) => {\r\n                    dispatch({ type: 'enterValue', field: 'appointment_type', value: e.currentTarget.value })\r\n                    if (!e.currentTarget.value)\r\n                      return\r\n                    dispatch({ type: 'startGettingStmems' })\r\n                  }}\r\n                  name=\"appointment_type\"\r\n                  id=\"appointment_type\">\r\n                  <option value=\"\">Select appointment type</option>\r\n                  {state.appointmentTypes && state.appointmentTypes.map((appointmentType, index) => {\r\n                    return <option key={index} value={appointmentType.name}>{appointmentType.name}</option>\r\n                  })}\r\n                </select>\r\n              </div>\r\n              {state.gettingAppointmentTypesFailure && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>{state.gettingAppointmentTypesFailure}</p>}\r\n              \r\n\r\n              <div className=\"input-wrapper flex-row\">\r\n                <label className=\"half-label\" htmlFor=\"stmem_id\">stmem selection:*\r\n                </label>\r\n                <select\r\n\r\n                  disabled={state.gettingStmemsFailure || state.isGettingStmems || !state.appointment_type }\r\n                  onChange={(e) => {\r\n                    \r\n                    dispatch({ type: 'enterValue', field: 'stmem_id', value: e.currentTarget.value })\r\n                  }}\r\n                  name=\"stmem_id\"\r\n                  id=\"stmem_id\">\r\n                  <option value=\"\">Select Stmem</option>\r\n                  {state.stmems && state.stmems.map((stmem, index) => {\r\n                    return <option key={index} value={stmem.id}>{`${stmem.first_name} ${stmem.last_name}`}</option>\r\n                  })}\r\n                </select>\r\n              </div>\r\n              {state.gettingStmemsFailure && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>{state.gettingStmemsFailure}</p>}\r\n              <div className=\"input-wrapper flex-row\">\r\n                <label className=\"half-label\" htmlFor=\"date\">Appointment Date:*\r\n                </label>\r\n                <input\r\n                  disabled={state.gettingStmemsFailure || state.isGettingStmems || !state.stmem_id}\r\n                  onChange={(e) => { \r\n                    dispatch({ type: 'enterValue', value: e.currentTarget.value, field: 'date' }) \r\n                    dispatch({ type: 'startGettingHours' })\r\n                  }}\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  id=\"date\"\r\n                  value={state.date}\r\n                  min={minDate}\r\n                   />\r\n              </div>\r\n              <div className=\"input-wrapper flex-row\">\r\n                <label className=\"half-label\" htmlFor=\"stmem_id\">Hour selection:*\r\n                </label>\r\n                <select\r\n\r\n                  disabled={state.gettingHoursFailure || state.isGettingHours ||!state.stmem_id}\r\n                  onChange={(e) => dispatch({ type: 'enterValue', field: 'hour', value: e.currentTarget.value })}\r\n                  name=\"hour\"\r\n                  id=\"hour\">\r\n                  <option value=\"\">Select Hour</option>\r\n                  {state.hours && state.hours.map((hour, index) => {\r\n                    return <option key={index} value={hour}>{parseInt(hour) + 3}</option>\r\n                  })}\r\n                </select>\r\n              </div>\r\n              {state.gettingHoursFailure && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>{state.gettingHoursFailure}</p>}\r\n\r\n              {state.missingInput && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>Please Fill mandatory fields *</p>}\r\n              {state.isCreatingAppointmentFailure && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>{state.isCreatingAppointmentFailure}</p>}\r\n              \r\n\r\n              <div className=\"button-wrapper flex-row gap-8p fjust-center\">\r\n\r\n\r\n                <button \r\n                onClick={() => {\r\n                  if (state.isCreatingAppointment)\r\n                    return\r\n                  dispatch({ type: 'validate' })\r\n                }}\r\n                type=\"submit\" className={state.isLoading ? \"btn-r btn-r-dark disabled\" : \"btn-r btn-r-dark\"} disabled={state.isLoading}>\r\n                  create appointment\r\n                </button>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        }\r\n\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default AppointmentManagement","\r\n\r\n// this custom hook contains the logic of sending a request to the server and getting databack, we wrap it with a useCallback so that it won't create the function every time the component using the hooks rerenders\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = 'GET',\r\n    body = null,\r\n    headers = {},\r\n\r\n\r\n  ) => {\r\n    try {\r\n      // 'Content-Type': 'application/json'\r\n      const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      const parsedData = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(parsedData.error)\r\n      }\r\n      return parsedData\r\n      \r\n    } catch (e) {\r\n      throw e\r\n    }\r\n    \r\n    \r\n  \r\n  \r\n  }, []) \r\n  return sendRequest\r\n}\r\nexport default useFetch","const modalMotion = {\r\n  initial: {\r\n    y: '-100vh',\r\n  },\r\n  final: {\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    y: '-100vh'\r\n  }\r\n}\r\nexport default modalMotion","import { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useState } from \"react\"\r\nimport modalMotion from \"./modalMotion\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst modalVariant = modalMotion\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [show, setShow] = useState(true)\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div className={`modal modal_${props.modalClass}`}>\r\n        <AnimatePresence>\r\n          {show && <motion.div \r\n          variants={modalVariant}\r\n          initial='initial'\r\n          animate='final'\r\n          exit='exit'\r\n\r\n          className={`modal-container modal-container__${props.modalClass} flex-col gap-16p falign-center`}>\r\n\r\n            <header className={`modal-header modal-header__${props.modalClass}`}>\r\n              {props.header}\r\n            </header>\r\n            <div className={`flex-col gap-8p modal-body modal-body__${props.modalClass}`}>\r\n              {props.body}\r\n            </div>\r\n            <footer className={`modal-footer modal-footer__${props.modalClass}`}>\r\n            {(props.modalClass === 'check' || props.modalClass === 'edit') && \r\n                <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  setTimeout(() => {props.dispatch({ type: 'finalConfirm' })}, 300)\r\n                  \r\n                }}\r\n                className='btn-rec modal-button modal-button__confirm'>Confirm </button>\r\n              }\r\n              <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  if (props.refresh)\r\n                    return  setTimeout(() => {window.location.reload()}, 300)\r\n                  if (props.redirectTo)\r\n                    return setTimeout(() => {navigate(props.redirectTo)}, 300)\r\n                    \r\n                  setTimeout(() => {props.dispatch({ type: `${props.modalClass}ModalExit` })}, 300)\r\n                  \r\n                }}\r\n                className={`btn-rec modal-button modal-button__${props.modalClass}`}>{props.modalClass === 'success' ? 'OK' : props.modalClass === 'check' ? 'Cancel' :props.modalClass === 'edit' ? 'Cancel' : 'Exit'}</button>\r\n\r\n              \r\n              \r\n            </footer>\r\n\r\n          </motion.div>}\r\n        </AnimatePresence>\r\n\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n  // modalClass, header, body, modalButtonClass, modalType\r\n}\r\n\r\nexport default Modal","\r\nconst DeletePostModal = ({ closeModal, dispatch }) => {\r\n    return (\r\n        <div className=\"modal-background flex falign-center fjust-center\">\r\n            <div className=\"modal-container flex-col fgap-16p falign-center fjust-center\">\r\n                <div className=\"x-close\"><button\r\n                onClick={() => closeModal(false)}>\r\n                <i className=\"fa-solid fa-xmark\"></i></button></div>\r\n                <div className=\"modal-title\">\r\n                    Are you sure you want to delete?\r\n                </div>\r\n                <div className=\"flex-row edit-modal-buttons-container gap-24p fjust-center\">\r\n                    <button \r\n                    onClick={() => {\r\n                      closeModal(false)\r\n                      dispatch({ type: 'startDeleting' })\r\n                    }}\r\n                    className=\"btn-rec-purple\">Yes</button>\r\n                    <button onClick={() => closeModal(false)}\r\n                        className=\"btn-rec-purple\">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeletePostModal"],"sourceRoot":""}