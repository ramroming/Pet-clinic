{"version":3,"sources":["components/pages/appointment/appointmentSlider/appointmentCard/AppointmentCard.js","components/pages/appointment/appointmentSlider/viewAppointmentSliderAnimation.js","components/utils/loadingspinner/LoadingSpinner.js","components/pages/appointment/appointmentSlider/ViewAppointmentSlider.js","components/utils/datepicker/Datepicker.js","components/shared/hooks/make-appointment-hook.js","components/pages/appointment/makeAppointment/MakeAppointmentSlider.js","components/pages/appointment/makeAppointment/makeAppointmentAnimation.js","components/shared/hooks/view-appointment-hook.js","components/pages/appointment/Appointment.js","components/shared/hooks/fetch-hook.js","components/utils/modal/modalMotion.js","components/utils/modal/Modal.js"],"names":["sliderMotion","initial","opacity","final","transition","duration","exit","delay","AppointmentCard","props","AnimatePresence","exitBeforeEnter","motion","div","variants","animate","className","card","status","confirmed","appointment_type","dateFormat","date","first_name","last_name","pet_name","onClick","event","dispatch","type","appointmentToDelete","target","getAttribute","deleteAppointment","apid","id","LoadingSpinner","style","top","left","color","initiatePag","cardsNumber","refArr","divArray","pag","i","length","current","size","j","cardsNum","push","initiateCards","cardsArray","cardsGroup","index","Infinity","ViewAppointmentSlider","useRef","window","innerWidth","useState","slider","setSlider","useEffect","appointments","cards","moveSlider","rightArrowRender","oldSlider","map","value","cardsLength","leftArrowRender","pagSlide","pagValue","Number","sub","Math","abs","pagRender","isLoading","search","Datepicker","prop","now","Date","years","appointment","split","month","day","selected","getHours","onChange","newDate","oldAppointment","minDate","disabledKeyboardNavigation","withPortal","appointmentReducer","state","action","responseError","pets","data","stmems","timesArr","createLoading","checkModal","finalConfirm","createResponse","error","useMakeAppointment","initialData","useReducer","MakeAppointmentSlider","auth","useContext","authContext","setPageIsLoading","pageLoadingContext","sendRequest","useFetch","slides","setSlides","position","stmem_id","pet_id","hour","stmemName","petName","setAppointment","isMount","getTimes","a","process","token","result","message","getPets","getSt","selectOption","x","y","nodeName","parentNode","name","createAppointment","dataToSend","JSON","stringify","response","Modal","modalClass","header","body","parseInt","refresh","src","alt","textAlign","disabled","pet","refid","toString","photo","URL","createObjectURL","Blob","Uint8Array","width","to","from","padding","stmem","margin","availableTimes","CLINIC_WORKING_HOURS","time","offsetTime","Fragment","includes","e","selectedHour","innerHTML","substring","changeDate","deleteLoading","activeAppointments","active","pastAppointments","past","deleteResponse","useViewAppointment","Appointment","getAppointments","arrayToSend","forEach","useCallback","url","method","headers","fetch","json","parsedData","ok","Error","modalMotion","modalVariant","show","setShow","navigate","useNavigate","setTimeout","location","reload","redirectTo"],"mappings":"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","file":"static/js/35.5d45d1ea.chunk.js","sourcesContent":["// Import Animation prerequisites \r\nimport { motion } from \"framer-motion\"\r\nimport { sliderAnimation } from '../viewAppointmentSliderAnimation'\r\nimport { AnimatePresence } from \"framer-motion\"\r\nimport dateFormat from \"dateformat\"\r\n\r\nconst sliderMotion = sliderAnimation\r\n\r\nconst AppointmentCard = (props) => {\r\n\r\n  const deleteAppointment = (event) => {\r\n    props.dispatch({ type: 'checkModalEnter', appointmentToDelete: event.target.getAttribute(\"apid\")})\r\n  }\r\n  return (\r\n    <AnimatePresence exitBeforeEnter>\r\n      <motion.div\r\n        variants={sliderMotion}\r\n        initial='initial'\r\n        animate='final'\r\n        exit='exit'\r\n        className={props.card.status === 1 && props.card.confirmed === 0 ? 'appointment-card appointment-active flex-col falign-start gap-16p' : 'appointment-card appointment-past flex-col falign-start gap-16p'}>\r\n\r\n        {/* appointment type */}\r\n        <div className=\"flex-row\">\r\n          <p>{props.card.appointment_type} / </p>\r\n          <p className=\"app-status\"> {props.card.status === 1 && props.card.confirmed === 0? 'Active' : 'Past'}</p>\r\n        </div>\r\n\r\n       \r\n        {/* appointment date */}\r\n        <div className=\"flex-row gap-16p\">\r\n          <i className=\"fas fa-clock\"></i>\r\n          <p>{dateFormat(props.card.date, 'default')}</p>\r\n        </div>\r\n\r\n        {/* Staff mem */}\r\n        <div className=\"flex-row gap-16p\">\r\n          <i className=\"fas fa-user-nurse\"></i>\r\n          <p>{props.card.first_name + ' ' + props.card.last_name}</p>\r\n        </div>\r\n\r\n        {/* pet name */}\r\n        <div className=\"flex-row gap-16p\">\r\n          <i className=\"fas fa-paw\"></i>\r\n          <p>{props.card.pet_name}</p>\r\n        </div>\r\n        {props.card.status === 1 && props.card.confirmed === 0? <button \r\n        onClick={(event)=> deleteAppointment(event)}\r\n        apid={props.card.id} className=\"btn-rec-purple\">Cancel</button> : ''}\r\n\r\n\r\n      </motion.div>\r\n      \r\n    </AnimatePresence>\r\n\r\n  )\r\n}\r\n\r\nexport default AppointmentCard\r\n\r\n","// Each component my have one or more animations for each animation we difine an object that contains:\r\n// 1-initial property which tells the initial state of element at the begining of the animation\r\n// 2-final property which tells the final state of the element at the end of the animation\r\n// 3-exit property which tells the exit state of the element when it is removed from the VDOM\r\n// both final and exit properties has a transition property as well to give more detailed info about the animation\r\n// Note: initial, final and exit properties' names are arbitrary\r\nconst sliderAnimation = {\r\n  initial: {\r\n    opacity: 0\r\n  },\r\n  final: {\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 1.1\r\n    }\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    transition: {\r\n      delay: 1,\r\n      duration: 0.2\r\n    }\r\n  },\r\n\r\n}\r\n\r\nexport { sliderAnimation };\r\n","const LoadingSpinner = (props) => {\r\n  return (\r\n    <div \r\n    style={{ top: props.top, left: props.left}}\r\n    className={`lds-ripple-${props.color}`}><div></div><div></div></div>\r\n  )\r\n}\r\nexport default LoadingSpinner","import AppointmentCard from \"./appointmentCard/AppointmentCard\"\r\nimport { useState, useRef, useEffect } from \"react\"\r\nimport LoadingSpinner from \"../../../utils/loadingspinner/LoadingSpinner\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // data from the database to be rendered with the component\r\n// const cardsArray = (function (num) {\r\n//   const array = []\r\n//   for (let i = 0; i < num; i++) {\r\n//     array.push({\r\n//       appointment_type: \"Examination\",\r\n//       date: \"17/05/2021\",\r\n//       pet_name: \"Popo\",\r\n//       first_name: '',\r\n//       last_name: '',\r\n//       status: (i % 2 === 0) ? 1 : 0\r\n//     })\r\n//   }\r\n//   return array\r\n// })(9); //from database\r\n\r\n\r\n// initiate the pagination based on the number of cards retreived from the database, divArray is used to determine the division of the paginations,\r\n// refArr is also used to keep track of the card index \r\n// this will retrun an array of paginations\r\nconst initiatePag = (cardsNumber, refArr, divArray) => {\r\n  const pag = [true]\r\n  if (divArray) {\r\n    for (let i = 0; i < divArray.length; i++) {\r\n      if (refArr.current[3] < divArray[i].size) {\r\n        for (let j = divArray[i].cardsNum + 1; j <= cardsNumber; j++) {\r\n          if ((j - 1) % divArray[i].cardsNum === 0) {\r\n            pag.push(false)\r\n          }\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  return pag\r\n\r\n}\r\n\r\n// initiate the first set of cards to appear in the first pag, this is also determined by divArray and refArr\r\n// this will return an array of components\r\nconst initiateCards = (refArr, divArray, cardsArray) => {\r\n\r\n  if (divArray) {\r\n    for (let i = 0; i < divArray.length; i++) {\r\n      if (refArr.current[3] < divArray[i].size) {\r\n        if (refArr.current[2] === 0) {\r\n          const cardsGroup = []\r\n          for (let index = 0; index < cardsArray.length; index++) {\r\n            if (index < divArray[i].cardsNum) {\r\n              refArr.current[2] += 1\r\n              // Component's index to be rendered \r\n              cardsGroup.push(index)\r\n            }\r\n          }\r\n          return cardsGroup\r\n        }\r\n\r\n        break\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// move the card index when right arrow is pressed \r\n// the movement depends on the current card index and the division array\r\n// an array of components is returned\r\nconst rightArrowRender = (refArr, divArray, cardsArray) => {\r\n  const cardsGroup = []\r\n\r\n\r\n  cardsGroup.push(refArr.current[2])\r\n\r\n  for (let j = 0; j < divArray.length; j++) {\r\n    if (refArr.current[3] < divArray[j].size) {\r\n      for (let i = refArr.current[2] + 1; i <= cardsArray.length; i++) {\r\n        refArr.current[2] = refArr.current[2] + 1\r\n        if ((refArr.current[2] % divArray[j].cardsNum) === 0) {\r\n          break\r\n        }\r\n        if (i === cardsArray.length) {\r\n          break\r\n        } else {\r\n\r\n          cardsGroup.push(refArr.current[2])\r\n\r\n        }\r\n      }\r\n      break\r\n    }\r\n  }\r\n  return cardsGroup\r\n}\r\n\r\n// move the card index when left arrow is pressed \r\n// the movement depends on the current card index and the division array also it depends on the number of cards in the current pagination\r\n// an array of components is returned\r\nconst leftArrowRender = (refArr, divArray, cardsLength, cardsArray) => {\r\n  const cardsGroup = []\r\n  for (let j = 0; j < divArray.length; j++) {\r\n    if (refArr.current[3] < divArray[j].size) {\r\n      refArr.current[2] = refArr.current[2] - (divArray[j].cardsNum + cardsLength)\r\n\r\n      cardsGroup.push(refArr.current[2])\r\n      for (let i = refArr.current[2] + 1; i < cardsArray.length; i++) {\r\n\r\n        refArr.current[2] = refArr.current[2] + 1\r\n        if ((refArr.current[2] % divArray[j].cardsNum) === 0) {\r\n          break\r\n        }\r\n\r\n        cardsGroup.push(refArr.current[2])\r\n\r\n\r\n      }\r\n\r\n      break\r\n    }\r\n  }\r\n  return cardsGroup\r\n}\r\n\r\n// move the card index when pagination is pressed \r\n// the movement depends on the current card index and the division array also it depends on the number of cards in the current pagination\r\n// an array of components is returned\r\nconst pagRender = (refArr, divArray, cardsLength, cardsArray) => {\r\n  const cardsGroup = []\r\n  for (let j = 0; j < divArray.length; j++) {\r\n    if (refArr.current[3] < divArray[j].size) {\r\n      const sub = refArr.current[1] - refArr.current[0] // new - old\r\n      if (sub > 0) {\r\n        refArr.current[2] = (refArr.current[2] - divArray[j].cardsNum) + (sub * divArray[j].cardsNum + 1)\r\n\r\n\r\n        cardsGroup.push(refArr.current[2] - 1)\r\n\r\n        for (let i = refArr.current[2]; i < cardsArray.length; i++) {\r\n          if ((refArr.current[2] % divArray[j].cardsNum) === 0) {\r\n            break\r\n          }\r\n\r\n          cardsGroup.push(refArr.current[2])\r\n          refArr.current[2] = refArr.current[2] + 1\r\n        }\r\n        break\r\n\r\n      } else if (sub < 0) {\r\n        refArr.current[2] = ((refArr.current[2] - cardsLength) - (Math.abs(sub) * divArray[j].cardsNum + 1)) + 2\r\n\r\n\r\n        cardsGroup.push(refArr.current[2] - 1)\r\n\r\n\r\n        for (let i = refArr.current[2]; i < cardsArray.length; i++) {\r\n          if ((refArr.current[2] % divArray[j].cardsNum) === 0) {\r\n            break\r\n          }\r\n\r\n\r\n          cardsGroup.push(refArr.current[2])\r\n\r\n          refArr.current[2] = refArr.current[2] + 1\r\n        }\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return cardsGroup\r\n}\r\n\r\n\r\n // division array that is an array of object each object represents the screen width and the maximum number of cards allowed for each size\r\n const divArray = [{ size: 767, cardsNum: 2 }, { size: Infinity, cardsNum: 4 }]\r\n\r\n\r\nconst ViewAppointmentSlider = (props) => {\r\n  \r\n  // array of global referances it is used to store \r\n  // - slider's old and new position at indexes 0 and 1 accordingly\r\n  // - Card's index at index 2\r\n  // - screen width at index 3\r\n  const refArr = useRef([0, 0, 0, window.innerWidth]);\r\n  \r\n \r\n  \r\n  // initiating the pag and cards array\r\n  const [slider, setSlider] = useState({})\r\n  \r\n  \r\n  useEffect(() => {\r\n    if (props.appointments.length !== 0)\r\n      setSlider({\r\n        pag: initiatePag(props.appointments.length, refArr, divArray),\r\n        cards: initiateCards(refArr, divArray, props.appointments)\r\n      })\r\n  }, [props.appointments])\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (props.appointments && slider.cards) {\r\n\r\n  //     console.log(props.appointments)\r\n  //     console.log(slider.cards)\r\n  //     console.log(slider.cards.filter((value => props.appointments[value].status === props.status)))\r\n  //   }\r\n  // }, [props.appointments, props.cards, slider.cards, props.status])\r\n\r\n  const moveSlider = (event) => {\r\n\r\n    //if the pressed indicator has right class it means it's right movement otherwise it is left movement\r\n    if (event.target.className === 'fas fa-chevron-right') {\r\n\r\n      //  check whether index is out of array range\r\n      if (refArr.current[1] + 1 !== slider.pag.length) {\r\n        // its a right movement so modify refArr Ref by making the current index an old index and the new index is the previous new index + 1\r\n        refArr.current[0] = refArr.current[1]\r\n        refArr.current[1] = refArr.current[1] + 1\r\n\r\n        // using the rightArrowRender function whenever right movement occurs\r\n        const cardsGroup = rightArrowRender(refArr, divArray, props.appointments)\r\n        setSlider((oldSlider) => {\r\n\r\n          return {\r\n            ...oldSlider, pag: slider.pag.map((value, index) => {\r\n              return (index === refArr.current[0] || index === refArr.current[1]) ? !value : value\r\n            }), cards: cardsGroup\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // If the movement is to the left meaning the left indicator is pressed\r\n    else {\r\n\r\n      // check whether index is out of array range\r\n      if (refArr.current[1] - 1 >= 0) {\r\n\r\n        // its a left movement so modify refArr Ref by making the current index an old index and the new index is the previous new index - 1\r\n        refArr.current[0] = refArr.current[1]\r\n        refArr.current[1] = refArr.current[1] - 1\r\n\r\n        // using the leftArrowRender function whenever left movement occurs\r\n\r\n        const cardsGroup = leftArrowRender(refArr, divArray, slider.cards.length, props.appointments)\r\n        // same as right movement idea\r\n        setSlider((oldSlider) => {\r\n          return {\r\n            ...oldSlider, pag: slider.pag.map((value, index) => {\r\n              return (index === refArr.current[0] || index === refArr.current[1]) ? !value : value\r\n            }), cards: cardsGroup\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n  const pagSlide = (event) => {\r\n    // each of the paginations has a class of k-number like k0 k1 k2 k3 so to know which pagintatin is pressed we find the 'k' index and the char after it is the number of the pagination that was pressed\r\n    const pagValue = event.target.className[1]\r\n\r\n    //to go to the new refArr we save the previous refArr in the old refArr and we make the new refArr as the number of the pagination.\r\n    refArr.current[0] = refArr.current[1]\r\n    refArr.current[1] = Number(pagValue)\r\n\r\n    // we determine the direction of the movement left->right or right->left to know which animation values should be used and this is done by checking the refArr Ref , if for example refArr has [x, y] and if y>x then it is a right movement else it is a left movement\r\n\r\n\r\n    // using the pagRender function whenever pag movement occurs\r\n    const cardsGroup = pagRender(refArr, divArray, slider.cards.length, props.appointments)\r\n\r\n\r\n    // we modify the slider state based on the movement\r\n    setSlider((oldSlider) => {\r\n      return {\r\n        ...oldSlider, pag: slider.pag.map((value, index) => {\r\n          return (index === refArr.current[0] || index === refArr.current[1]) ? !value : value\r\n        }), cards: cardsGroup\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      \r\n      {props.status === 1 ? <h2>Your Active Appointments in local Time</h2> : <h2>Your previous Appointments in local Time</h2>}\r\n      <div className=\" view-appointment-animator flex-row gap-8p fjust-around\">\r\n        {/* Cards */}\r\n        {props.isLoading && <LoadingSpinner color='dark' />}\r\n        {!props.isLoading && props.appointments && slider.cards && slider.cards.map((value) => {\r\n          return (\r\n            <div key={value}>\r\n              <AppointmentCard card={props.appointments[value]} dispatch={props.dispatch} />\r\n            </div>\r\n\r\n          )\r\n\r\n        })}\r\n        {/* {slider.cards.map((value, index) => {\r\n\r\n          if (cardsArray[value].status === props.status) {\r\n            return (\r\n              <div key={value}>\r\n                  <AppointmentCard  card={cardsArray[value]}/>\r\n              </div>\r\n\r\n            )\r\n          }\r\n        })} */}\r\n\r\n      </div>\r\n      {props.appointments && props.appointments.length !== 0 &&\r\n        <div className=\"pag-app flex-row gap-8p fjust-center\">\r\n        <span><i\r\n          onClick={(event) => {\r\n            moveSlider(event)\r\n          }}\r\n          className=\"fas fa-chevron-left\"></i></span>\r\n        {slider.pag && slider.pag.map((value, index) => {\r\n          return <span\r\n            key={index}\r\n            onClick={(event) => {\r\n              // disable the functionality of an active pagination number\r\n              if (event.target.className.search('active') !== -1)\r\n                return\r\n              pagSlide(event)\r\n            }}\r\n            className={'k' + index + (value === true ? ' active' : '')}>{index + 1}</span>\r\n        })}\r\n\r\n\r\n        <span><i\r\n          onClick={(event) => {\r\n            moveSlider(event)\r\n          }}\r\n          className=\"fas fa-chevron-right\"></i></span>\r\n      </div>\r\n      }\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ViewAppointmentSlider","import React from 'react'\r\n// datepicker things\r\nimport DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport dateFormat from \"dateformat\";\r\n\r\n\r\n\r\nconst Datepicker = (prop) => {\r\n\r\n \r\n  \r\n  const now = new Date()\r\n  const years = prop.appointment[0].date.split('-')[0]\r\n  const month = prop.appointment[0].date.split('-')[1]\r\n  const day = prop.appointment[0].date.split('-')[2]\r\n  return (\r\n    <>\r\n      <DatePicker selected={new Date(years, month - 1, day, now.getHours())}\r\n        onChange={\r\n          (newDate) => prop.appointment[1]((oldAppointment) => {\r\n            return {...oldAppointment, date: dateFormat(newDate, 'isoDate')}\r\n          })\r\n        }\r\n        minDate={\r\n          new Date()\r\n        }\r\n        disabledKeyboardNavigation\r\n        withPortal\r\n        dateFormat=\"yyyy-MM-dd\" />\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Datepicker\r\n","\r\nimport {useReducer} from 'react'\r\nconst appointmentReducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'successPets': {\r\n            return {\r\n              ...state,\r\n              responseError: '',\r\n              isLoading: false,\r\n              pets: action.data\r\n            }\r\n          }\r\n\r\n        case 'successStmems': {\r\n            return {\r\n              ...state,\r\n              responseError: '',\r\n              isLoading: false,\r\n              stmems: action.data\r\n            }\r\n          }\r\n        case 'successTimes': {\r\n            return {\r\n              ...state,\r\n              responseError: '',\r\n              isLoading: false,\r\n              timesArr: action.data\r\n            }\r\n          }\r\n       \r\n\r\n      \r\n          \r\n          case 'start': {\r\n              return {\r\n                  ...state,\r\n                  isLoading: true\r\n              }\r\n          }\r\n          case 'startCreate': {\r\n              return {\r\n                  ...state,\r\n                  createLoading: true\r\n              }\r\n          }\r\n          case 'checkModalExit': {\r\n            return {\r\n              ...state,\r\n              checkModal: false\r\n            }\r\n          }\r\n          case 'checkModalEnter': {\r\n            return {\r\n              ...state,\r\n              checkModal: true\r\n            }\r\n          }\r\n          case 'finalConfirm': {\r\n            return {\r\n              ...state,\r\n              finalConfirm: true\r\n            }\r\n          }\r\n\r\n          case 'successCreate': {\r\n            return {\r\n              ...state,\r\n              createResponse: action.data,\r\n              responseError: '',\r\n              createLoading: false,\r\n              finalConfirm: false,\r\n              checkModal: false\r\n            }\r\n          }\r\n          case 'failureCreate': {\r\n            return {\r\n              ...state,\r\n              responseError: action.error,\r\n              createLoading: false,\r\n              finalConfirm: false,\r\n              checkModal: false\r\n\r\n            }\r\n          }\r\n\r\n          // when fetching data is failed\r\n          case 'failure': {\r\n            return {\r\n              ...state,\r\n              responseError: action.error,\r\n              isLoading: false\r\n            }\r\n          }\r\n          case 'errorModalExit': {\r\n            return {\r\n              ...state,\r\n              responseError: ''\r\n            }\r\n          }\r\n          default:\r\n            break\r\n    }\r\n}\r\nconst useMakeAppointment = (initialData) => {\r\n    const [state, dispatch] = useReducer(appointmentReducer, initialData)\r\n    return [state, dispatch]\r\n}\r\n\r\nexport default useMakeAppointment","import React, { useState, useRef, useEffect, useContext } from \"react\"\r\nimport Datepicker from \"../../../utils/datepicker/Datepicker\";\r\n\r\n//Import Animation object from sliderAnimation.js\r\nimport { appointmentSlider } from \"../makeAppointment/makeAppointmentAnimation\"\r\n\r\n//Import motion for defining entering motion, and AnimatePresence to define exit animation\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\nimport useFetch from \"../../../shared/hooks/fetch-hook\";\r\n\r\nimport { authContext } from \"../../../shared/context/auth-context\";\r\nimport useMakeAppointment from \"../../../shared/hooks/make-appointment-hook\";\r\nimport dateFormat from \"dateformat\";\r\nimport Modal from \"../../../utils/modal/Modal\";\r\nimport { Link } from 'react-router-dom'\r\nimport { pageLoadingContext } from \"../../../shared/context/loading-context\";\r\nimport LoadingSpinner from \"../../../utils/loadingspinner/LoadingSpinner\";\r\n\r\n// Assign the imported object to local object sliderMotion\r\nconst sliderMotion = appointmentSlider\r\n\r\n\r\nconst initialData = {\r\n  isLoading: false,\r\n  pets: [],\r\n  stmems: [],\r\n  timesArr: null,\r\n  responseError: '',\r\n  createResponse: '',\r\n  checkModal: false,\r\n  finalConfirm: false,\r\n  createLoading: false\r\n\r\n}\r\nconst turkishTimeOffset = 3\r\nconst MakeAppointmentSlider = () => {\r\n\r\n  const auth = useContext(authContext)\r\n  // using the fetch hook\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n  const sendRequest = useFetch()\r\n\r\n  const [slides, setSlides] = useState([true, false, false, false])\r\n  const position = useRef([0, 0]);\r\n\r\n\r\n  // usign the appointment hook\r\n  const [state, dispatch] = useMakeAppointment(initialData)\r\n  const [appointment, setAppointment] = useState({\r\n    appointment_type: '',\r\n    stmem_id: '',\r\n    pet_id: '',\r\n    // date: new Date(\"October 01, 1991 00:00:00\"),\r\n    hour: '',\r\n    date: dateFormat(new Date(), 'isoDate'),\r\n    stmemName: '',\r\n    petName: ''\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    let isMount = true\r\n    const getTimes = async () => {\r\n      try {\r\n        const result = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}appointment/appointmentstimes?stmem_id=${appointment.stmem_id}&date=${appointment.date}`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`,\r\n\r\n        })\r\n        if (result && isMount)\r\n          dispatch({ type: 'successTimes', data: result })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failure', error: e.message })\r\n      }\r\n    }\r\n\r\n    if (slides[3] === true) {\r\n      if (isMount)\r\n        dispatch({ type: 'start' })\r\n      getTimes()\r\n    }\r\n    // const newDate = dateFormat(date, 'isoDate')\r\n    //   setAppointment((oldAppointment) => {\r\n    //     return { ...oldAppointment, date: newDate }\r\n    //   })\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n\r\n  }, [appointment.date, appointment.stmem_id, auth.token, dispatch, sendRequest, slides, setPageIsLoading])\r\n\r\n  // getting data from the endpoints\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getPets = async () => {\r\n      try {\r\n        const pets = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}users/me/pets`, 'GET', null,\r\n          {\r\n            'Authorization': `Bearer ${auth.token}`\r\n          }\r\n        )\r\n        if (pets && isMount) {\r\n          dispatch({ type: 'successPets', data: pets })\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failure', error: e.message })\r\n      }\r\n    }\r\n    const getSt = async () => {\r\n      try {\r\n        const stmems = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}appointment/staffmems?appointment_type=${appointment.appointment_type}`, 'GET', null,\r\n          {\r\n            'Authorization': `Bearer ${auth.token}`\r\n          }\r\n        )\r\n        if (stmems) {\r\n          if (isMount)\r\n            dispatch({ type: 'successStmems', data: stmems })\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failure', error: e.message })\r\n      }\r\n    }\r\n\r\n    if (slides[1] === true && !state.pets.length) {\r\n      if (isMount)\r\n        dispatch({ type: 'start' })\r\n\r\n      getPets()\r\n    }\r\n    if (slides[2] === true) {\r\n      if (isMount)\r\n        dispatch({ type: 'start' })\r\n      getSt()\r\n    }\r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [slides, auth.token, sendRequest, dispatch, state.pets.length, appointment.appointment_type, setPageIsLoading])\r\n\r\n\r\n  const moveSlider = (event) => {\r\n\r\n    if (event.target.id === 'next') {\r\n      if (position.current[1] + 1 !== slides.length) {\r\n        position.current[0] = position.current[1]\r\n        position.current[1] = position.current[1] + 1\r\n\r\n\r\n\r\n        setSlides(() => {\r\n          return slides.map((value, index) => {\r\n            return (index === position.current[0] || index === position.current[1]) ? !value : value\r\n          })\r\n        })\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      if (position.current[1] - 1 >= 0) {\r\n\r\n        position.current[0] = position.current[1]\r\n        position.current[1] = position.current[1] - 1\r\n\r\n\r\n\r\n        // same as right movement idea\r\n        setSlides(() => {\r\n          return slides.map((value, index) => {\r\n            return (index === position.current[0] || index === position.current[1]) ? !value : value\r\n          })\r\n        })\r\n\r\n        //If index is out of range similar idea to the right movement\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  //generic slide state detector\r\n\r\n  const selectOption = (event) => {\r\n\r\n    let x, y = \"\"\r\n    switch (event.target.nodeName) {\r\n      case 'IMG':\r\n        x = event.target.parentNode.id\r\n        y = event.target.parentNode.getAttribute('refid')\r\n        break\r\n      case 'P':\r\n        x = event.target.parentNode.id\r\n        y = event.target.parentNode.getAttribute('refid')\r\n\r\n        break\r\n      default:\r\n        x = event.target.id\r\n        y = event.target.getAttribute('refid')\r\n\r\n        break\r\n\r\n    }\r\n\r\n    if (slides[0]) {\r\n      setAppointment((oldAppointment) => {\r\n        return { ...oldAppointment, appointment_type: x }\r\n      })\r\n    }\r\n    if (slides[1]) {\r\n      setAppointment((oldAppointment) => {\r\n        return { ...oldAppointment, pet_id: x, petName: state.pets[y].name }\r\n      })\r\n    }\r\n    if (slides[2]) {\r\n      setAppointment((oldAppointment) => {\r\n        return { ...oldAppointment, stmem_id: x, stmemName: state.stmems[y].first_name + ' ' + state.stmems[y].last_name }\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  const changeDate = (event) => {\r\n    const selectedHour = (parseInt(event.target.innerHTML.substring(0, 2)) - turkishTimeOffset).toString()\r\n\r\n    setAppointment((oldAppointment) => {\r\n      return { ...oldAppointment, hour: selectedHour }\r\n    })\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n\r\n    if (state.finalConfirm ) {\r\n      const createAppointment = async () => {\r\n        if (isMount)\r\n          dispatch({ type: 'startCreate' })\r\n        const dataToSend = {\r\n          appointment_type: appointment.appointment_type,\r\n          stmem_id: appointment.stmem_id,\r\n          pet_id: appointment.pet_id,\r\n          // date: new Date(\"October 01, 1991 00:00:00\"),\r\n          hour: appointment.hour,\r\n          date: appointment.date,\r\n\r\n        }\r\n        try {\r\n          const result = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}users/me/appointments`, 'POST', JSON.stringify(dataToSend), {\r\n            'Authorization': `Bearer ${auth.token}`,\r\n            'Content-Type': 'application/json'\r\n          })\r\n          if (result)\r\n            if (isMount)\r\n              dispatch({ type: 'successCreate', data: result.response })\r\n        } catch (e) {\r\n          if(isMount)\r\n            dispatch({ type: 'failureCreate', error: e.message })\r\n        }\r\n\r\n      }\r\n      createAppointment()\r\n    }\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n\r\n  }, [state.finalConfirm, dispatch, auth.token, appointment.stmem_id, appointment.appointment_type, appointment.date, appointment.hour, appointment.pet_id, sendRequest, setPageIsLoading])\r\n  // creating appointment\r\n\r\n  useEffect(() => {\r\n    setPageIsLoading(state.createLoading)\r\n  }, [state.createLoading, setPageIsLoading])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* UI modals */}\r\n      {state.responseError &&\r\n        <Modal\r\n          modalClass='error'\r\n          header='Oops!!'\r\n          body={state.responseError}\r\n          dispatch={dispatch}\r\n        />}\r\n      {state.checkModal &&\r\n        <Modal\r\n          modalClass='check'\r\n          header='Check your appointment data!'\r\n          body={\r\n            <>\r\n              <p>Appointment: <span>{' ' + appointment.appointment_type}</span> </p>\r\n              <p>For your pet: <span>{' ' + appointment.petName}</span></p>\r\n              <p>staff: <span>{' ' + appointment.stmemName}</span></p>\r\n              <p>Date:  <span>{' ' + appointment.date}</span></p>\r\n              <p>At:  <span>{' ' + (parseInt(appointment.hour) + turkishTimeOffset) < 10 ? '0' + (parseInt(appointment.hour) + turkishTimeOffset) + ':00' : (parseInt(appointment.hour) + turkishTimeOffset) + ':00'}</span></p>\r\n            </>\r\n          }\r\n          dispatch={dispatch}\r\n        />}\r\n      {state.createResponse &&\r\n        <Modal\r\n          modalClass='success'\r\n          header='Success!!'\r\n          body={state.createResponse}\r\n          dispatch={dispatch}\r\n          refresh={true}\r\n        />}\r\n      {/* first slide */}\r\n      <AnimatePresence >\r\n        {slides[0] &&\r\n          <motion.div\r\n            variants={sliderMotion}\r\n            initial='initial'\r\n            animate='final'\r\n            exit='exit' className=\"make-appointment-slider flex-col falign-center gap-24p\">\r\n            {<h1>What appointment do you want to make ?</h1>}\r\n            <div className=\"appointment-types flex-row gap-32p fjust-center\">\r\n              <div id=\"Examination\" className={appointment.appointment_type === 'Examination' ? \"appointment-type flex-col gap-8p falign-center active \" : \"appointment-type flex-col gap-8p falign-center\"}\r\n                onClick={(event) => selectOption(event)} >\r\n                <img src=\"/media/imgs/pet-examination.png\" alt=\"\" />\r\n                <p className='type'>Examination</p>\r\n              </div>\r\n              <div id=\"Training\" className={appointment.appointment_type === 'Training' ? \"appointment-type flex-col gap-8p falign-center active \" : \"appointment-type flex-col gap-8p falign-center\"}\r\n                onClick={(event) => selectOption(event)}>\r\n                <img src=\"/media/imgs/pet-training.png\" alt=\"\" />\r\n                <p className='type'>Training</p>\r\n              </div>\r\n              <div id=\"Grooming\" className={appointment.appointment_type === 'Grooming' ? \"appointment-type flex-col gap-8p falign-center active \" : \"appointment-type flex-col gap-8p falign-center\"}\r\n                onClick={(event) => selectOption(event)}>\r\n                <img src=\"/media/imgs/pet-grooming.png\" alt=\"\" />\r\n                <p className='type'>Grooming</p>\r\n              </div>\r\n              <div id=\"Adoption\" className={appointment.appointment_type === 'Adoption' ? \"appointment-type flex-col gap-8p falign-center active \" : \"appointment-type flex-col gap-8p falign-center\"}\r\n                onClick={(event) => selectOption(event)}>\r\n                <img src=\"/media/imgs/pet-adoption.png\" alt=\"\" />\r\n                <p style={{textAlign: 'center'}} className='type'>Pet Submission</p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              id=\"next\" className={appointment.appointment_type === '' ? \"btn-rec-purple next disabled\" : \"btn-rec-purple next\"}\r\n              onClick={(event) => moveSlider(event)}\r\n              disabled={appointment.appointment_type === '' ? true : false}>Next\r\n            </button>\r\n\r\n          </motion.div>\r\n\r\n        }\r\n      </AnimatePresence>\r\n      {/* second slide */}\r\n      <AnimatePresence >\r\n        {state.isLoading && slides[1] && <LoadingSpinner color='light' top='30%' left='50%' />}\r\n\r\n        {\r\n          slides[1] && !state.isLoading &&\r\n          <motion.div\r\n            variants={sliderMotion}\r\n            initial=\"initial\"\r\n            animate=\"final\"\r\n            exit='exit' className=\"make-appointment-slider flex-col falign-center gap-24p\">\r\n            <h1>Select a Pet:</h1>\r\n            <div className=\"appointment-types flex-row fjust-center gap-24p\">\r\n              {state && state.pets.length !== 0 && state.pets.map((pet, index) => {\r\n                return (\r\n                  <div id={pet.id} key={index} refid={index} className={appointment.pet_id === pet.id.toString() ? \"appointment-type flex-col fjust-start gap-16p falign-center active\" : \"appointment-type flex-col fjust-start gap-16p falign-center\"}\r\n                    onClick={(event) => selectOption(event)}>\r\n                    <img src={pet.photo ? URL.createObjectURL(new Blob([new Uint8Array(pet.photo.data)])) : '/media/imgs/cat.png'} alt=\"cat\" />\r\n                    <p>{pet.name}</p>\r\n                  </div>\r\n                )\r\n              })}\r\n              {state && state.pets.length === 0 &&\r\n                <div className=\"flex-col falign-center gap-24p\" style={{ width: '70%' }}>\r\n                  <p style={{ color: 'white' }}>Looks like you have no registered pets, you can register your pet from here</p>\r\n                  <Link\r\n                    to={`/registerpet`}\r\n                    state={{ from: '/appointment' }}\r\n                    className=\"btn-r btn-r-blue\"\r\n                    style={{ width: '9rem', padding: '.5rem' }}>\r\n                    Register pet\r\n                  </Link>\r\n                </div>\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"appointment-buttons-wrapper flex-row fjust-around button-wrapper\">\r\n              <button id=\"back\" className=\"btn-rec-purple next\"\r\n                onClick={(event) => moveSlider(event)}>Back</button>\r\n\r\n\r\n              <button\r\n                id=\"next\" className={appointment.pet_id === '' ? \"btn-rec-purple next disabled\" : \"btn-rec-purple next\"}\r\n                onClick={(event) => moveSlider(event)}\r\n                disabled={appointment.pet_id === '' ? true : false}>Next\r\n              </button>\r\n\r\n\r\n\r\n            </div>\r\n          </motion.div>\r\n        }\r\n      </AnimatePresence>\r\n      {/* third slide */}\r\n\r\n      <AnimatePresence >\r\n\r\n        {state.isLoading && slides[2] && <LoadingSpinner color='light' top='30%' left='50%' />}\r\n        {slides[2] && !state.isLoading &&\r\n          <motion.div\r\n            variants={sliderMotion}\r\n            initial=\"initial\"\r\n            animate=\"final\"\r\n            exit='exit' className=\"make-appointment-slider flex-col falign-center gap-24p\">\r\n            <h1>Select staff:</h1>\r\n            <div className=\"appointment-types flex-row fjust-center gap-24p\">\r\n\r\n              {state && state.stmems.length !== 0 && state.stmems.map((stmem, index) => {\r\n                return (\r\n                  <div id={stmem.id} refid={index} key={index} className={appointment.stmem_id === (stmem.id.toString()) ? \"appointment-type flex-col fjust-start gap-16p falign-center active\" : \"appointment-type flex-col fjust-start gap-16p falign-center\"}\r\n                    onClick={(event) => selectOption(event)}>\r\n                    <img src={stmem.photo ? URL.createObjectURL(new Blob([new Uint8Array(stmem.photo.data)])) : '/media/imgs/staff.png'} alt=\"cat\" />\r\n                    <p>{stmem.first_name + ' ' + stmem.last_name}</p>\r\n                  </div>\r\n                )\r\n              })\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"appointment-buttons-wrapper flex-row fjust-around button-wrapper\">\r\n              <button id=\"back\" className=\"btn-rec-purple next\"\r\n                onClick={(event) => moveSlider(event)}>Back</button>\r\n\r\n              <button\r\n                id=\"next\" className={appointment.stmem_id === '' ? \"btn-rec-purple next disabled\" : \"btn-rec-purple next\"}\r\n                onClick={(event) => moveSlider(event)}\r\n                disabled={appointment.stmem_id === '' ? true : false}>Next\r\n              </button>\r\n\r\n            </div>\r\n          </motion.div>\r\n        }\r\n\r\n      </AnimatePresence>\r\n      {/* fourth slide */}\r\n      <AnimatePresence >\r\n        {state.isLoading && slides[3] && <LoadingSpinner color='light' top='30%' left='50%' />}\r\n        {slides[3] && !state.isLoading &&\r\n          <>\r\n            <motion.div\r\n              variants={sliderMotion}\r\n              initial=\"initial\"\r\n              animate=\"final\"\r\n              exit='exit' className=\"make-appointment-slider flex-col falign-center gap-24p\">\r\n              <h1>Select Date</h1>\r\n              <p style={{color: 'white', margin: 'auto', width: '80%', textAlign: 'center'}}> *The working hours of the clinic are according to the Turkish local time*</p>\r\n              <div className=\"appointment-types flex-row fjust-center gap-24p \">\r\n                <div className=\"date-picker-input\">\r\n                  <img src=\"/media/imgs/calendar.png\" alt=\"calendar\" />\r\n                  <Datepicker appointment={[appointment, setAppointment]} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"appointment-types flex-row fjust-center gap-16p date-container\">\r\n                {state.timesArr && state.timesArr.availableTimes.length !== 0 && state.timesArr.CLINIC_WORKING_HOURS.map((time, index) => {\r\n                  const offsetTime = time + turkishTimeOffset\r\n                  return (\r\n                    <React.Fragment key={index}>\r\n                      {state.timesArr.availableTimes.includes(time) ?\r\n                        <p className={appointment.hour === time.toString() ? \"time active\" : \"time\"}\r\n                          onClick={(e) => changeDate(e)}\r\n                        >{`${offsetTime >= 10 ? offsetTime : '0' + offsetTime}:00 ${offsetTime > 11 ? 'PM' : 'AM'}`}</p>\r\n                        :\r\n                        <p className=\"time not-available\">{`${offsetTime >= 10 ? offsetTime : '0' + offsetTime}:00 ${offsetTime > 11 ? 'PM' : 'AM'}`}</p>}\r\n                    </React.Fragment>\r\n                  )\r\n                })}\r\n                {state.timesArr && state.timesArr.availableTimes.length === 0 &&\r\n                  <p style={{ color: 'white' }}>No Available appointments on the day specified</p>\r\n                }\r\n\r\n              </div>\r\n              {/* {state.responseError && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>{state.responseError}</p>} */}\r\n              {/* modalClass, header, body, modalButtonClass, modalType */}\r\n\r\n\r\n              <div className=\"appointment-buttons-wrapper flex-row fjust-around button-wrapper\">\r\n                <button id=\"back\" className=\"btn-rec-purple next\"\r\n                  onClick={(event) => moveSlider(event)}>Back</button>\r\n                <button id=\"next\"\r\n                  className={appointment.hour === '' ? \"btn-rec-purple next confirm disabled\" : \"btn-rec-purple next confirm\"}\r\n                  disabled={appointment.hour === '' ? true : false}\r\n                  onClick={() => dispatch({ type: 'checkModalEnter' })}>Confirm</button>\r\n              </div>\r\n\r\n\r\n            </motion.div>\r\n\r\n          </>\r\n        }\r\n\r\n      </AnimatePresence>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MakeAppointmentSlider","// Each component my have one or more animations for each animation we difine an object that contains:\r\n// 1-initial property which tells the initial state of element at the begining of the animation\r\n// 2-final property which tells the final state of the element at the end of the animation\r\n// 3-exit property which tells the exit state of the element when it is removed from the VDOM\r\n// both final and exit properties has a transition property as well to give more detailed info about the animation\r\n// Note: initial, final and exit properties' names are arbitrary\r\nconst appointmentSlider = {\r\n  initial: {\r\n    opacity: 0\r\n  },\r\n  final: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.4,\r\n      duration: 0.8\r\n    }\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 0.8\r\n    }\r\n  },\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport { appointmentSlider };\r\n","\r\nimport {useReducer} from 'react'\r\nconst appointmentReducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n\r\n\r\n       \r\n\r\n      \r\n          \r\n          case 'start': {\r\n              return {\r\n                  ...state,\r\n                  isLoading: true\r\n              }\r\n          }\r\n          case 'startDeleting': {\r\n              return {\r\n                  ...state,\r\n                  deleteLoading: true\r\n              }\r\n          }\r\n\r\n          case 'checkModalExit': {\r\n            return {\r\n              ...state,\r\n              checkModal: false\r\n            }\r\n          }\r\n          case 'checkModalEnter': {\r\n            return {\r\n              ...state,\r\n              checkModal: true,\r\n              appointmentToDelete: action.appointmentToDelete\r\n            }\r\n          }\r\n          case 'finalConfirm': {\r\n            return {\r\n              ...state,\r\n              finalConfirm: true\r\n            }\r\n          }\r\n\r\n\r\n          case 'success': {\r\n            return {\r\n              ...state,\r\n              responseError: '',\r\n              isLoading: false,\r\n              activeAppointments: action.active,\r\n              pastAppointments: action.past,\r\n            }\r\n          }\r\n          // when fetching data is failed\r\n          case 'failure': {\r\n            return {\r\n              ...state,\r\n              responseError: action.error,\r\n              isLoading: false\r\n            }\r\n          }\r\n          case 'successDelete': {\r\n            return {\r\n              ...state,\r\n              responseError: '',\r\n              isLoading: false,\r\n              finalConfirm: false,\r\n              checkModal: false,\r\n              deleteResponse: action.data.result,\r\n              deleteLoading: false\r\n            }\r\n          }\r\n\r\n\r\n          case 'failureDelete': {\r\n            return {\r\n              ...state,\r\n              responseError: action.error,\r\n              isLoading: false, \r\n              finalConfirm: false,\r\n              checkModal: false,\r\n              deleteLoading: false\r\n            }\r\n          }\r\n          \r\n          case 'errorModalExit': {\r\n            return {\r\n              ...state,\r\n              responseError: ''\r\n            }\r\n          }\r\n          default:\r\n            break\r\n    }\r\n}\r\nconst useViewAppointment = (initialData) => {\r\n    const [state, dispatch] = useReducer(appointmentReducer, initialData)\r\n    return [state, dispatch]\r\n}\r\n\r\nexport default useViewAppointment","import ViewAppointmentSlider from \"./appointmentSlider/ViewAppointmentSlider\";\r\nimport MakeAppointmentSlider from './makeAppointment/MakeAppointmentSlider';\r\nimport useViewAppointment from \"../../shared/hooks/view-appointment-hook\";\r\nimport useFetch from \"../../shared/hooks/fetch-hook\";\r\nimport { authContext } from \"../../shared/context/auth-context\";\r\nimport Modal from \"../../utils/modal/Modal\";\r\nimport { useContext, useEffect } from 'react'\r\nimport { pageLoadingContext } from \"../../shared/context/loading-context\";\r\n\r\n// import {\r\n//   useWhatChanged,\r\n//   setUseWhatChange,\r\n// } from '@simbathesailor/use-what-changed';\r\n\r\nconst initialData = {\r\n  isLoading: false,\r\n  checkModal: false,\r\n  finalConfirm: false,\r\n  responseError: '',\r\n  deleteResponse: '',\r\n  activeAppointments: [],\r\n  pastAppointments: [],\r\n  appointmentToDelete: null,\r\n  deleteLoading: false\r\n}\r\n\r\nconst Appointment = () => {\r\n  const [state, dispatch] = useViewAppointment(initialData)\r\n  const sendRequest = useFetch()\r\n  const auth = useContext(authContext)\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n\r\n  // useWhatChanged([state.isLoading, auth.token, dispatch, sendRequest])\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getAppointments = async () => {\r\n      if(isMount)\r\n        dispatch({ type: 'start' })\r\n      try {\r\n        const appointments = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}users/me/appointments`,\r\n          'GET',\r\n          null,\r\n          {\r\n            'Authorization': `Bearer ${auth.token}`\r\n          })\r\n        if (appointments.arrayToSend){\r\n\r\n          const activeAppointments = []\r\n          const pastAppointments = []\r\n          appointments.arrayToSend.forEach(appointment => {\r\n            if(appointment.status === 1 && appointment.confirmed === 0)\r\n              activeAppointments.push(appointment)\r\n            else {\r\n              pastAppointments.push(appointment)\r\n            } \r\n          });\r\n          if(isMount)\r\n            dispatch({ type: 'success', active: activeAppointments, past: pastAppointments})\r\n        }\r\n      } catch (e) {\r\n        if(isMount)\r\n          dispatch({ type: 'failure', error: e.message })\r\n      }\r\n    }\r\n      getAppointments()\r\n\r\n    return () => {\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const deleteAppointment = async () => {\r\n      if (isMount)\r\n        dispatch({ type: 'startDeleting' })\r\n      try {\r\n        const result = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}users/me/appointments/${state.appointmentToDelete}`, 'DELETE', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (result && isMount)\r\n          dispatch({ type: 'successDelete', data: result })\r\n  \r\n      }\r\n      catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'failureDelete', error: e.message })\r\n      }\r\n    }\r\n    if (state.finalConfirm)\r\n      deleteAppointment()\r\n\r\n    return () => {\r\n      isMount = false\r\n    }\r\n  }, [state.finalConfirm, auth.token, sendRequest, dispatch, state.appointmentToDelete])\r\n  useEffect(() => {\r\n    setPageIsLoading(state.deleteLoading)\r\n  }, [setPageIsLoading, state.deleteLoading])\r\n\r\n  return (\r\n    <>\r\n    {state.responseError &&\r\n        <Modal\r\n          modalClass='error'\r\n          header='Oops!!'\r\n          body={state.responseError}\r\n          dispatch={dispatch}\r\n        />}\r\n       {state.checkModal &&\r\n        <Modal\r\n          modalClass='check'\r\n          header=''\r\n          body={\r\n            <>\r\n              <p>Are you sure you want to cancel the appointment ?</p>\r\n            </>\r\n          }\r\n          dispatch={dispatch}\r\n        />}\r\n        {state.deleteResponse && <Modal\r\n          modalClass='success'\r\n          header='Success!!'\r\n          body={state.deleteResponse}\r\n          dispatch={dispatch}\r\n          refresh={true}\r\n        />}\r\n      <div className=\"home-container flex-col  gap-24p\">\r\n        <div className=\"make-appointment-wrapper\">\r\n          <MakeAppointmentSlider />\r\n        </div>\r\n        <div className=\"view-appointment-wrapper flex-row falign-center fjust-start gap-36p\">\r\n\r\n          <div className=\"view-appointment-wrapper ref\">\r\n            <ViewAppointmentSlider  status={1} isLoading={state.isLoading} appointments={state.activeAppointments} dispatch={dispatch}/>\r\n          </div>\r\n\r\n          <div className=\"view-appointment-wrapper ref\">\r\n            <ViewAppointmentSlider status={0} isLoading={state.isLoading} appointments={state.pastAppointments} dispatch={dispatch} />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Appointment;","\r\n\r\n// this custom hook contains the logic of sending a request to the server and getting databack, we wrap it with a useCallback so that it won't create the function every time the component using the hooks rerenders\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = 'GET',\r\n    body = null,\r\n    headers = {},\r\n\r\n\r\n  ) => {\r\n    try {\r\n      // 'Content-Type': 'application/json'\r\n      const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      const parsedData = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(parsedData.error)\r\n      }\r\n      return parsedData\r\n      \r\n    } catch (e) {\r\n      throw e\r\n    }\r\n    \r\n    \r\n  \r\n  \r\n  }, []) \r\n  return sendRequest\r\n}\r\nexport default useFetch","const modalMotion = {\r\n  initial: {\r\n    y: '-100vh',\r\n  },\r\n  final: {\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    y: '-100vh'\r\n  }\r\n}\r\nexport default modalMotion","import { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useState } from \"react\"\r\nimport modalMotion from \"./modalMotion\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst modalVariant = modalMotion\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [show, setShow] = useState(true)\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div className={`modal modal_${props.modalClass}`}>\r\n        <AnimatePresence>\r\n          {show && <motion.div \r\n          variants={modalVariant}\r\n          initial='initial'\r\n          animate='final'\r\n          exit='exit'\r\n\r\n          className={`modal-container modal-container__${props.modalClass} flex-col gap-16p falign-center`}>\r\n\r\n            <header className={`modal-header modal-header__${props.modalClass}`}>\r\n              {props.header}\r\n            </header>\r\n            <div className={`flex-col gap-8p modal-body modal-body__${props.modalClass}`}>\r\n              {props.body}\r\n            </div>\r\n            <footer className={`modal-footer modal-footer__${props.modalClass}`}>\r\n            {(props.modalClass === 'check' || props.modalClass === 'edit') && \r\n                <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  setTimeout(() => {props.dispatch({ type: 'finalConfirm' })}, 300)\r\n                  \r\n                }}\r\n                className='btn-rec modal-button modal-button__confirm'>Confirm </button>\r\n              }\r\n              <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  if (props.refresh)\r\n                    return  setTimeout(() => {window.location.reload()}, 300)\r\n                  if (props.redirectTo)\r\n                    return setTimeout(() => {navigate(props.redirectTo)}, 300)\r\n                    \r\n                  setTimeout(() => {props.dispatch({ type: `${props.modalClass}ModalExit` })}, 300)\r\n                  \r\n                }}\r\n                className={`btn-rec modal-button modal-button__${props.modalClass}`}>{props.modalClass === 'success' ? 'OK' : props.modalClass === 'check' ? 'Cancel' :props.modalClass === 'edit' ? 'Cancel' : 'Exit'}</button>\r\n\r\n              \r\n              \r\n            </footer>\r\n\r\n          </motion.div>}\r\n        </AnimatePresence>\r\n\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n  // modalClass, header, body, modalButtonClass, modalType\r\n}\r\n\r\nexport default Modal"],"sourceRoot":""}