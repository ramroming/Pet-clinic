{"version":3,"sources":["components/pages/staffPanel/registration/RegisterClient.js","components/shared/hooks/fetch-hook.js","components/utils/modal/modalMotion.js","components/utils/modal/Modal.js","components/utils/formErrorMsg/InputError.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js","../node_modules/framer-motion/dist/es/utils/use-force-update.js","components/shared/hooks/signup-form-hook.js"],"names":["initialState","first_name","value","errorMsg","last_name","username","phone_number","address","email","password","re_password","dataToSend","isLoading","missingInput","responseError","responseData","RegisterClient","useSignupForm","state","dispatch","sendRequest","useFetch","setPageIsLoading","useContext","pageLoadingContext","submitForm","event","a","preventDefault","type","useEffect","fetchUser","process","JSON","stringify","parsedData","data","error","message","token","modalClass","header","body","refresh","className","style","paddingTop","action","method","onSubmit","e","href","src","alt","htmlFor","name","id","onChange","field","currentTarget","class","msg","placeholder","onBlur","cols","rows","color","textAlign","width","margin","disabled","useCallback","url","headers","fetch","response","json","ok","Error","modalMotion","initial","y","final","exit","modalVariant","Modal","props","useState","show","setShow","navigate","useNavigate","AnimatePresence","motion","div","variants","animate","onClick","setTimeout","window","location","reload","redirectTo","InputError","presenceId","getPresenceId","PresenceChild","_a","children","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","allComplete","forEach","isComplete","register","delete","undefined","_","key","React","size","PresenceContext","Provider","Map","getChildKey","child","_b","exitBeforeEnter","_c","forceRender","unloadingRef","useRef","__read","forcedRenderCount","setForcedRenderCount","useUnmountEffect","current","useForceUpdate","layoutContext","SharedLayoutContext","isSharedLayout","forceUpdate","isInitialRender","filteredChildren","filtered","Children","isValidElement","push","onlyElements","presentChildren","allChildren","exiting","Set","updateChildLookup","map","childrenToRender","__spreadArray","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","formReducer","isPhone","validator","isMobilePhone","isEmail","isStrongPassword","isMatch","useReducer"],"mappings":"wNAUMA,EAAe,CACnBC,WAAY,CACVC,MAAO,GACPC,SAAU,IAEZC,UAAW,CACTF,MAAO,GACPC,SAAU,IAEZE,SAAU,CACRH,MAAO,GACPC,SAAU,IAEZG,aAAc,CACZJ,MAAO,GACPC,SAAU,IAEZI,QAAS,CACPL,MAAO,GACPC,SAAU,IAEZK,MAAO,CACLN,MAAO,GACPC,SAAU,IAEZM,SAAU,CACRP,MAAO,GACPC,SAAU,IAEZO,YAAa,CACXR,MAAO,GACPC,SAAU,IAEZQ,WAAY,GACZC,WAAW,EACXC,cAAc,EACdC,cAAe,GACfC,aAAc,IAyKDC,UAnKQ,WAGrB,MAA0BC,YAAcjB,GAAxC,mBAAOkB,EAAP,KAAcC,EAAd,KAGMC,EAAcC,cAIdC,EAAmBC,qBAAWC,KAAoBF,iBAIlDG,EAAU,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACjBD,EAAME,iBACNT,EAAS,CAAEU,KAAM,aAFA,2CAAH,sDAsChB,OA/BAC,qBAAU,WAIR,IAAMC,EAAS,uCAAG,4BAAAJ,EAAA,+EAEWP,EAAY,GAAD,OAC/BY,uCAD+B,SAElC,OAAQC,KAAKC,UAAUhB,EAAMP,YAC7B,CACE,eAAgB,qBANN,QAERwB,EAFQ,SASZhB,EAAS,CAAEU,KAAM,UAAWO,KAAMD,IATtB,gDAWdhB,EAAS,CAAEU,KAAM,UAAWQ,MAAO,KAAEC,UAXvB,yDAAH,qDAiBXpB,EAAMN,WACRmB,MAED,CAACb,EAAMP,WAAYO,EAAMN,UAAWQ,EAAaD,IAEpDW,qBAAU,WACRR,EAAiBJ,EAAMN,aACtB,CAACM,EAAMN,UAAWU,IAInB,qCACGJ,EAAMH,aAAawB,OAClB,cAAC,IAAD,CACEC,WAAW,UACXC,OAAO,YACPC,KAAM,0CACNvB,SAAUA,EACVwB,SAAS,IAEb,8CAEA,qBAAKC,UAAU,yBAAyBC,MAAO,CAAEC,WAAY,QAA7D,SACI,uBAAMF,UAAU,gDAAgDG,OAAO,IAAIC,OAAO,OAChFC,SAAU,SAACC,GAAD,OAAOzB,EAAWyB,IAD9B,UAEE,mBAAGN,UAAU,YAAYO,KAAK,KAA9B,SACE,qBAAKC,IAAI,0BAA0BC,IAAI,GAAGT,UAAU,WAOtD,sBAAKA,UAAU,uCAAf,UACE,uBAAOA,UAAU,aAAaU,QAAQ,aAAtC,0BAEA,uBAAOzB,KAAK,OAAO0B,KAAK,aAAaC,GAAG,aAAaC,SAAU,SAACP,GAAQ/B,EAAS,CAAEU,KAAM,aAAc6B,MAAO,aAAcxD,MAAOgD,EAAES,cAAczD,cAGrJ,sBAAK0C,UAAU,uCAAf,UACE,uBAAOA,UAAU,aAAaU,QAAQ,YAAtC,yBAEA,uBAAOzB,KAAK,OAAO0B,KAAK,YAAYC,GAAG,YAAYC,SAAU,SAACP,GAAQ/B,EAAS,CAAEU,KAAM,aAAc6B,MAAO,YAAaxD,MAAOgD,EAAES,cAAczD,cAGlJ,sBAAK0C,UAAU,uCAAf,UACE,uBAAOA,UAAU,aAAaU,QAAQ,WAAtC,wBAEA,uBAAOzB,KAAK,OAAO0B,KAAK,WAAWC,GAAG,WAAWC,SAAU,SAACP,GAAQ/B,EAAS,CAAEU,KAAM,aAAc6B,MAAO,WAAYxD,MAAOgD,EAAES,cAAczD,WAC5IgB,EAAMb,SAASF,UAAY,cAAC,IAAD,CAAYyD,MAAM,YAAYC,IAAK3C,EAAMb,SAASF,cAKhF,sBAAKyC,UAAU,uCAAf,UACE,uBAAOA,UAAU,aAAaU,QAAQ,eAAtC,2BAEA,uBAAOzB,KAAK,OAAO0B,KAAK,eAAeC,GAAG,eAAeM,YAAY,oBACnEL,SAAU,SAACP,GAAQ/B,EAAS,CAAEU,KAAM,aAAc6B,MAAO,eAAgBxD,MAAOgD,EAAES,cAAczD,SAChG6D,OAAQ,WAAQ5C,EAAS,CAAEU,KAAM,iBAElCX,EAAMZ,aAAaH,UAAY,cAAC,IAAD,CAAYyD,MAAM,YAAYC,IAAK3C,EAAMZ,aAAaH,cAKxF,sBAAKyC,UAAU,uCAAf,UACE,uBAAOA,UAAU,aAAaU,QAAQ,UAAtC,uBAEA,0BAAUC,KAAK,UAAUC,GAAG,UAAUQ,KAAK,KAAKC,KAAK,IAAIR,SAAU,SAACP,GAAQ/B,EAAS,CAAEU,KAAM,aAAc6B,MAAO,UAAWxD,MAAOgD,EAAES,cAAczD,cAGtJ,sBAAK0C,UAAU,uCAAf,UACE,uBAAOA,UAAU,aAAaU,QAAQ,QAAtC,qBAEA,uBAAOzB,KAAK,OAAO0B,KAAK,QAAQC,GAAG,QAAQM,YAAY,oBACrDL,SAAU,SAACP,GAAQ/B,EAAS,CAAEU,KAAM,aAAc6B,MAAO,QAASxD,MAAOgD,EAAES,cAAczD,SACzF6D,OAAQ,WAAQ5C,EAAS,CAAEU,KAAM,iBAElCX,EAAMV,MAAML,UAAY,cAAC,IAAD,CAAYyD,MAAM,YAAYC,IAAK3C,EAAMV,MAAML,cAI1E,sBAAKyC,UAAU,uCAAf,UACE,uBAAOA,UAAU,aAAaU,QAAQ,WAAtC,wBAEA,uBAAOzB,KAAK,WAAW0B,KAAK,WAAWC,GAAG,WACxCC,SAAU,SAACP,GAAQ/B,EAAS,CAAEU,KAAM,aAAc6B,MAAO,WAAYxD,MAAOgD,EAAES,cAAczD,SAC5F6D,OAAQ,WAAQ5C,EAAS,CAAEU,KAAM,oBAElCX,EAAMT,SAASN,UAAY,cAAC,IAAD,CAAYyD,MAAM,YAAYC,IAAK3C,EAAMT,SAASN,cAGhF,sBAAKyC,UAAU,uCAAf,UACE,uBAAOA,UAAU,aAAaU,QAAQ,aAAtC,2BAEA,uBAAOzB,KAAK,WAAW0B,KAAK,aAAaC,GAAG,aAC1CC,SAAU,SAACP,GAAQ/B,EAAS,CAAEU,KAAM,aAAc6B,MAAO,cAAexD,MAAOgD,EAAES,cAAczD,SAC/F6D,OAAQ,WAAQ5C,EAAS,CAAEU,KAAM,sBAElCX,EAAMR,YAAYP,UAAY,cAAC,IAAD,CAAYyD,MAAM,YAAYC,IAAK3C,EAAMR,YAAYP,cAGrFe,EAAML,cAAgB,mBAAGgC,MAAO,CAAEqB,MAAO,MAAOC,UAAW,SAAUC,MAAO,MAAOC,OAAQ,QAArE,4CACtBnD,EAAMJ,eAAiB,mBAAG+B,MAAO,CAAEqB,MAAO,MAAOC,UAAW,SAAUC,MAAO,MAAOC,OAAQ,QAArE,SAAgFnD,EAAMJ,gBAE9G,qBAAK8B,UAAU,8CAAf,SAGE,wBAAQf,KAAK,SAASe,UAAW1B,EAAMN,UAAY,4BAA8B,mBAAoB0D,SAAUpD,EAAMN,UAArH,yC,mECnKCS,IAnCE,WAGf,IAAMD,EAAcmD,sBAAW,uCAAC,WAC9BC,GAD8B,mCAAA7C,EAAA,6DAE9BqB,EAF8B,+BAErB,MACTN,EAH8B,+BAGvB,KACP+B,EAJ8B,+BAIpB,GAJoB,kBAULC,MAAMF,EAAK,CAClCxB,SACAyB,UACA/B,SAb4B,cAUtBiC,EAVsB,gBAeHA,EAASC,OAfN,UAetBzC,EAfsB,OAiBvBwC,EAASE,GAjBc,uBAkBpB,IAAIC,MAAM3C,EAAWE,OAlBD,iCAoBrBF,GApBqB,uGAAD,sDA6B5B,IACH,OAAOf,I,mEC5BM2D,EAXK,CAClBC,QAAS,CACPC,EAAG,UAELC,MAAO,CACLD,EAAG,GAELE,KAAM,CACJF,EAAG,W,cCHDG,EAAeL,EA8DNM,IA5DD,SAACC,GAEb,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAWC,cACjB,OACE,mCACE,qBAAK/C,UAAS,sBAAiB0C,EAAM9C,YAArC,SACE,cAACoD,EAAA,EAAD,UACGJ,GAAQ,eAACK,EAAA,EAAOC,IAAR,CACTC,SAAUX,EACVJ,QAAQ,UACRgB,QAAQ,QACRb,KAAK,OAELvC,UAAS,2CAAsC0C,EAAM9C,WAA5C,mCANA,UAQP,wBAAQI,UAAS,qCAAgC0C,EAAM9C,YAAvD,SACG8C,EAAM7C,SAET,qBAAKG,UAAS,iDAA4C0C,EAAM9C,YAAhE,SACG8C,EAAM5C,OAET,yBAAQE,UAAS,qCAAgC0C,EAAM9C,YAAvD,WACuB,UAArB8C,EAAM9C,YAA+C,SAArB8C,EAAM9C,aACpC,wBACAyD,QAAS,WACPR,GAAQ,GACRS,YAAW,WAAOZ,EAAMnE,SAAS,CAAEU,KAAM,mBAAoB,MAG/De,UAAU,6CANV,sBAQF,wBACEqD,QAAS,WAEP,OADAR,GAAQ,GACJH,EAAM3C,QACAuD,YAAW,WAAOC,OAAOC,SAASC,WAAW,KACnDf,EAAMgB,WACDJ,YAAW,WAAOR,EAASJ,EAAMgB,cAAc,UAExDJ,YAAW,WAAOZ,EAAMnE,SAAS,CAAEU,KAAK,GAAD,OAAKyD,EAAM9C,WAAX,iBAAsC,MAG/EI,UAAS,6CAAwC0C,EAAM9C,YAXzD,SAW6F,YAArB8C,EAAM9C,WAA2B,KAA4B,UAArB8C,EAAM9C,YAAwD,SAArB8C,EAAM9C,WAAhB,SAAmD,uB,2CC5CjM+D,IANI,SAACjB,GAClB,OACE,sBAAMzC,MAAOyC,EAAMzC,MAAOD,UAAW0C,EAAM1B,MAA3C,SAAmD0B,EAAMzB,Q,iHCGzD2C,EAAa,EACjB,SAASC,IACL,IAAIjD,EAAKgD,EAET,OADAA,IACOhD,EAEX,IAAIkD,EAAgB,SAAUC,GAC1B,IAAIC,EAAWD,EAAGC,SAAU5B,EAAU2B,EAAG3B,QAAS6B,EAAYF,EAAGE,UAAWC,EAAiBH,EAAGG,eAAgBC,EAASJ,EAAGI,OAAQC,EAAwBL,EAAGK,sBAC3JC,EAAmBC,YAAYC,GAC/B3D,EAAK0D,YAAYT,GACjBW,EAAUC,mBAAQ,WAAc,MAAQ,CACxC7D,GAAIA,EACJwB,QAASA,EACT6B,UAAWA,EACXE,OAAQA,EACRD,eAAgB,SAAUQ,GACtBL,EAAiBM,IAAID,GAAS,GAC9B,IAAIE,GAAc,EAClBP,EAAiBQ,SAAQ,SAAUC,GAC1BA,IACDF,GAAc,MAEtBA,IAAmC,OAAnBV,QAA8C,IAAnBA,GAAqCA,MAEpFa,SAAU,SAAUL,GAEhB,OADAL,EAAiBM,IAAID,GAAS,GACvB,WAAc,OAAOL,EAAiBW,OAAON,QAQ5DN,OAAwBa,EAAY,CAAChB,IAWrC,OAVAQ,mBAAQ,WACJJ,EAAiBQ,SAAQ,SAAUK,EAAGC,GAAO,OAAOd,EAAiBM,IAAIQ,GAAK,QAC/E,CAAClB,IAKJmB,aAAgB,YACXnB,IAAcI,EAAiBgB,OAA4B,OAAnBnB,QAA8C,IAAnBA,GAAqCA,OAC1G,CAACD,IACImB,gBAAoBE,IAAgBC,SAAU,CAAEjI,MAAOkH,GAAWR,IAE9E,SAASO,IACL,OAAO,IAAIiB,I,YC9Cf,SAASC,EAAYC,GACjB,OAAOA,EAAMP,KAAO,GAsFxB,IAAInC,EAAkB,SAAUe,GAC5B,IAAIC,EAAWD,EAAGC,SAAUG,EAASJ,EAAGI,OAAQwB,EAAK5B,EAAG3B,QAASA,OAAiB,IAAPuD,GAAuBA,EAAIzB,EAAiBH,EAAGG,eAAgB0B,EAAkB7B,EAAG6B,gBAAiBC,EAAK9B,EAAGK,sBAAuBA,OAA+B,IAAPyB,GAAuBA,EAG1PC,EC9FR,WACI,IAAIC,EAAeC,kBAAO,GACtBjC,EAAKkC,YAAOtD,mBAAS,GAAI,GAAIuD,EAAoBnC,EAAG,GAAIoC,EAAuBpC,EAAG,GAEtF,OADAqC,aAAiB,WAAc,OAAQL,EAAaM,SAAU,KACvD1E,uBAAY,YACdoE,EAAaM,SAAWF,EAAqBD,EAAoB,KACnE,CAACA,IDwFcI,GACdC,EAAgB5H,qBAAW6H,KAC3BC,YAAeF,KACfT,EAAcS,EAAcG,aAEhC,IAAIC,EAAkBX,kBAAO,GAEzBY,EAlFR,SAAsB5C,GAClB,IAAI6C,EAAW,GAMf,OAJAC,WAASjC,QAAQb,GAAU,SAAU0B,GAC7BqB,yBAAerB,IACfmB,EAASG,KAAKtB,MAEfmB,EA2EgBI,CAAajD,GAGhCkD,EAAkBlB,iBAAOY,GAEzBO,EAAcnB,iBAAO,IAAIR,KACxBa,QAEDe,EAAUpB,iBAAO,IAAIqB,KAAOhB,QAIhC,GA3GJ,SAA2BrC,EAAUmD,GAEjCnD,EAASa,SAAQ,SAAUa,GACvB,IAAIP,EAAMM,EAAYC,GAOtByB,EAAYxC,IAAIQ,EAAKO,MA8FzB4B,CAAkBV,EAAkBO,GAGhCR,EAAgBN,QAEhB,OADAM,EAAgBN,SAAU,EAClBjB,gBAAoBA,WAAgB,KAAMwB,EAAiBW,KAAI,SAAU7B,GAAS,OAAQN,gBAAoBtB,EAAe,CAAEqB,IAAKM,EAAYC,GAAQzB,WAAW,EAAM7B,UAASA,QAAU6C,EAAmBb,sBAAuBA,GAAyBsB,OAU3Q,IAPA,IAAI8B,EAAmBC,YAAc,GAAIxB,YAAOW,IAG5Cc,EAAcR,EAAgBb,QAAQkB,IAAI9B,GAC1CkC,EAAaf,EAAiBW,IAAI9B,GAElCmC,EAAaF,EAAYG,OACpBC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACjC,IAAI3C,EAAMuC,EAAYI,IACW,IAA7BH,EAAWI,QAAQ5C,GACnBiC,EAAQY,IAAI7C,GAIZiC,EAAQpC,OAAOG,GA6CvB,OAxCIS,GAAmBwB,EAAQ/B,OAC3BmC,EAAmB,IAIvBJ,EAAQvC,SAAQ,SAAUM,GAEtB,IAAiC,IAA7BwC,EAAWI,QAAQ5C,GAAvB,CAEA,IAAIO,EAAQyB,EAAYc,IAAI9C,GAC5B,GAAKO,EAAL,CAEA,IAAIwC,EAAiBR,EAAYK,QAAQ5C,GAczCqC,EAAiBW,OAAOD,EAAgB,EAAG9C,gBAAoBtB,EAAe,CAAEqB,IAAKM,EAAYC,GAAQzB,WAAW,EAAOC,eAb9G,WACTiD,EAAYnC,OAAOG,GACnBiC,EAAQpC,OAAOG,GAEf,IAAIiD,EAAclB,EAAgBb,QAAQgC,WAAU,SAAUC,GAAgB,OAAOA,EAAanD,MAAQA,KAC1G+B,EAAgBb,QAAQ8B,OAAOC,EAAa,GAEvChB,EAAQ/B,OACT6B,EAAgBb,QAAUO,EAC1Bd,IACA5B,GAAkBA,MAGyHC,OAAQA,EAAQC,sBAAuBA,GAAyBsB,SAIvN8B,EAAmBA,EAAiBD,KAAI,SAAU7B,GAC9C,IAAIP,EAAMO,EAAMP,IAChB,OAAOiC,EAAQmB,IAAIpD,GAAQO,EAAUN,gBAAoBtB,EAAe,CAAEqB,IAAKM,EAAYC,GAAQzB,WAAW,EAAMG,sBAAuBA,GAAyBsB,MAExKwB,EAAgBb,QAAUmB,EAMlBpC,gBAAoBA,WAAgB,KAAMgC,EAAQ/B,KACpDmC,EACAA,EAAiBD,KAAI,SAAU7B,GAAS,OAAO8C,uBAAa9C,S,mFEnLhE+C,EAAc,SAACnK,EAAO6B,GAC1B,OAAQA,EAAOlB,MAGb,IAAK,aACH,OAAO,2BACFX,GADL,kBAEG6B,EAAOW,MAFV,2BAGOxC,EAAM6B,EAAOW,QAHpB,IAIIxD,MAAO6C,EAAO7C,UAMpB,IAAK,YACH,IAAMoL,EAAUC,IAAUC,cAActK,EAAMZ,aAAaJ,OAC3D,IAAKgB,EAAMZ,aAAaJ,OAASoL,EAC/B,OAAO,2BACFpK,GADL,IAEEZ,aAAa,2BACRY,EAAMZ,cADC,IAEVH,SAAU,OAIhB,IAAKmL,EACH,OAAO,2BACFpK,GADL,IAEEZ,aAAa,2BACRY,EAAMZ,cADC,IAEVH,SAAU,2BAIhB,MAKF,IAAK,YACH,IAAMsL,EAAUF,IAAUE,QAAQvK,EAAMV,MAAMN,OAC9C,IAAKgB,EAAMV,MAAMN,OAASuL,EACxB,OAAO,2BACFvK,GADL,IAEEV,MAAM,2BACDU,EAAMV,OADN,IAEHL,SAAU,OAIhB,IAAKsL,EACH,OAAO,2BACFvK,GADL,IAEEV,MAAM,2BACDU,EAAMV,OADN,IAEHL,SAAU,4BAKhB,MAGF,IAAK,eAGH,OAAKe,EAAMT,SAASP,MAQHqL,IAAUG,iBAAiBxK,EAAMT,SAASP,OAMpDgB,EAAMR,YAAYR,OAcnBgB,EAAMT,SAASP,QAAUgB,EAAMR,YAAYR,MACtC,2BACFgB,GADL,IAEET,SAAS,2BACJS,EAAMT,UADH,IAENN,SAAU,KAEZO,YAAY,2BACPQ,EAAMR,aADA,IAETP,SAAU,6BAtBP,2BACFe,GADL,IAEET,SAAS,2BACJS,EAAMT,UADH,IAENN,SAAU,KAEZO,YAAY,2BACPQ,EAAMR,aADA,IAETP,SAAU,OAiCbe,EAAMR,YAAYR,OAanBgB,EAAMT,SAASP,QAAUgB,EAAMR,YAAYR,MACtC,2BACFgB,GADL,IAEET,SAAS,2BACJS,EAAMT,UADH,IAENN,SAAU,mEAEZO,YAAY,2BACPQ,EAAMR,aADA,IAETP,SAAU,6BArBP,2BACFe,GADL,IAEET,SAAS,2BACJS,EAAMT,UADH,IAENN,SAAU,mEAEZO,YAAY,2BACPQ,EAAMR,aADA,IAETP,SAAU,OAhEP,2BACFe,GADL,IAEET,SAAS,2BACJS,EAAMT,UADH,IAENN,SAAU,OAyFlB,IAAK,iBACH,IAAMwL,EAAUzK,EAAMT,SAASP,QAAUgB,EAAMR,YAAYR,MAC3D,OAAKgB,EAAMR,YAAYR,MASlByL,EASE,2BACFzK,GADL,IAEER,YAAY,2BACPQ,EAAMR,aADA,IAETP,SAAU,OAZL,2BACFe,GADL,IAEER,YAAY,2BACPQ,EAAMR,aADA,IAETP,SAAU,6BAbP,2BACFe,GADL,IAEER,YAAY,2BACPQ,EAAMR,aADA,IAETP,SAAU,OAwBlB,IAAK,WAEH,OAAIe,EAAMN,UACDM,EAGJA,EAAMjB,WAAWC,OAAUgB,EAAMd,UAAUF,OAAUgB,EAAMb,SAASH,OAAUgB,EAAMV,MAAMN,OAAUgB,EAAMX,QAAQL,OAAUgB,EAAMT,SAASP,OAAUgB,EAAMR,YAAYR,OAAUgB,EAAMZ,aAAaJ,MAOrMgB,EAAMb,SAASF,UAAYe,EAAMV,MAAML,UAAYe,EAAMT,SAASN,UAAYe,EAAMR,YAAYP,UAAYe,EAAMZ,aAAaH,SAC1He,EAIF,2BACFA,GADL,IAEEP,WAAY,CACVV,WAAYiB,EAAMjB,WAAWC,MAC7BE,UAAWc,EAAMd,UAAUF,MAC3BG,SAAUa,EAAMb,SAASH,MACzBI,aAAcY,EAAMZ,aAAaJ,MACjCK,QAASW,EAAMX,QAAQL,MACvBM,MAAOU,EAAMV,MAAMN,MACnBO,SAAUS,EAAMT,SAASP,OAE3BU,WAAW,EACXC,cAAc,IAvBP,2BACFK,GADL,IAEEL,cAAc,IAgCpB,IAAK,UACH,OAAO,2BACFK,GADL,IAEEJ,cAAe,GACfF,WAAW,EACXG,aAAcgC,EAAOX,OAKzB,IAAK,UACH,OAAO,2BACFlB,GADL,IAEEJ,cAAeiC,EAAOV,MACtBzB,WAAW,MAiBJK,IAJO,SAACjB,GACrB,MAA0B4L,qBAAWP,EAAarL,GAAlD,mBACA,MAAO,CADP","file":"static/js/25.365b1817.chunk.js","sourcesContent":["import { useEffect, useContext } from \"react\"\r\nimport InputError from \"../../../utils/formErrorMsg/InputError\"\r\nimport useFetch from \"../../../shared/hooks/fetch-hook\"\r\nimport useSignupForm from \"../../../shared/hooks/signup-form-hook\"\r\nimport { pageLoadingContext } from '../../../shared/context/loading-context';\r\nimport Modal from '../../../utils/modal/Modal';\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n  first_name: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  last_name: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  username: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  phone_number: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  address: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  email: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  password: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  re_password: {\r\n    value: '',\r\n    errorMsg: ''\r\n  },\r\n  dataToSend: {},\r\n  isLoading: false,\r\n  missingInput: false,\r\n  responseError: '',\r\n  responseData: {}\r\n\r\n}\r\n\r\n\r\n\r\nconst RegisterClient = () => {\r\n\r\n  // using the form-hook\r\n  const [state, dispatch] = useSignupForm(initialState)\r\n\r\n  // using the fetch hook\r\n  const sendRequest = useFetch()\r\n\r\n\r\n\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n\r\n\r\n\r\n  const submitForm = async (event) => {\r\n    event.preventDefault()\r\n    dispatch({ type: 'validate' })\r\n  }\r\n  \r\n\r\n  // if we have async operation inside use effect we have to wrap the operation with an async function inside the useeffect and then we should call the same function again inside the useEffect without using await\r\n  useEffect(() => {\r\n\r\n\r\n    // wrapper function to enable us to use async functions inside useEffect\r\n    const fetchUser = async () => {\r\n      try {\r\n        const parsedData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}users`,\r\n          'POST', JSON.stringify(state.dataToSend),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          })\r\n        if (parsedData)\r\n          dispatch({ type: 'success', data: parsedData })\r\n      } catch (e) {\r\n        dispatch({ type: 'failure', error: e.message })\r\n      }\r\n\r\n    }\r\n\r\n    // isLoading changes from false to true if the validation process  passed successfully \r\n    if (state.isLoading) {\r\n      fetchUser()\r\n    }\r\n  }, [state.dataToSend, state.isLoading, sendRequest, dispatch])\r\n\r\n  useEffect(() => {\r\n    setPageIsLoading(state.isLoading)\r\n  }, [state.isLoading, setPageIsLoading])\r\n  \r\n\r\n  return (\r\n    <>\r\n      {state.responseData.token &&\r\n        <Modal\r\n          modalClass='success'\r\n          header='Success!!'\r\n          body={'Client has been registered successfully'}\r\n          dispatch={dispatch}\r\n          refresh={true}\r\n        />}\r\n      <h4>Registration</h4>\r\n      \r\n      <div className=\"flex-col falign-center\" style={{ paddingTop: '1rem' }}>\r\n          <form className=\"form-container flex-col gap-16p falign-center\" action=\"/\" method=\"POST\"\r\n            onSubmit={(e) => submitForm(e)}>\r\n            <a className=\"logo-link\" href=\"/#\">\r\n              <img src=\"/media/imgs/favicon.png\" alt=\"\" className=\"logo\" />\r\n            </a>\r\n\r\n            {/* <div className=\"x-close-panel\"><button\r\n                onClick={() =>setRegisterUser(false)}>\r\n                <i className=\"fa-solid fa-xmark\"></i></button></div> */}\r\n\r\n            <div className=\"input-wrapper flex-row fjust-between\">\r\n              <label className=\"half-label\" htmlFor=\"first_name\">First Name:*\r\n              </label>\r\n              <input type=\"text\" name=\"first_name\" id=\"first_name\" onChange={(e) => { dispatch({ type: 'enterValue', field: 'first_name', value: e.currentTarget.value }) }} />\r\n            </div>\r\n\r\n            <div className=\"input-wrapper flex-row fjust-between\">\r\n              <label className=\"half-label\" htmlFor=\"last_name\">Last Name:*\r\n              </label>\r\n              <input type=\"text\" name=\"last_name\" id=\"last_name\" onChange={(e) => { dispatch({ type: 'enterValue', field: 'last_name', value: e.currentTarget.value }) }} />\r\n            </div>\r\n\r\n            <div className=\"input-wrapper flex-row fjust-between\">\r\n              <label className=\"half-label\" htmlFor=\"username\">Username:*\r\n              </label>\r\n              <input type=\"text\" name=\"username\" id=\"username\" onChange={(e) => { dispatch({ type: 'enterValue', field: 'username', value: e.currentTarget.value }) }} />\r\n              {state.username.errorMsg && <InputError class='error-msg' msg={state.username.errorMsg} />}\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"input-wrapper flex-row fjust-between\">\r\n              <label className=\"half-label\" htmlFor=\"phone_number\">Phone Number:\r\n              </label>\r\n              <input type=\"text\" name=\"phone_number\" id=\"phone_number\" placeholder=\"eg. 506 022 23 80\"\r\n                onChange={(e) => { dispatch({ type: 'enterValue', field: 'phone_number', value: e.currentTarget.value }) }}\r\n                onBlur={() => { dispatch({ type: 'blurPhone' }) }} />\r\n\r\n              {state.phone_number.errorMsg && <InputError class='error-msg' msg={state.phone_number.errorMsg} />}\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"input-wrapper flex-row fjust-between\">\r\n              <label className=\"half-label\" htmlFor=\"address\">Address:*\r\n              </label>\r\n              <textarea name=\"address\" id=\"address\" cols=\"30\" rows=\"4\" onChange={(e) => { dispatch({ type: 'enterValue', field: 'address', value: e.currentTarget.value }) }}></textarea>\r\n            </div>\r\n\r\n            <div className=\"input-wrapper flex-row fjust-between\">\r\n              <label className=\"half-label\" htmlFor=\"email\">Email:*\r\n              </label>\r\n              <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"example@gmail.com\"\r\n                onChange={(e) => { dispatch({ type: 'enterValue', field: 'email', value: e.currentTarget.value }) }}\r\n                onBlur={() => { dispatch({ type: 'blurEmail' }) }}\r\n              />\r\n              {state.email.errorMsg && <InputError class='error-msg' msg={state.email.errorMsg} />}\r\n\r\n            </div>\r\n\r\n            <div className=\"input-wrapper flex-row fjust-between\">\r\n              <label className=\"half-label\" htmlFor=\"password\">Password:*\r\n              </label>\r\n              <input type=\"password\" name=\"password\" id=\"password\"\r\n                onChange={(e) => { dispatch({ type: 'enterValue', field: 'password', value: e.currentTarget.value }) }}\r\n                onBlur={() => { dispatch({ type: 'blurPassword' }) }}\r\n              />\r\n              {state.password.errorMsg && <InputError class='error-msg' msg={state.password.errorMsg} />}\r\n            </div>\r\n\r\n            <div className=\"input-wrapper flex-row fjust-between\">\r\n              <label className=\"half-label\" htmlFor=\"rePassword\">Re-password:*\r\n              </label>\r\n              <input type=\"password\" name=\"rePassword\" id=\"rePassword\"\r\n                onChange={(e) => { dispatch({ type: 'enterValue', field: 're_password', value: e.currentTarget.value }) }}\r\n                onBlur={() => { dispatch({ type: 'blurRePassword' }) }}\r\n              />\r\n              {state.re_password.errorMsg && <InputError class='error-msg' msg={state.re_password.errorMsg} />}\r\n            </div>\r\n\r\n            {state.missingInput && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>Please Fill mandatory fields *</p>}\r\n            {state.responseError && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto' }}>{state.responseError}</p>}\r\n\r\n            <div className=\"button-wrapper flex-row gap-8p fjust-center\">\r\n\r\n\r\n              <button type=\"submit\" className={state.isLoading ? \"btn-r btn-r-dark disabled\" : \"btn-r btn-r-dark\"} disabled={state.isLoading}>\r\n                Register Client\r\n              </button>\r\n\r\n\r\n            </div>\r\n          </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterClient","\r\n\r\n// this custom hook contains the logic of sending a request to the server and getting databack, we wrap it with a useCallback so that it won't create the function every time the component using the hooks rerenders\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = 'GET',\r\n    body = null,\r\n    headers = {},\r\n\r\n\r\n  ) => {\r\n    try {\r\n      // 'Content-Type': 'application/json'\r\n      const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      const parsedData = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(parsedData.error)\r\n      }\r\n      return parsedData\r\n      \r\n    } catch (e) {\r\n      throw e\r\n    }\r\n    \r\n    \r\n  \r\n  \r\n  }, []) \r\n  return sendRequest\r\n}\r\nexport default useFetch","const modalMotion = {\r\n  initial: {\r\n    y: '-100vh',\r\n  },\r\n  final: {\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    y: '-100vh'\r\n  }\r\n}\r\nexport default modalMotion","import { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useState } from \"react\"\r\nimport modalMotion from \"./modalMotion\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst modalVariant = modalMotion\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [show, setShow] = useState(true)\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div className={`modal modal_${props.modalClass}`}>\r\n        <AnimatePresence>\r\n          {show && <motion.div \r\n          variants={modalVariant}\r\n          initial='initial'\r\n          animate='final'\r\n          exit='exit'\r\n\r\n          className={`modal-container modal-container__${props.modalClass} flex-col gap-16p falign-center`}>\r\n\r\n            <header className={`modal-header modal-header__${props.modalClass}`}>\r\n              {props.header}\r\n            </header>\r\n            <div className={`flex-col gap-8p modal-body modal-body__${props.modalClass}`}>\r\n              {props.body}\r\n            </div>\r\n            <footer className={`modal-footer modal-footer__${props.modalClass}`}>\r\n            {(props.modalClass === 'check' || props.modalClass === 'edit') && \r\n                <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  setTimeout(() => {props.dispatch({ type: 'finalConfirm' })}, 300)\r\n                  \r\n                }}\r\n                className='btn-rec modal-button modal-button__confirm'>Confirm </button>\r\n              }\r\n              <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  if (props.refresh)\r\n                    return  setTimeout(() => {window.location.reload()}, 300)\r\n                  if (props.redirectTo)\r\n                    return setTimeout(() => {navigate(props.redirectTo)}, 300)\r\n                    \r\n                  setTimeout(() => {props.dispatch({ type: `${props.modalClass}ModalExit` })}, 300)\r\n                  \r\n                }}\r\n                className={`btn-rec modal-button modal-button__${props.modalClass}`}>{props.modalClass === 'success' ? 'OK' : props.modalClass === 'check' ? 'Cancel' :props.modalClass === 'edit' ? 'Cancel' : 'Exit'}</button>\r\n\r\n              \r\n              \r\n            </footer>\r\n\r\n          </motion.div>}\r\n        </AnimatePresence>\r\n\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n  // modalClass, header, body, modalButtonClass, modalType\r\n}\r\n\r\nexport default Modal","const InputError = (props) => {\r\n  return (\r\n    <span style={props.style} className={props.class}>{props.msg}</span>\r\n  )\r\n}\r\n\r\nexport default InputError","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            presenceChildren.set(childId, true);\n            var allComplete = true;\n            presenceChildren.forEach(function (isComplete) {\n                if (!isComplete)\n                    allComplete = false;\n            });\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __spreadArray, __read } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.js';\nimport { PresenceChild } from './PresenceChild.js';\nimport { SharedLayoutContext, isSharedLayout } from '../../context/SharedLayoutContext.js';\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var forceRender = useForceUpdate();\n    var layoutContext = useContext(SharedLayoutContext);\n    if (isSharedLayout(layoutContext)) {\n        forceRender = layoutContext.forceUpdate;\n    }\n    var isInitialRender = useRef(true);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map())\n        .current;\n    // A living record of all currently exiting components.\n    var exiting = useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React.createElement(React.Fragment, null, filteredChildren.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = __spreadArray([], __read(filteredChildren));\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport { useCallback, useRef, useState } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.js';\n\nfunction useForceUpdate() {\n    var unloadingRef = useRef(false);\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (unloadingRef.current = true); });\n    return useCallback(function () {\n        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n}\n\nexport { useForceUpdate };\n","import { useReducer } from 'react'\r\nimport validator from 'validator'\r\n\r\n// This custom hook is currently adjusted to validate user inputs when signing up using userReducer\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    // ***************** Forms input validations *************************\r\n    case 'enterValue': {\r\n      return {\r\n        ...state,\r\n        [action.field]: {\r\n          ...state[action.field],\r\n          value: action.value\r\n        }\r\n      }\r\n    }\r\n    \r\n    // when focus on phone input is out\r\n    case 'blurPhone': {\r\n      const isPhone = validator.isMobilePhone(state.phone_number.value)\r\n      if (!state.phone_number.value || isPhone) {\r\n        return {\r\n          ...state,\r\n          phone_number: {\r\n            ...state.phone_number,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      }\r\n      if (!isPhone) {\r\n        return {\r\n          ...state,\r\n          phone_number: {\r\n            ...state.phone_number,\r\n            errorMsg: 'Invalid Phone number'\r\n          }\r\n        }\r\n      }\r\n      break;\r\n\r\n\r\n    }\r\n    // when focus on email input is out\r\n    case 'blurEmail': {\r\n      const isEmail = validator.isEmail(state.email.value)\r\n      if (!state.email.value || isEmail) {\r\n        return {\r\n          ...state,\r\n          email: {\r\n            ...state.email,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      }\r\n      if (!isEmail) {\r\n        return {\r\n          ...state,\r\n          email: {\r\n            ...state.email,\r\n            errorMsg: 'Invalid Email Address'\r\n          }\r\n\r\n        }\r\n      }\r\n      break;\r\n\r\n    }\r\n    case 'blurPassword': {\r\n\r\n      // empty password field\r\n      if (!state.password.value)\r\n        return {\r\n          ...state,\r\n          password: {\r\n            ...state.password,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      const isStrong = validator.isStrongPassword(state.password.value)\r\n\r\n      // strong password\r\n      if (isStrong) {\r\n\r\n        // strong but empty re_password\r\n        if (!state.re_password.value)\r\n          return {\r\n            ...state,\r\n            password: {\r\n              ...state.password,\r\n              errorMsg: ''\r\n            },\r\n            re_password: {\r\n              ...state.re_password,\r\n              errorMsg: ''\r\n            }\r\n          }\r\n\r\n        // strong but dosen't match repassword\r\n        if (state.password.value !== state.re_password.value)\r\n          return {\r\n            ...state,\r\n            password: {\r\n              ...state.password,\r\n              errorMsg: ''\r\n            },\r\n            re_password: {\r\n              ...state.re_password,\r\n              errorMsg: 'password not matched!!'\r\n            }\r\n          }\r\n\r\n        // strong and match\r\n        return {\r\n          ...state,\r\n          password: {\r\n            ...state.password,\r\n            errorMsg: ''\r\n          },\r\n          re_password: {\r\n            ...state.re_password,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      }\r\n\r\n      // weak and empty repassword\r\n      if (!state.re_password.value)\r\n        return {\r\n          ...state,\r\n          password: {\r\n            ...state.password,\r\n            errorMsg: 'minlength:8, must include uppercase, numbers and special chars'\r\n          },\r\n          re_password: {\r\n            ...state.re_password,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n      // weak and no match\r\n      if (state.password.value !== state.re_password.value)\r\n        return {\r\n          ...state,\r\n          password: {\r\n            ...state.password,\r\n            errorMsg: 'minlength:8, must include uppercase, numbers and special chars'\r\n          },\r\n          re_password: {\r\n            ...state.re_password,\r\n            errorMsg: 'password not matched!!'\r\n          }\r\n        }\r\n      // weak and match\r\n      return {\r\n        ...state,\r\n        password: {\r\n          ...state.password,\r\n          errorMsg: 'minlength:8, must include uppercase, numbers and special chars'\r\n        },\r\n        re_password: {\r\n          ...state.re_password,\r\n          errorMsg: ''\r\n        }\r\n      }\r\n    }\r\n    case 'blurRePassword': {\r\n      const isMatch = state.password.value === state.re_password.value\r\n      if (!state.re_password.value)\r\n        return {\r\n          ...state,\r\n          re_password: {\r\n            ...state.re_password,\r\n            errorMsg: ''\r\n          }\r\n        }\r\n\r\n      if (!isMatch)\r\n        return {\r\n          ...state,\r\n          re_password: {\r\n            ...state.re_password,\r\n            errorMsg: 'password not matched!!'\r\n          }\r\n\r\n        }\r\n      return {\r\n        ...state,\r\n        re_password: {\r\n          ...state.re_password,\r\n          errorMsg: ''\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    // validating when the signup is pressed\r\n    case 'validate': {\r\n\r\n      if (state.isLoading)\r\n        return state\r\n\r\n      // incase of missing mandatory inputs\r\n      if (!state.first_name.value || !state.last_name.value || !state.username.value || !state.email.value || !state.address.value || !state.password.value || !state.re_password.value || !state.phone_number.value)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n\r\n      // incase of errors in the form\r\n      if (state.username.errorMsg || state.email.errorMsg || state.password.errorMsg || state.re_password.errorMsg || state.phone_number.errorMsg)\r\n        return state\r\n\r\n\r\n      // incase of successfull validation\r\n      return {\r\n        ...state,\r\n        dataToSend: {\r\n          first_name: state.first_name.value,\r\n          last_name: state.last_name.value,\r\n          username: state.username.value,\r\n          phone_number: state.phone_number.value,\r\n          address: state.address.value,\r\n          email: state.email.value,\r\n          password: state.password.value\r\n        },\r\n        isLoading: true,\r\n        missingInput: false\r\n      }\r\n\r\n    }\r\n\r\n    \r\n  \r\n    // *************** state management when using fetch *******************\r\n    \r\n    \r\n    // when fetching data is succeded \r\n    case 'success': {\r\n      return {\r\n        ...state,\r\n        responseError: '',\r\n        isLoading: false,\r\n        responseData: action.data\r\n      }\r\n    }\r\n\r\n    // when fetching data is failed\r\n    case 'failure': {\r\n      return {\r\n        ...state,\r\n        responseError: action.error,\r\n        isLoading: false\r\n      }\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    default:\r\n      break\r\n  }\r\n}\r\n\r\nconst useSignupForm = (initialState) => {\r\n  const [state, dispatch] = useReducer(formReducer, initialState)\r\n  return [state, dispatch]\r\n}\r\nexport default useSignupForm"],"sourceRoot":""}