{"version":3,"sources":["components/shared/hooks/activeappointments-hook.js","components/pages/staffPanel/activeappointments/ActiveAppointments.js","components/shared/hooks/fetch-hook.js","components/utils/modal/modalMotion.js","components/utils/modal/Modal.js"],"names":["activeAppointmentsReducer","state","action","type","isGettingAppointments","appointments","data","gettingAppointmentsFailure","error","useActiveAppointments","initialData","useReducer","ActiveAppointments","dispatch","auth","useContext","authContext","setPageIsLoading","pageLoadingContext","sendRequest","useFetch","useEffect","isMount","getAppointments","a","process","token","message","Modal","modalClass","header","body","className","map","appointment","index","style","color","status","dateFormat","date","confirmed","first_name","last_name","phone_number","pet_name","pet_type","breed_name","userRole","to","appointment_type_id","appId","id","petId","pet_id","useCallback","url","method","headers","fetch","response","json","parsedData","ok","Error","modalMotion","initial","y","final","exit","modalVariant","props","useState","show","setShow","navigate","useNavigate","AnimatePresence","motion","div","variants","animate","onClick","setTimeout","refresh","window","location","reload","redirectTo"],"mappings":"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","file":"static/js/36.0d61e7fa.chunk.js","sourcesContent":["import { useReducer } from 'react'\r\n\r\nconst activeAppointmentsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'getAppointmentsSuccess':\r\n      return {\r\n        ...state,\r\n        isGettingAppointments: false,\r\n        appointments: action.data\r\n      }\r\n    case 'getAppointmentsFailure':\r\n      return {\r\n        ...state,\r\n        isGettingAppointments: false,\r\n        gettingAppointmentsFailure: action.error\r\n      }\r\n\r\n    case 'errorModalExit':\r\n      return {\r\n        ...state,\r\n        gettingAppointmentsFailure: ''\r\n      }\r\n    default:\r\n      break\r\n  }\r\n}\r\nconst useActiveAppointments = (initialData) => {\r\n  const [state, dispatch] = useReducer(activeAppointmentsReducer, initialData)\r\n  return [state, dispatch]\r\n}\r\nexport default useActiveAppointments","import useActiveAppointments from \"../../../shared/hooks/activeappointments-hook\"\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport Modal from \"../../../utils/modal/Modal\";\r\nimport dateFormat from \"dateformat\"\r\nimport { authContext } from \"../../../shared/context/auth-context\";\r\nimport { useEffect, useContext } from 'react'\r\nimport { pageLoadingContext } from \"../../../shared/context/loading-context\";\r\nimport useFetch from \"../../../shared/hooks/fetch-hook\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst initialData = {\r\n  isGettingAppointments: true,\r\n  gettingAppointmentsFailure: '',\r\n  appointments: []\r\n}\r\nconst ActiveAppointments = () => {\r\n  const [state, dispatch] = useActiveAppointments(initialData)\r\n  const auth = useContext(authContext)\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n  const sendRequest = useFetch()\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getAppointments = async () => {\r\n      try {\r\n        const appointments = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}vet/appointments`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (isMount && appointments)\r\n          dispatch({ type: 'getAppointmentsSuccess', data: appointments })\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'getAppointmentsFailure', error: e.message })\r\n      }\r\n    }\r\n    getAppointments()\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    setPageIsLoading(state.isGettingAppointments)\r\n  }, [setPageIsLoading, state.isGettingAppointments])\r\n\r\n  return (\r\n\r\n    <>\r\n      {(state.gettingAppointmentsFailure) &&\r\n        <Modal\r\n          modalClass='error'\r\n          header='Oops!!'\r\n          body={state.gettingAppointmentsFailure}\r\n          dispatch={dispatch}\r\n        />}\r\n\r\n      <h4>Active Appointments</h4>\r\n      <div>\r\n        <Table className=\"my-table\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>  \r\n                Time\r\n              </Th>\r\n              <Th>\r\n                confirmed\r\n              </Th>\r\n\r\n              <Th>\r\n                First name\r\n              </Th>\r\n              <Th>\r\n                Last name\r\n              </Th>\r\n              <Th>\r\n                Phone number\r\n              </Th>\r\n\r\n              <Th>\r\n                Pet name\r\n              </Th>\r\n              <Th>\r\n                Type\r\n              </Th>\r\n              <Th>\r\n                Breed\r\n              </Th>\r\n              <Th>\r\n\r\n              </Th>\r\n\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n\r\n            {/* first user */}\r\n\r\n            {state.appointments.map((appointment, index) => {\r\n              return (\r\n                <Tr key={index}>\r\n                  <Td>\r\n                    {<p style={{ color: appointment.status === 1 ? 'darkgreen' : 'darkred' }}>{dateFormat(appointment.date, \"h:MM TT\")}</p>}\r\n                  </Td>\r\n                  <Td>\r\n                    <p style={{ color: appointment.confirmed ? 'darkgreen' : 'darkmagenta' }}>{appointment.confirmed === 1 ? 'Yes' : 'No'}</p>\r\n                  </Td>\r\n\r\n                  <Td>\r\n                    {appointment.first_name}\r\n                  </Td>\r\n                  <Td>\r\n                    {appointment.last_name}\r\n                  </Td>\r\n                  <Td>\r\n                    {appointment.phone_number}\r\n                  </Td>\r\n                  <Td>\r\n                    {appointment.pet_name}\r\n                  </Td>\r\n                  <Td>\r\n                    {appointment.pet_type}\r\n                  </Td>\r\n                  <Td>\r\n                    {appointment.breed_name}\r\n                  </Td>\r\n                  {auth.userRole !== 'groomer' &&\r\n                    <Td>\r\n                      {appointment.confirmed ? <Link\r\n                        to={`/staffpanel/${appointment.appointment_type_id === 1 ? 'pettreatmenthistory': 'pettraininghistory'}`}\r\n                        className=\"start-treatment\"\r\n                        state={{ appId: appointment.id, petId: appointment.pet_id }}\r\n                      >\r\n                        {appointment.appointment_type_id === 1 ? 'Start Treatment' : 'Start Training'}<i className=\"fa-regular fa-pen-to-square\"></i>\r\n                      </Link> :\r\n                        <p style={{ color: 'darkgray' }}>Waiting confirmation</p>}\r\n                    </Td>\r\n                  }\r\n\r\n\r\n                </Tr>\r\n              )\r\n            })}\r\n\r\n\r\n            {/* second user  */}\r\n\r\n\r\n\r\n\r\n          </Tbody>\r\n\r\n\r\n\r\n        </Table>\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\nexport default ActiveAppointments","\r\n\r\n// this custom hook contains the logic of sending a request to the server and getting databack, we wrap it with a useCallback so that it won't create the function every time the component using the hooks rerenders\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = 'GET',\r\n    body = null,\r\n    headers = {},\r\n\r\n\r\n  ) => {\r\n    try {\r\n      // 'Content-Type': 'application/json'\r\n      const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      const parsedData = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(parsedData.error)\r\n      }\r\n      return parsedData\r\n      \r\n    } catch (e) {\r\n      throw e\r\n    }\r\n    \r\n    \r\n  \r\n  \r\n  }, []) \r\n  return sendRequest\r\n}\r\nexport default useFetch","const modalMotion = {\r\n  initial: {\r\n    y: '-100vh',\r\n  },\r\n  final: {\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    y: '-100vh'\r\n  }\r\n}\r\nexport default modalMotion","import { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useState } from \"react\"\r\nimport modalMotion from \"./modalMotion\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst modalVariant = modalMotion\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [show, setShow] = useState(true)\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div className={`modal modal_${props.modalClass}`}>\r\n        <AnimatePresence>\r\n          {show && <motion.div \r\n          variants={modalVariant}\r\n          initial='initial'\r\n          animate='final'\r\n          exit='exit'\r\n\r\n          className={`modal-container modal-container__${props.modalClass} flex-col gap-16p falign-center`}>\r\n\r\n            <header className={`modal-header modal-header__${props.modalClass}`}>\r\n              {props.header}\r\n            </header>\r\n            <div className={`flex-col gap-8p modal-body modal-body__${props.modalClass}`}>\r\n              {props.body}\r\n            </div>\r\n            <footer className={`modal-footer modal-footer__${props.modalClass}`}>\r\n            {(props.modalClass === 'check' || props.modalClass === 'edit') && \r\n                <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  setTimeout(() => {props.dispatch({ type: 'finalConfirm' })}, 300)\r\n                  \r\n                }}\r\n                className='btn-rec modal-button modal-button__confirm'>Confirm </button>\r\n              }\r\n              <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  if (props.refresh)\r\n                    return  setTimeout(() => {window.location.reload()}, 300)\r\n                  if (props.redirectTo)\r\n                    return setTimeout(() => {navigate(props.redirectTo)}, 300)\r\n                    \r\n                  setTimeout(() => {props.dispatch({ type: `${props.modalClass}ModalExit` })}, 300)\r\n                  \r\n                }}\r\n                className={`btn-rec modal-button modal-button__${props.modalClass}`}>{props.modalClass === 'success' ? 'OK' : props.modalClass === 'check' ? 'Cancel' :props.modalClass === 'edit' ? 'Cancel' : 'Exit'}</button>\r\n\r\n              \r\n              \r\n            </footer>\r\n\r\n          </motion.div>}\r\n        </AnimatePresence>\r\n\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n  // modalClass, header, body, modalButtonClass, modalType\r\n}\r\n\r\nexport default Modal"],"sourceRoot":""}