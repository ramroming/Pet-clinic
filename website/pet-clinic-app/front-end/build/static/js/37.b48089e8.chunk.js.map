{"version":3,"sources":["components/pages/staffPanel/pettraininghistory/UpdateTraining.js","components/pages/staffPanel/pettraininghistory/AddPetTraining.js","components/shared/hooks/traininghistory-hook.js","components/pages/staffPanel/pettraininghistory/PetTrainingHistory.js","components/shared/hooks/fetch-hook.js","components/utils/modal/modalMotion.js","components/utils/modal/Modal.js"],"names":["UpdatetTraining","dispatch","state","className","onClick","type","data","value","trainingTypeId","onChange","e","currentTarget","field","trainingTypes","map","trainingType","index","id","name","startDate","min","minDate","endDate","missingInput","style","color","textAlign","width","margin","marginTop","disabled","isUpdatingTraining","AddPetTraining","isSavingTraining","trainingHistoryReducer","action","updateTrainingModal","TrainingId","dateFormat","Date","setUTCHours","getUTCHours","addTrainingModal","trainingId","trObj","start_date","end_date","training_type_id","isGettingTrainings","trainings","getTrainingsFailure","error","isGettingTrainingTypes","getTrainingTypesFailure","appId","petId","parseInt","savingTrainingResult","result","savingTrainingFailure","updateTrainingResult","updateTrainingFailure","useTrainingHistory","initialData","useReducer","presShowId","PetTrainingHistory","location","useLocation","auth","useContext","authContext","setPageIsLoading","pageLoadingContext","sendRequest","useFetch","useEffect","isMount","getTrainings","a","process","token","response","message","getTrainingTypes","saveTraining","JSON","stringify","updateTraining","Modal","modalClass","header","body","refresh","UpdateTraining","training","training_type","first_name","last_name","pet_name","trainer_id","userId","useCallback","url","method","headers","fetch","json","parsedData","ok","Error","modalMotion","initial","y","final","exit","modalVariant","props","useState","show","setShow","navigate","useNavigate","AnimatePresence","motion","div","variants","animate","setTimeout","window","reload","redirectTo"],"mappings":"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","file":"static/js/37.b48089e8.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nconst UpdatetTraining = ({ dispatch, state }) => {\r\n\r\n  return (\r\n    <div className=\"update-modal-background flex falign-center fjust-center\">\r\n      <div className=\"modal-container flex-col fgap-16p falign-center\">\r\n        <div className=\"x-close\"><button\r\n          onClick={() => dispatch({ type: 'updateModal', data: false })}>\r\n          <i className=\"fa-solid fa-xmark\"></i></button>\r\n        </div>\r\n        <div className=\"modal-title\">\r\n          Update Training History:\r\n        </div>\r\n        <form className=\"flex-col falign-center fjust-center\r\n                 gap-16p\">\r\n          {/* first input */}\r\n\r\n          {/* second input */}\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              Training:\r\n            </label>\r\n            <select\r\n              value={state.trainingTypeId}\r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterValue', data: e.currentTarget.value, field: 'trainingTypeId' })\r\n              }}\r\n            >\r\n              <option value='0'>Select Training</option>\r\n              {state.trainingTypes && state.trainingTypes.map((trainingType, index) => {\r\n                return (<option key={index} value={trainingType.id}>{trainingType.name}</option>)\r\n              })}\r\n            </select>\r\n          </div>\r\n          {/* second input */}\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              Start date:\r\n            </label>\r\n            <input\r\n              type={'date'}\r\n              value={state.startDate}\r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterDate', data: e.currentTarget.value, field: 'startDate' })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              End date:\r\n            </label>\r\n            <input\r\n              type={'date'}\r\n              min={state.minDate}\r\n              value={state.endDate}\r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterDate', data: e.currentTarget.value, field: 'endDate' })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n       \r\n \r\n\r\n        </form>\r\n        <div className=\"add-treatment-button-container flex-row gap-24p fjust-center\">\r\n          {state.missingInput && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto', marginTop: '1rem' }}>Please Select all necessary fields </p>}\r\n          <button\r\n            disabled={state.isUpdatingTraining}\r\n            onClick={() => {\r\n              dispatch({ type: 'startUpdating' })\r\n            }}\r\n            className=\"btn-rec-purple\">Update</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default UpdatetTraining","\r\n\r\n\r\nimport React from 'react'\r\n\r\nconst AddPetTraining = ({ dispatch, state }) => {\r\n  return (\r\n    <div className=\"add-modal-background flex falign-center fjust-center\">\r\n      <div className=\"modal-container flex-col fgap-16p falign-center\">\r\n        <div \r\n        className=\"x-close\"><button\r\n          onClick={() => {\r\n            if (state.isSavingTraining)\r\n              return\r\n            dispatch({ type: 'addModal', data: false })}\r\n\r\n          }>\r\n          <i className=\"fa-solid fa-xmark\"></i></button>\r\n        </div>\r\n        <div className=\"modal-title\">\r\n          Add new Training:\r\n        </div>\r\n        <form className=\"flex-col falign-center fjust-center\r\n                 gap-16p\">\r\n          {/* first input */}\r\n\r\n          {/* second input */}\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              Training:\r\n            </label>\r\n            <select\r\n              value={state.trainingTypeId}\r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterValue', data: e.currentTarget.value, field: 'trainingTypeId' })\r\n              }}\r\n            >\r\n              <option value='0'>Select Training</option>\r\n              {state.trainingTypes && state.trainingTypes.map((trainingType, index) => {\r\n                return (<option key={index} value={trainingType.id}>{trainingType.name}</option>)\r\n              })}\r\n            </select>\r\n          </div>\r\n          {/* second input */}\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              Start date:\r\n            </label>\r\n            <input\r\n              type={'date'}\r\n              value={state.startDate}\r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterDate', data: e.currentTarget.value, field: 'startDate' })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"update-style flex-row fjust-between falign-center gap-16p\">\r\n            <label>\r\n              End date:\r\n            </label>\r\n            <input\r\n              type={'date'}\r\n              min={state.minDate}\r\n              value={state.endDate}\r\n              onChange={(e) => {\r\n                dispatch({ type: 'enterDate', data: e.currentTarget.value, field: 'endDate' })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n       \r\n \r\n\r\n        </form>\r\n        <div className=\"add-treatment-button-container flex-row gap-24p fjust-center\">\r\n          {state.missingInput && <p style={{ color: 'red', textAlign: 'center', width: '70%', margin: 'auto', marginTop: '1rem' }}>Please Select all necessary fields </p>}\r\n          <button \r\n          onClick={() => {\r\n            if (state.isSavingTraining)\r\n              return\r\n            dispatch({ type: 'startTraining' })\r\n          }}\r\n          className=\"btn-rec-purple\">Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPetTraining","import { useReducer } from 'react'\r\nimport dateFormat from 'dateformat'\r\n\r\nconst trainingHistoryReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'updateModal': {\r\n      if (action.data === false)\r\n        return {\r\n          ...state,\r\n          updateTrainingModal: action.data,\r\n          TrainingId: 0,\r\n          trainingTypeId: 0,\r\n          missingInput: false,\r\n          startDate: dateFormat(new Date(), 'UTC:yyyy-mm-dd'),\r\n          endDate: dateFormat(new Date(new Date().setUTCHours(new Date().getUTCHours() + 24)), 'UTC:yyyy-mm-dd'),\r\n          minDate: dateFormat(new Date(new Date().setUTCHours(new Date().getUTCHours() + 24)), 'UTC:yyyy-mm-dd'),\r\n        }\r\n      else\r\n        return {\r\n          ...state,\r\n          missingInput: false,\r\n          updateTrainingModal: action.data,\r\n          addTrainingModal: false,\r\n          trainingId: action.trainingId,\r\n          startDate: dateFormat(action.trObj.start_date, 'UTC:yyyy-mm-dd'),\r\n          endDate: dateFormat(action.trObj.end_date, 'UTC:yyyy-mm-dd'),\r\n          minDate: dateFormat(new Date(new Date(action.trObj.start_date).setUTCHours(new Date().getUTCHours() + 24)), 'UTC:yyyy-mm-dd'),\r\n          trainingTypeId: action.trObj.training_type_id,\r\n        }\r\n    }\r\n    case 'addModal': {\r\n\r\n      return {\r\n        ...state,\r\n        addTrainingModal: action.data,\r\n        updateTrainingModal: false,\r\n        trainingTypeId: 0,\r\n        missingInput: false,\r\n      }\r\n\r\n    }\r\n\r\n    case 'getTrainingsSuccess':\r\n      return {\r\n        ...state,\r\n        isGettingTrainings: false,\r\n        trainings: action.data\r\n      }\r\n    case 'getTrainingsFailure':\r\n      return {\r\n        ...state,\r\n        isGettingTrainings: false,\r\n        getTrainingsFailure: action.error\r\n      }\r\n    case 'getTrainingTypesSuccess':\r\n      return {\r\n        ...state,\r\n        isGettingTrainingTypes: false,\r\n        trainingTypes: action.data\r\n\r\n      }\r\n    case 'getTrainingTypesFailure':\r\n      return {\r\n        ...state,\r\n        isGettingTrainingTypes: false,\r\n        getTrainingTypesFailure: action.error\r\n      }\r\n\r\n    case 'getReset':\r\n      return {\r\n        isGettingTrainings: false,\r\n      }\r\n\r\n    case 'prepareAddTraining':\r\n      return {\r\n        ...state,\r\n        appId: action.data.appId,\r\n        petId: action.data.petId\r\n\r\n      }\r\n    case 'enterValue':\r\n      return {\r\n        ...state,\r\n        [action.field]: parseInt(action.data)\r\n      }\r\n    case 'enterDate':\r\n      if (action.field === 'startDate')\r\n        return {\r\n          ...state,\r\n          [action.field]: action.data,\r\n          minDate: dateFormat(new Date(new Date(action.data).setUTCHours(new Date().getUTCHours() + 24)), 'UTC:yyyy-mm-dd'),\r\n          endDate: dateFormat(new Date(new Date(action.data).setUTCHours(new Date().getUTCHours() + 24)), 'UTC:yyyy-mm-dd')\r\n        }\r\n      return {\r\n        ...state,\r\n        [action.field]: action.data\r\n      }\r\n\r\n\r\n    case 'startTraining': {\r\n      // validation\r\n      if (!state.trainingTypeId)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n      return {\r\n        ...state,\r\n        missingInput: false,\r\n        isSavingTraining: true\r\n      }\r\n\r\n    }\r\n    case 'startUpdating': {\r\n      if (!state.trainingTypeId)\r\n        return {\r\n          ...state,\r\n          missingInput: true\r\n        }\r\n      return {\r\n        ...state,\r\n        missingInput: false,\r\n        isUpdatingTraining: true\r\n      }\r\n\r\n    }\r\n    case 'saveTrainingSuccess':\r\n      return {\r\n        ...state,\r\n        isSavingTraining: false,\r\n        savingTrainingResult: action.data.result,\r\n        savingTrainingFailure: ''\r\n      }\r\n    case 'updateTrainingSuccess':\r\n      return {\r\n        ...state,\r\n        isUpdatingTraining: false,\r\n        updateTrainingResult: action.data.result,\r\n        updateTrainingFailure: ''\r\n      }\r\n    case 'saveTrainingFailure':\r\n      return {\r\n        ...state,\r\n        isSavingTraining: false,\r\n        savingTrainingFailure: action.error\r\n      }\r\n    case 'updateTrainingFailure':\r\n      return {\r\n        ...state,\r\n        isUpdatingTraining: false,\r\n        updateTrainingFailure: action.error\r\n      }\r\n    case 'errorModalExit':\r\n      return {\r\n        ...state,\r\n        getTrainingsFailure: '',\r\n        savingTrainingFailure: '',\r\n        updateTrainingFailure: ''\r\n      }\r\n    default:\r\n      break\r\n  }\r\n}\r\nconst useTrainingHistory = (initialData) => {\r\n  const [state, dispatch] = useReducer(trainingHistoryReducer, initialData)\r\n  return [state, dispatch]\r\n}\r\nexport default useTrainingHistory","\r\nimport { useEffect, useContext } from 'react'\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\nimport UpdateTraining from './UpdateTraining';\r\nimport AddPetTraining from './AddPetTraining';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { authContext } from '../../../shared/context/auth-context';\r\nimport { pageLoadingContext } from '../../../shared/context/loading-context';\r\nimport useFetch from '../../../shared/hooks/fetch-hook';\r\nimport useTrainingHistory from '../../../shared/hooks/traininghistory-hook';\r\nimport Modal from '../../../utils/modal/Modal'\r\nimport dateFormat from 'dateformat';\r\n\r\nconst initialData = {\r\n  updateTrainingModal: false,\r\n  addTrainingModal: false,\r\n\r\n  isGettingTrainings: true,\r\n  trainings: null,\r\n  getTrainingsFailure: '',\r\n\r\n  presShowId: null,\r\n\r\n\r\n  startDate: dateFormat(new Date(), 'UTC:yyyy-mm-dd'),\r\n  endDate: dateFormat(new Date(new Date().setUTCHours(new Date().getUTCHours() + 24)), 'UTC:yyyy-mm-dd'),\r\n  minDate: dateFormat(new Date(new Date().setUTCHours(new Date().getUTCHours() + 24)), 'UTC:yyyy-mm-dd'),\r\n  petId: 0,\r\n  appId: 0,\r\n  trainingTypeId: 0,\r\n\r\n  trainingId: 0,\r\n\r\n  trainingTypes: null,\r\n  isGettingTrainingTypes: true,\r\n  getTrainingTypesFailure: '',\r\n\r\n  missingInput: false,\r\n  isSavingTraining: false,\r\n  savingTrainingResult: '',\r\n  savingTrainingFailure: '',\r\n\r\n  isUpdatingTraining: false,\r\n  updateTrainingResult: '',\r\n  updateTrainingFailure: ''\r\n\r\n\r\n\r\n}\r\nconst PetTrainingHistory = () => {\r\n  const location = useLocation()\r\n  const auth = useContext(authContext)\r\n  const setPageIsLoading = useContext(pageLoadingContext).setPageIsLoading\r\n  const sendRequest = useFetch()\r\n  const [state, dispatch] = useTrainingHistory(initialData)\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getTrainings = async (appId) => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}trainer/trainings/${appId}`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (isMount && response) {\r\n          dispatch({ type: 'getTrainingsSuccess', data: response })\r\n          dispatch({ type: 'prepareAddTraining', data: { petId: location.state.petId, appId: location.state.appId } })\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'getTrainingsFailure', error: e.message })\r\n      }\r\n    }\r\n    if (location.state) {\r\n      getTrainings(location.state.appId)\r\n    } else\r\n      dispatch({ type: 'getReset' })\r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, location.state, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const getTrainingTypes = async () => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}trainer/trainingtypes`, 'GET', null, {\r\n          'Authorization': `Bearer ${auth.token}`\r\n        })\r\n        if (isMount && response) {\r\n          dispatch({ type: 'getTrainingTypesSuccess', data: response })\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'getTrainingTypesFailure', error: e.message })\r\n      }\r\n    }\r\n    if (location.state) {\r\n      getTrainingTypes()\r\n    } else\r\n      dispatch({ type: 'getReset' })\r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, location.state, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const saveTraining = async () => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}trainer/trainings`, 'POST', JSON.stringify({\r\n          startDate: state.startDate,\r\n          endDate: state.endDate,\r\n          petId: state.petId,\r\n          appId: state.appId,\r\n          trainingTypeId: state.trainingTypeId,\r\n        }), {\r\n          'Authorization': `Bearer ${auth.token}`,\r\n          'Content-Type': 'application/json'\r\n        })\r\n        if (isMount && response) {\r\n          dispatch({ type: 'saveTrainingSuccess', data: response })\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'saveTrainingFailure', error: e.message })\r\n      }\r\n    }\r\n    \r\n    if (state.isSavingTraining)\r\n      saveTraining()\r\n  \r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, state.appId, state.isSavingTraining, state.petId, state.startDate, state.endDate, state.trainingTypeId, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    let isMount = true\r\n    const updateTraining = async () => {\r\n      try {\r\n        const response = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}trainer/trainings`, 'PATCH', JSON.stringify({\r\n          startDate: state.startDate,\r\n          endDate: state.endDate,\r\n          trainingId: state.trainingId,\r\n          petId: state.petId,\r\n          appId: state.appId,\r\n          trainingTypeId: state.trainingTypeId\r\n        }), {\r\n          'Authorization': `Bearer ${auth.token}`,\r\n          'Content-Type': 'application/json'\r\n        })\r\n        if (isMount && response) {\r\n          dispatch({ type: 'updateTrainingSuccess', data: response })\r\n        }\r\n      } catch (e) {\r\n        if (isMount)\r\n          dispatch({ type: 'updateTrainingFailure', error: e.message })\r\n      }\r\n    }\r\n    \r\n    if (state.isUpdatingTraining)\r\n      updateTraining()\r\n  \r\n\r\n    return () => {\r\n      setPageIsLoading(false)\r\n      isMount = false\r\n    }\r\n  }, [auth.token, dispatch, state.appId, state.isUpdatingTraining, state.trainingId, state.petId, state.startDate, state.endDate, state.trainingTypeId, sendRequest, setPageIsLoading])\r\n\r\n  useEffect(() => {\r\n    setPageIsLoading(state.isGettingTrainings || state.isSavingTraining || state.isUpdatingTraining || state.getTrainingTypesFailure)\r\n  }, [setPageIsLoading, state.isGettingTrainings, state.isSavingTraining, state.isUpdatingTraining, state.getTrainingTypesFailure])\r\n\r\n\r\n  return (\r\n    <>\r\n      {(state.savingTrainingResult || state.updateTrainingResult) && <Modal\r\n        modalClass='success'\r\n        header='Success!!'\r\n        body={state.savingTrainingResult || state.updateTrainingResult}\r\n        dispatch={dispatch}\r\n        refresh={true}\r\n      />}\r\n      {(state.getTrainingsFailure ||  state.savingTrainingFailure || state.updateTrainingFailure || state.getTrainingTypesFailure) &&\r\n        <Modal\r\n          modalClass='error'\r\n          header='Oops!!'\r\n          body={state.getTrainingsFailure ||  state.savingTrainingFailure || state.updateTrainingFailure || state.getTrainingTypesFailure}\r\n          dispatch={dispatch}\r\n        />}\r\n      <h4>Pet Training</h4>\r\n      {location.state ? <div className=\"flex-col falign-center fjust-center\">\r\n        <div className=\"search-bar-container flex-row fjust-center falign-center gap-16p\">\r\n          {\r\n            <button className=\"btn-sm\"\r\n              onClick={() => {\r\n                dispatch({ type: \"addModal\", data: true })\r\n              }}>\r\n              Add Training\r\n            </button>\r\n          }\r\n        </div>\r\n\r\n        {\r\n          state.updateTrainingModal &&\r\n          <UpdateTraining dispatch={dispatch} state={state} />\r\n\r\n        }\r\n\r\n        {\r\n          state.addTrainingModal &&\r\n          <AddPetTraining dispatch={dispatch} state={state} />\r\n        }\r\n\r\n\r\n        <Table className=\"my-table\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>\r\n                Start Date\r\n              </Th>\r\n              <Th>\r\n                End Date\r\n              </Th>\r\n              <Th>\r\n                Training\r\n              </Th>\r\n              <Th>\r\n                Trainer\r\n              </Th>\r\n              <Th>\r\n                Pet Name\r\n              </Th>\r\n              <Th>\r\n                Edit\r\n              </Th>\r\n\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {state.trainings && state.trainings.map((training, index) => {\r\n              return (\r\n                <Tr key={index}>\r\n                  <Td>\r\n                    {dateFormat(training.start_date, 'UTC: yyyy-mm-dd')}\r\n                  </Td>\r\n                  <Td>\r\n                    {dateFormat(training.end_date, 'UTC: yyyy-mm-dd')}\r\n                  </Td>\r\n                  <Td>\r\n                    {training.training_type}\r\n                  </Td>\r\n                  <Td>\r\n                    {`${training.first_name ? training.first_name : '-'} ${training.last_name ? training.last_name : '-'}`}\r\n                  </Td>\r\n                  <Td>\r\n                    {training.pet_name}\r\n                  </Td>\r\n           \r\n              \r\n\r\n                  \r\n                  <Td>\r\n                    <button \r\n                    disabled={training.trainer_id !== auth.userId || !training.trainer_id}\r\n                    className=\"btn-sm\"\r\n                      onClick={() => {\r\n                        dispatch({ type: \"updateModal\", data: true, trObj: training, trainingId: training.id })\r\n                      }}>\r\n                      Edit\r\n                    </button>\r\n\r\n                  </Td>\r\n\r\n                </Tr>\r\n              )\r\n            })}\r\n          </Tbody>\r\n\r\n\r\n        </Table>\r\n\r\n\r\n\r\n\r\n      </div> :\r\n        <p>No active appointment is selected at the moment you can select an active appointment from 'Active Appointments' tab to start the training</p>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PetTrainingHistory","\r\n\r\n// this custom hook contains the logic of sending a request to the server and getting databack, we wrap it with a useCallback so that it won't create the function every time the component using the hooks rerenders\r\n\r\nimport { useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n\r\n  const sendRequest = useCallback(async (\r\n    url,\r\n    method = 'GET',\r\n    body = null,\r\n    headers = {},\r\n\r\n\r\n  ) => {\r\n    try {\r\n      // 'Content-Type': 'application/json'\r\n      const response = await fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      const parsedData = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(parsedData.error)\r\n      }\r\n      return parsedData\r\n      \r\n    } catch (e) {\r\n      throw e\r\n    }\r\n    \r\n    \r\n  \r\n  \r\n  }, []) \r\n  return sendRequest\r\n}\r\nexport default useFetch","const modalMotion = {\r\n  initial: {\r\n    y: '-100vh',\r\n  },\r\n  final: {\r\n    y: 0,\r\n  },\r\n  exit: {\r\n    y: '-100vh'\r\n  }\r\n}\r\nexport default modalMotion","import { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useState } from \"react\"\r\nimport modalMotion from \"./modalMotion\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst modalVariant = modalMotion\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [show, setShow] = useState(true)\r\n  const navigate = useNavigate()\r\n  return (\r\n    <>\r\n      <div className={`modal modal_${props.modalClass}`}>\r\n        <AnimatePresence>\r\n          {show && <motion.div \r\n          variants={modalVariant}\r\n          initial='initial'\r\n          animate='final'\r\n          exit='exit'\r\n\r\n          className={`modal-container modal-container__${props.modalClass} flex-col gap-16p falign-center`}>\r\n\r\n            <header className={`modal-header modal-header__${props.modalClass}`}>\r\n              {props.header}\r\n            </header>\r\n            <div className={`flex-col gap-8p modal-body modal-body__${props.modalClass}`}>\r\n              {props.body}\r\n            </div>\r\n            <footer className={`modal-footer modal-footer__${props.modalClass}`}>\r\n            {(props.modalClass === 'check' || props.modalClass === 'edit') && \r\n                <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  setTimeout(() => {props.dispatch({ type: 'finalConfirm' })}, 300)\r\n                  \r\n                }}\r\n                className='btn-rec modal-button modal-button__confirm'>Confirm </button>\r\n              }\r\n              <button\r\n                onClick={() => {\r\n                  setShow(false)\r\n                  if (props.refresh)\r\n                    return  setTimeout(() => {window.location.reload()}, 300)\r\n                  if (props.redirectTo)\r\n                    return setTimeout(() => {navigate(props.redirectTo)}, 300)\r\n                    \r\n                  setTimeout(() => {props.dispatch({ type: `${props.modalClass}ModalExit` })}, 300)\r\n                  \r\n                }}\r\n                className={`btn-rec modal-button modal-button__${props.modalClass}`}>{props.modalClass === 'success' ? 'OK' : props.modalClass === 'check' ? 'Cancel' :props.modalClass === 'edit' ? 'Cancel' : 'Exit'}</button>\r\n\r\n              \r\n              \r\n            </footer>\r\n\r\n          </motion.div>}\r\n        </AnimatePresence>\r\n\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n  // modalClass, header, body, modalButtonClass, modalType\r\n}\r\n\r\nexport default Modal"],"sourceRoot":""}